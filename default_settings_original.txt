#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = default_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.001
# 43200s == 12h
Scenario.endTime = 43200

Events.nrof=0


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
wifiInterface.type = BSInterface
# Transmit speed of 2 Mbps = 250kBps
#wifiInterface.transmitSpeed = 6750k
#wifiInterface.transmitRange = 30

wifiInterface.transmitSpeeds = 6750k, 6750k, 6750k, 6000k, 6000k, 4500k, 3000k, 2250k, 1500k, 1125k, 750k, 250k, 125k
wifiInterface.transmitRange = 91

# dummy speed
wifiInterface.transmitSpeed = 0


# High speed, long range, interface for group 4
backhaul.type = SimpleBroadcastInterface
backhaul.transmitSpeed = 1G
backhaul.transmitRange = 10000

# Define 6 different node groups
Scenario.nrofHostGroups = 17

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
Group.router = DeliverToBS
#Group.router = DirectDeliveryRouter
Group.bufferSize = 500M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = wifiInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

Group.initialEnergy = 100
Group.scanEnergy = 0.1
Group.scanResponseEnergy = 0.001
Group.transmitEnergy = 0.01
Group.transmitEnergy = 0.01
Group.Energy.value = 100


Group.nrofHosts = 20

# group1 (pedestrians) specific settings
# Group1.groupID = a
# Group1.nrofHosts = 4
# Group1.movementModel = MapRouteMovement
# Group1.routeFile = data/bs.wkt
# Group1.routeType = 1
# Group1.nrofInterfaces = 2
# Group1.interface1 = wifiInterface
# Group1.interface2 = backhaul
# Group1.router = APRouter


# group1 (pedestrians) specific settings
Group1.groupID = p

Group2.groupID = p

Group3.groupID = p

Group4.groupID = p

Group5.groupID = p

Group6.groupID = p

Group7.groupID = p

Group8.groupID = p

Group9.groupID = p

Group10.groupID = p

Group11.groupID = p

Group12.groupID = p

# group13 specific settings
Group13.groupID = c
# cars can drive only on roads
Group13.okMaps = 1
# 10-50 km/h
Group13.speed = 2.7, 13.9

# another group of pedestrians
Group14.groupID = w

# The Tram groups
Group15.groupID = t
Group15.bufferSize = 50M
Group15.movementModel = MapRouteMovement
Group15.routeFile = data/tram3.wkt
Group15.routeType = 1
Group15.waitTime = 10, 30
Group15.speed = 7, 10
Group15.nrofHosts = 2
#Group15.nrofInterfaces = 2
#Group15.interface1 = btInterface
#Group15.interface2 = highspeedInterface

Group16.groupID = t
Group16.bufferSize = 50M
Group16.movementModel = MapRouteMovement
Group16.routeFile = data/tram4.wkt
Group16.routeType = 2
Group16.waitTime = 10, 30
Group16.speed = 7, 10
Group16.nrofHosts = 2

Group17.groupID = t
Group17.bufferSize = 50M
Group17.movementModel = MapRouteMovement
Group17.routeFile = data/tram10.wkt
Group17.routeType = 2
Group17.waitTime = 10, 30
Group17.speed = 7, 10
Group17.nrofHosts = 2


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 3
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport
Report.report3 = EnergyLevelReport

EnergyLevelReport.granularity = 1
#EnergyLevelReport.nodes = p1, p2, p3

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
