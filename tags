!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT	src/input/StandardEventsReader.java	/^	public static final String ABORT = "A";$/;"	f	class:StandardEventsReader
ABORTED	src/input/MessageRelayEvent.java	/^	public static final int ABORTED = 3;$/;"	f	class:MessageRelayEvent
ABOUT_TEXT	src/gui/SimMenuBar.java	/^	public static final String ABOUT_TEXT =$/;"	f	class:SimMenuBar
ABOUT_TITLE	src/gui/SimMenuBar.java	/^	public static final String ABOUT_TITLE = "about ONE";$/;"	f	class:SimMenuBar
ACTIVE_PERIODS_OFFSET_S	src/util/ActivenessHandler.java	/^	public static final String ACTIVE_PERIODS_OFFSET_S = "activePeriodsOffset";$/;"	f	class:ActivenessHandler
ACTIVE_PERIODS_S	src/util/ActivenessHandler.java	/^	public static final String ACTIVE_PERIODS_S = "activePeriods";$/;"	f	class:ActivenessHandler
ACTIVE_TIMES_S	src/util/ActivenessHandler.java	/^	public static final String ACTIVE_TIMES_S = "activeTimes";$/;"	f	class:ActivenessHandler
ACTIVITY_FILE_S	src/movement/ExternalPathMovement.java	/^	public static final String ACTIVITY_FILE_S = "activeFile";$/;"	f	class:ExternalPathMovement
ACT_JITTER_S	src/core/NetworkInterface.java	/^	public static final String ACT_JITTER_S = "activenessOffsetJitter";$/;"	f	class:NetworkInterface
ADD_TOPOLOGY	src/test/WKTReaderTest.java	/^	private String ADD_TOPOLOGY = "LINESTRING (3.0 3.0, 5.0 3.0)";$/;"	f	class:WKTReaderTest	file:
ADD_TOPOLOGY2	src/test/WKTReaderTest.java	/^	private String ADD_TOPOLOGY2 = "LINESTRING (3.0 3.0, 3.0 5.0)";$/;"	f	class:WKTReaderTest	file:
ALL_MESSAGES_ID	src/input/StandardEventsReader.java	/^	public static final String ALL_MESSAGES_ID = "*";$/;"	f	class:StandardEventsReader
ALPHA_S	src/routing/MaxPropRouter.java	/^	public static final String ALPHA_S = "alpha";$/;"	f	class:MaxPropRouter
APPCOUNT_S	src/core/SimScenario.java	/^	public static final String APPCOUNT_S = "nrofApplications";$/;"	f	class:SimScenario
APPTYPE_NS	src/core/SimScenario.java	/^	public static final String APPTYPE_NS = "Application";$/;"	f	class:SimScenario
APPTYPE_S	src/core/SimScenario.java	/^	public static final String APPTYPE_S = "type";$/;"	f	class:SimScenario
APP_ID	src/applications/PingApplication.java	/^	public static final String APP_ID = "fi.tkk.netlab.PingApplication";$/;"	f	class:PingApplication
APP_PACKAGE	src/core/SimScenario.java	/^	private static final String APP_PACKAGE = "applications.";$/;"	f	class:SimScenario	file:
AT_HOME_MODE	src/movement/HomeActivityMovement.java	/^	private static final int AT_HOME_MODE = 1;$/;"	f	class:HomeActivityMovement	file:
AT_OFFICE_MODE	src/movement/OfficeActivityMovement.java	/^	private static final int AT_OFFICE_MODE = 1;$/;"	f	class:OfficeActivityMovement	file:
AUCTION_PERIOD_S	src/core/SimScenario.java	/^    public static final String AUCTION_PERIOD_S = "auctionPeriod";$/;"	f	class:SimScenario
AUTO_REFRESH_DELAY	src/gui/NodeChooser.java	/^	private static final int AUTO_REFRESH_DELAY = 100;$/;"	f	class:NodeChooser	file:
AUTO_REFRESH_DELAY	src/gui/RoutingInfoWindow.java	/^	private static final int AUTO_REFRESH_DELAY = 1000;$/;"	f	class:RoutingInfoWindow	file:
AbstractRouterTest	src/test/AbstractRouterTest.java	/^public abstract class AbstractRouterTest extends TestCase {$/;"	c
ActiveRouter	src/routing/ActiveRouter.java	/^	protected ActiveRouter(ActiveRouter r) {$/;"	m	class:ActiveRouter
ActiveRouter	src/routing/ActiveRouter.java	/^	public ActiveRouter(Settings s) {$/;"	m	class:ActiveRouter
ActiveRouter	src/routing/ActiveRouter.java	/^public abstract class ActiveRouter extends MessageRouter {$/;"	c
ActiveTime	src/input/ExternalPathMovementReader.java	/^	public class ActiveTime {$/;"	c	class:ExternalPathMovementReader
ActivenessHandler	src/util/ActivenessHandler.java	/^	public ActivenessHandler(Settings s) {$/;"	m	class:ActivenessHandler
ActivenessHandler	src/util/ActivenessHandler.java	/^public class ActivenessHandler {$/;"	c
ActivenessHandlerTest	src/test/ActivenessHandlerTest.java	/^public class ActivenessHandlerTest extends TestCase {$/;"	c
AdjacencyGraphvizReport	src/report/AdjacencyGraphvizReport.java	/^	public AdjacencyGraphvizReport() {$/;"	m	class:AdjacencyGraphvizReport
AdjacencyGraphvizReport	src/report/AdjacencyGraphvizReport.java	/^public class AdjacencyGraphvizReport extends Report implements ConnectionListener {$/;"	c
AdjacencyGraphvizReportTest	src/test/AdjacencyGraphvizReportTest.java	/^public class AdjacencyGraphvizReportTest extends TestCase {$/;"	c
AllTests	src/test/AllTests.java	/^public class AllTests {$/;"	c
Application	src/core/Application.java	/^	public Application(){$/;"	m	class:Application
Application	src/core/Application.java	/^	public Application(Application app){$/;"	m	class:Application
Application	src/core/Application.java	/^public abstract class Application {$/;"	c
ApplicationListener	src/core/ApplicationListener.java	/^public interface ApplicationListener {$/;"	i
ArithmeticCondition	src/core/ArithmeticCondition.java	/^	public ArithmeticCondition(String cond) {$/;"	m	class:ArithmeticCondition
ArithmeticCondition	src/core/ArithmeticCondition.java	/^public class ArithmeticCondition {$/;"	c
BATCH_MODE_FLAG	src/core/DTNSim.java	/^	public static final String BATCH_MODE_FLAG = "-b";$/;"	f	class:DTNSim
BETA_S	src/routing/ProphetRouter.java	/^	public static final String BETA_S = "beta";$/;"	f	class:ProphetRouter
BETA_S	src/routing/ProphetRouterWithEstimation.java	/^	public static final String BETA_S = "beta";$/;"	f	class:ProphetRouterWithEstimation
BETA_S	src/routing/ProphetV2Router.java	/^	public static final String BETA_S = "beta";$/;"	f	class:ProphetV2Router
BG_COLOR	src/gui/playfield/MapGraphic.java	/^	private final Color BG_COLOR = Color.WHITE;$/;"	f	class:MapGraphic	file:
BINARY_EXT	src/input/BinaryEventsReader.java	/^	public static final String BINARY_EXT = ".binee";$/;"	f	class:BinaryEventsReader
BINARY_MODE	src/routing/SprayAndWaitRouter.java	/^	public static final String BINARY_MODE = "binaryMode";$/;"	f	class:SprayAndWaitRouter
BUCKET_COUNT_SETTING	src/report/JumpSizeDistributionReport.java	/^	public static final String BUCKET_COUNT_SETTING = "bucketCount";$/;"	f	class:JumpSizeDistributionReport
BUFFER_REPORT_INTERVAL	src/report/BufferOccupancyReport.java	/^	public static final String BUFFER_REPORT_INTERVAL = "occupancyInterval";$/;"	f	class:BufferOccupancyReport
BUFFER_SIZE	src/test/AbstractRouterTest.java	/^	protected static final int BUFFER_SIZE = 100;$/;"	f	class:AbstractRouterTest
BUS_CONTROL_SYSTEM_NR	src/movement/BusControlSystem.java	/^	public static final String BUS_CONTROL_SYSTEM_NR = "busControlSystemNr";$/;"	f	class:BusControlSystem
BUS_TO_EVENING_ACTIVITY_MODE	src/movement/WorkingDayMovement.java	/^	private static final int BUS_TO_EVENING_ACTIVITY_MODE = 2;$/;"	f	class:WorkingDayMovement	file:
BUS_TO_HOME_MODE	src/movement/WorkingDayMovement.java	/^	private static final int BUS_TO_HOME_MODE = 1;$/;"	f	class:WorkingDayMovement	file:
BUS_TO_WORK_MODE	src/movement/WorkingDayMovement.java	/^	private static final int BUS_TO_WORK_MODE = 0;$/;"	f	class:WorkingDayMovement	file:
BYTES_TRANSFERRED_AVG_SAMPLES	src/routing/MaxPropRouter.java	/^	public static int BYTES_TRANSFERRED_AVG_SAMPLES = 10;$/;"	f	class:MaxPropRouter
BYTES_TRANSFERRED_AVG_SAMPLES	src/routing/MaxPropRouterWithEstimation.java	/^	public static int BYTES_TRANSFERRED_AVG_SAMPLES = 10;$/;"	f	class:MaxPropRouterWithEstimation
B_SIZE_S	src/routing/MessageRouter.java	/^	public static final String B_SIZE_S = "bufferSize";$/;"	f	class:MessageRouter
BinaryEventsReader	src/input/BinaryEventsReader.java	/^	public BinaryEventsReader(File eventsFile) {$/;"	m	class:BinaryEventsReader
BinaryEventsReader	src/input/BinaryEventsReader.java	/^public class BinaryEventsReader implements ExternalEventsReader {$/;"	c
BufferOccupancyReport	src/report/BufferOccupancyReport.java	/^	public BufferOccupancyReport() {$/;"	m	class:BufferOccupancyReport
BufferOccupancyReport	src/report/BufferOccupancyReport.java	/^public class BufferOccupancyReport extends Report implements UpdateListener {$/;"	c
BusControlSystem	src/movement/BusControlSystem.java	/^	private BusControlSystem(int systemID) {$/;"	m	class:BusControlSystem	file:
BusControlSystem	src/movement/BusControlSystem.java	/^public class BusControlSystem {$/;"	c
BusMovement	src/movement/BusMovement.java	/^	public BusMovement(BusMovement proto) {$/;"	m	class:BusMovement
BusMovement	src/movement/BusMovement.java	/^	public BusMovement(Settings settings) {$/;"	m	class:BusMovement
BusMovement	src/movement/BusMovement.java	/^public class BusMovement extends MapRouteMovement {$/;"	c
BusTravellerMovement	src/movement/BusTravellerMovement.java	/^	public BusTravellerMovement(BusTravellerMovement proto) {$/;"	m	class:BusTravellerMovement
BusTravellerMovement	src/movement/BusTravellerMovement.java	/^	public BusTravellerMovement(Settings settings) {$/;"	m	class:BusTravellerMovement
BusTravellerMovement	src/movement/BusTravellerMovement.java	/^public class BusTravellerMovement extends MapBasedMovement implements$/;"	c
CBRConnection	src/core/CBRConnection.java	/^	public CBRConnection(DTNHost fromNode, NetworkInterface fromInterface,$/;"	m	class:CBRConnection
CBRConnection	src/core/CBRConnection.java	/^public class CBRConnection extends Connection {$/;"	c
CELL_SIZE_MULT_S	src/interfaces/ConnectivityGrid.java	/^	public static final String CELL_SIZE_MULT_S = "cellSizeMult";$/;"	f	class:ConnectivityGrid
CIRCULAR	src/movement/map/MapRoute.java	/^	public static final int CIRCULAR = 1;$/;"	f	class:MapRoute
CLASS_PACKAGE	src/input/EventQueueHandler.java	/^	public static final String CLASS_PACKAGE = "input";$/;"	f	class:EventQueueHandler
CLASS_SETTING	src/input/EventQueueHandler.java	/^	public static final String CLASS_SETTING = "class";$/;"	f	class:EventQueueHandler
CLAs	src/core/DTN2Manager.java	/^	private static Map<DTNHost, CLAParser>	CLAs = null;$/;"	f	class:DTN2Manager	file:
CLOCK_STEP	src/test/ExternalMovementTest.java	/^	private static final double CLOCK_STEP = 10;$/;"	f	class:ExternalMovementTest	file:
CLUSTER_CENTER	src/movement/ClusterMovement.java	/^	public static final String	CLUSTER_CENTER = "clusterCenter";$/;"	f	class:ClusterMovement
CLUSTER_RANGE	src/movement/ClusterMovement.java	/^	public static final String	CLUSTER_RANGE = "clusterRange";$/;"	f	class:ClusterMovement
COMMENT_PREFIX	src/input/ExternalMovementReader.java	/^	public static final String COMMENT_PREFIX = "#";$/;"	f	class:ExternalMovementReader
CONNECTION	src/input/StandardEventsReader.java	/^	public static final String CONNECTION = "CONN";$/;"	f	class:StandardEventsReader
CONNECTION_DOWN	src/input/StandardEventsReader.java	/^	public static final String CONNECTION_DOWN = "down";$/;"	f	class:StandardEventsReader
CONNECTION_UP	src/input/StandardEventsReader.java	/^	public static final String CONNECTION_UP = "up";$/;"	f	class:StandardEventsReader
CON_DOWN	src/core/NetworkInterface.java	/^	private static final int CON_DOWN = 2;$/;"	f	class:NetworkInterface	file:
CON_UP	src/core/NetworkInterface.java	/^	private static final int CON_UP = 1;$/;"	f	class:NetworkInterface	file:
COORDS_IN_MAP	src/test/PointsOfInterestTest.java	/^	private static final Coord[][] COORDS_IN_MAP = {$/;"	f	class:PointsOfInterestTest	file:
COORD_FORMAT	src/report/MovementNs2Report.java	/^	public static final String COORD_FORMAT = "%.5f";$/;"	f	class:MovementNs2Report
CREATE	src/input/StandardEventsReader.java	/^	public static final String CREATE = "C";$/;"	f	class:StandardEventsReader
CSV_RS_S	src/test/SettingsTest.java	/^	private static final String CSV_RS_S = "csvRunSetting";$/;"	f	class:SettingsTest	file:
CSV_RS_V	src/test/SettingsTest.java	/^	private static final int[] CSV_RS_V = {1,2,3,4};$/;"	f	class:SettingsTest	file:
CUSTODY_S	src/routing/WaveRouter.java	/^	public static final String CUSTODY_S = "custodyFraction";$/;"	f	class:WaveRouter
CarMovement	src/movement/CarMovement.java	/^	public CarMovement(CarMovement proto) {$/;"	m	class:CarMovement
CarMovement	src/movement/CarMovement.java	/^	public CarMovement(Settings settings) {$/;"	m	class:CarMovement
CarMovement	src/movement/CarMovement.java	/^public class CarMovement extends MapBasedMovement implements$/;"	c
ClusterMovement	src/movement/ClusterMovement.java	/^	private ClusterMovement(ClusterMovement cmv) {$/;"	m	class:ClusterMovement	file:
ClusterMovement	src/movement/ClusterMovement.java	/^	public ClusterMovement(Settings s) {$/;"	m	class:ClusterMovement
ClusterMovement	src/movement/ClusterMovement.java	/^public class ClusterMovement extends RandomWaypoint {$/;"	c
Connection	src/core/Connection.java	/^	public Connection(DTNHost fromNode, NetworkInterface fromInterface,$/;"	m	class:Connection
Connection	src/core/Connection.java	/^public abstract class Connection {$/;"	c
ConnectionEvent	src/input/ConnectionEvent.java	/^	public ConnectionEvent(int from, int to, String interf, boolean up, double time) {$/;"	m	class:ConnectionEvent
ConnectionEvent	src/input/ConnectionEvent.java	/^public class ConnectionEvent extends ExternalEvent {$/;"	c
ConnectionInfo	src/report/AdjacencyGraphvizReport.java	/^		public ConnectionInfo(DTNHost h1, DTNHost h2) {$/;"	m	class:AdjacencyGraphvizReport.ConnectionInfo
ConnectionInfo	src/report/AdjacencyGraphvizReport.java	/^	private class ConnectionInfo {$/;"	c	class:AdjacencyGraphvizReport
ConnectionInfo	src/report/ContactTimesReport.java	/^		public ConnectionInfo (DTNHost h1, DTNHost h2){$/;"	m	class:ContactTimesReport.ConnectionInfo
ConnectionInfo	src/report/ContactTimesReport.java	/^	protected class ConnectionInfo {$/;"	c	class:ContactTimesReport
ConnectionListener	src/core/ConnectionListener.java	/^public interface ConnectionListener {$/;"	i
ConnectionTest	src/test/ConnectionTest.java	/^public class ConnectionTest extends TestCase {$/;"	c
ConnectivityDtnsim2Report	src/report/ConnectivityDtnsim2Report.java	/^	public ConnectivityDtnsim2Report() {$/;"	m	class:ConnectivityDtnsim2Report
ConnectivityDtnsim2Report	src/report/ConnectivityDtnsim2Report.java	/^public class ConnectivityDtnsim2Report extends Report$/;"	c
ConnectivityGrid	src/interfaces/ConnectivityGrid.java	/^	private ConnectivityGrid(int cellSize) {$/;"	m	class:ConnectivityGrid	file:
ConnectivityGrid	src/interfaces/ConnectivityGrid.java	/^public class ConnectivityGrid extends ConnectivityOptimizer {$/;"	c
ConnectivityGridFactory	src/interfaces/ConnectivityGrid.java	/^	public static ConnectivityGrid ConnectivityGridFactory(int key,$/;"	m	class:ConnectivityGrid
ConnectivityONEReport	src/report/ConnectivityONEReport.java	/^	public ConnectivityONEReport() {$/;"	m	class:ConnectivityONEReport
ConnectivityONEReport	src/report/ConnectivityONEReport.java	/^public class ConnectivityONEReport extends Report$/;"	c
ConnectivityOptimizer	src/interfaces/ConnectivityOptimizer.java	/^abstract public class ConnectivityOptimizer {$/;"	c
Constants	src/core/Constants.java	/^	private Constants() {}$/;"	m	class:Constants	file:
Constants	src/core/Constants.java	/^public final class Constants {$/;"	c
ContactTimesReport	src/report/ContactTimesReport.java	/^	public ContactTimesReport() {$/;"	m	class:ContactTimesReport
ContactTimesReport	src/report/ContactTimesReport.java	/^public class ContactTimesReport extends Report implements ConnectionListener {$/;"	c
ContactTimesReportTest	src/test/ContactTimesReportTest.java	/^public class ContactTimesReportTest extends TestCase {$/;"	c
ContactsDuringAnICTReport	src/report/ContactsDuringAnICTReport.java	/^	public ContactsDuringAnICTReport() {$/;"	m	class:ContactsDuringAnICTReport
ContactsDuringAnICTReport	src/report/ContactsDuringAnICTReport.java	/^public class ContactsDuringAnICTReport extends Report$/;"	c
ContactsPerHourReport	src/report/ContactsPerHourReport.java	/^	public ContactsPerHourReport() {$/;"	m	class:ContactsPerHourReport
ContactsPerHourReport	src/report/ContactsPerHourReport.java	/^public class ContactsPerHourReport extends Report implements ConnectionListener {$/;"	c
ContinueBusTripDecider	src/movement/BusTravellerMovement.java	/^		public ContinueBusTripDecider(Random rng, double[] probabilities) {$/;"	m	class:BusTravellerMovement.ContinueBusTripDecider
ContinueBusTripDecider	src/movement/BusTravellerMovement.java	/^	class ContinueBusTripDecider {$/;"	c	class:BusTravellerMovement
Coord	src/core/Coord.java	/^	public Coord(double x, double y) {$/;"	m	class:Coord
Coord	src/core/Coord.java	/^public class Coord implements Cloneable, Comparable<Coord> {$/;"	c
CoordTest	src/test/CoordTest.java	/^public class CoordTest extends TestCase {$/;"	c
CreatedMessagesReport	src/report/CreatedMessagesReport.java	/^	public CreatedMessagesReport() {$/;"	m	class:CreatedMessagesReport
CreatedMessagesReport	src/report/CreatedMessagesReport.java	/^public class CreatedMessagesReport extends Report implements MessageListener {$/;"	c
DAY_LENGTH	src/movement/HomeActivityMovement.java	/^	private static final int DAY_LENGTH = 86000;$/;"	f	class:HomeActivityMovement	file:
DEBUG	src/core/Constants.java	/^	public static final boolean DEBUG = false;$/;"	f	class:Constants
DEFAULT_ALPHA	src/routing/MaxPropRouter.java	/^	public static final double DEFAULT_ALPHA = 1.0;$/;"	f	class:MaxPropRouter
DEFAULT_ALPHA	src/routing/MaxPropRouterWithEstimation.java	/^	public static final double DEFAULT_ALPHA = 1.0;$/;"	f	class:MaxPropRouterWithEstimation
DEFAULT_BETA	src/routing/ProphetRouter.java	/^	public static final double DEFAULT_BETA = 0.25;$/;"	f	class:ProphetRouter
DEFAULT_BETA	src/routing/ProphetRouterWithEstimation.java	/^	public static final double DEFAULT_BETA = 0.25;$/;"	f	class:ProphetRouterWithEstimation
DEFAULT_BETA	src/routing/ProphetV2Router.java	/^	public static final double DEFAULT_BETA = 0.9;$/;"	f	class:ProphetV2Router
DEFAULT_BUFFER_REPORT_INTERVAL	src/report/BufferOccupancyReport.java	/^	public static final int DEFAULT_BUFFER_REPORT_INTERVAL = 5;$/;"	f	class:BufferOccupancyReport
DEFAULT_GAMMA	src/routing/ProphetRouter.java	/^	public static final double DEFAULT_GAMMA = 0.98;$/;"	f	class:ProphetRouter
DEFAULT_GAMMA	src/routing/ProphetV2Router.java	/^	public static final double DEFAULT_GAMMA = 0.999885791;$/;"	f	class:ProphetV2Router
DEFAULT_GNUPLOT	src/report/NodeDensityReport.java	/^	public static final boolean DEFAULT_GNUPLOT = false;$/;"	f	class:NodeDensityReport
DEFAULT_GNUPLOT_FILE_EXTENSION	src/report/NodeDensityReport.java	/^	public static final String DEFAULT_GNUPLOT_FILE_EXTENSION = "png";$/;"	f	class:NodeDensityReport
DEFAULT_GNUPLOT_TERMINAL	src/report/NodeDensityReport.java	/^	public static final String DEFAULT_GNUPLOT_TERMINAL =$/;"	f	class:NodeDensityReport
DEFAULT_MAX_NROF_EVENTS	src/gui/EventLogPanel.java	/^	public static final int DEFAULT_MAX_NROF_EVENTS = 30;$/;"	f	class:EventLogPanel
DEFAULT_NROF_PRELOAD	src/input/ExternalEventsQueue.java	/^	public static final int DEFAULT_NROF_PRELOAD = 500;$/;"	f	class:ExternalEventsQueue
DEFAULT_ONLY_AVERAGE	src/report/NodeDensityReport.java	/^	public static final boolean DEFAULT_ONLY_AVERAGE = false;$/;"	f	class:NodeDensityReport
DEFAULT_PROB_SET_MAX_SIZE	src/routing/MaxPropRouter.java	/^    public static final int DEFAULT_PROB_SET_MAX_SIZE = 50;$/;"	f	class:MaxPropRouter
DEFAULT_PTARGET	src/routing/ProphetRouterWithEstimation.java	/^	public static final double DEFAULT_PTARGET = .2;$/;"	f	class:ProphetRouterWithEstimation
DEFAULT_SAMPLE_INTERVAL	src/report/SamplingReport.java	/^	public static final double DEFAULT_SAMPLE_INTERVAL = 60;$/;"	f	class:SamplingReport
DEFAULT_X_COUNT	src/report/NodeDensityReport.java	/^	public static final int DEFAULT_X_COUNT = 10;$/;"	f	class:NodeDensityReport
DEFAULT_Y_COUNT	src/report/NodeDensityReport.java	/^	public static final int DEFAULT_Y_COUNT = 10;$/;"	f	class:NodeDensityReport
DEF_CON_CELL_SIZE_MULT	src/interfaces/ConnectivityGrid.java	/^	public static final int DEF_CON_CELL_SIZE_MULT = 5;$/;"	f	class:ConnectivityGrid
DEF_INIT_LOC	src/movement/ExternalMovement.java	/^	private static final Coord DEF_INIT_LOC = new Coord(0,0);$/;"	f	class:ExternalMovement	file:
DEF_NODE_ARRAY	src/report/MovementNs2Report.java	/^	public static final String DEF_NODE_ARRAY = "$node_";$/;"	f	class:MovementNs2Report
DEF_NS_CMD	src/report/MovementNs2Report.java	/^	public static final String DEF_NS_CMD = "$ns_";$/;"	f	class:MovementNs2Report
DEF_PRECISION	src/report/Report.java	/^	public static final int DEF_PRECISION = 4;$/;"	f	class:Report
DEF_RANDOMIZE_UPDATES	src/core/World.java	/^	public static final boolean DEF_RANDOMIZE_UPDATES = true;$/;"	f	class:World
DEF_SETTINGS_FILE	src/core/Settings.java	/^	public static final String DEF_SETTINGS_FILE ="default_settings.txt";$/;"	f	class:Settings
DEF_SPEEDS	src/movement/MovementModel.java	/^	public static final double[] DEF_SPEEDS = {1,1};$/;"	f	class:MovementModel
DEF_WAIT_TIMES	src/movement/MovementModel.java	/^	public static final double[] DEF_WAIT_TIMES = {0,0};$/;"	f	class:MovementModel
DELEGATE	src/report/MovementListenerTestReport.java	/^	private static MovementListener DELEGATE;$/;"	f	class:MovementListenerTestReport	file:
DELETE_DELIVERED_S	src/routing/ActiveRouter.java	/^	public static final String DELETE_DELIVERED_S = "deleteDelivered";$/;"	f	class:ActiveRouter
DELIVERED	src/input/StandardEventsReader.java	/^	public static final String DELIVERED = "DE";$/;"	f	class:StandardEventsReader
DELTA	src/test/MaxPropDijkstraTest.java	/^	private final double DELTA = 0.0000001;$/;"	f	class:MaxPropDijkstraTest	file:
DENIED_LOW_RESOURCES	src/routing/MessageRouter.java	/^	public static final int DENIED_LOW_RESOURCES = -4;$/;"	f	class:MessageRouter
DENIED_NO_SPACE	src/routing/MessageRouter.java	/^	public static final int DENIED_NO_SPACE = -2;$/;"	f	class:MessageRouter
DENIED_OLD	src/routing/MessageRouter.java	/^	public static final int DENIED_OLD = -1;$/;"	f	class:MessageRouter
DENIED_POLICY	src/routing/MessageRouter.java	/^	public static final int DENIED_POLICY = -5;$/;"	f	class:MessageRouter
DENIED_TTL	src/routing/MessageRouter.java	/^	public static final int DENIED_TTL = -3;$/;"	f	class:MessageRouter
DENIED_UNSPECIFIED	src/routing/MessageRouter.java	/^	public static final int DENIED_UNSPECIFIED = -99;$/;"	f	class:MessageRouter
DROP	src/input/StandardEventsReader.java	/^	public static final String DROP = "DR";$/;"	f	class:StandardEventsReader
DTN2Events	src/input/DTN2Events.java	/^	public DTN2Events(Settings s) {$/;"	m	class:DTN2Events
DTN2Events	src/input/DTN2Events.java	/^public class DTN2Events implements EventQueue {$/;"	c
DTN2Manager	src/core/DTN2Manager.java	/^public class DTN2Manager {$/;"	c
DTN2Reporter	src/report/DTN2Reporter.java	/^	public DTN2Reporter() {$/;"	m	class:DTN2Reporter
DTN2Reporter	src/report/DTN2Reporter.java	/^public class DTN2Reporter extends Report implements MessageListener {$/;"	c
DTNHost	src/core/DTNHost.java	/^	public DTNHost(List<MessageListener> msgLs,$/;"	m	class:DTNHost
DTNHost	src/core/DTNHost.java	/^public class DTNHost implements Comparable<DTNHost> {$/;"	c
DTNHostTest	src/test/DTNHostTest.java	/^public class DTNHostTest extends TestCase {$/;"	c
DTNSim	src/core/DTNSim.java	/^public class DTNSim {$/;"	c
DTNSimGUI	src/gui/DTNSimGUI.java	/^public class DTNSimGUI extends DTNSimUI {$/;"	c
DTNSimTextUI	src/ui/DTNSimTextUI.java	/^public class DTNSimTextUI extends DTNSimUI {$/;"	c
DTNSimUI	src/ui/DTNSimUI.java	/^	public DTNSimUI() {$/;"	m	class:DTNSimUI
DTNSimUI	src/ui/DTNSimUI.java	/^public abstract class DTNSimUI {$/;"	c
Debug	src/core/Debug.java	/^public class Debug {$/;"	c
DeliveredMessagesReport	src/report/DeliveredMessagesReport.java	/^	public DeliveredMessagesReport() {$/;"	m	class:DeliveredMessagesReport
DeliveredMessagesReport	src/report/DeliveredMessagesReport.java	/^public class DeliveredMessagesReport extends Report implements MessageListener {$/;"	c
DijkstraPathFinder	src/movement/map/DijkstraPathFinder.java	/^	public DijkstraPathFinder(int [] okMapNodes) {$/;"	m	class:DijkstraPathFinder
DijkstraPathFinder	src/movement/map/DijkstraPathFinder.java	/^public class DijkstraPathFinder {$/;"	c
DijkstraPathFinderTest	src/test/DijkstraPathFinderTest.java	/^public class DijkstraPathFinderTest extends TestCase {$/;"	c
DirectDeliveryRouter	src/routing/DirectDeliveryRouter.java	/^	protected DirectDeliveryRouter(DirectDeliveryRouter r) {$/;"	m	class:DirectDeliveryRouter
DirectDeliveryRouter	src/routing/DirectDeliveryRouter.java	/^	public DirectDeliveryRouter(Settings s) {$/;"	m	class:DirectDeliveryRouter
DirectDeliveryRouter	src/routing/DirectDeliveryRouter.java	/^public class DirectDeliveryRouter extends ActiveRouter {$/;"	c
DistanceCapacityInterface	src/interfaces/DistanceCapacityInterface.java	/^	public DistanceCapacityInterface(DistanceCapacityInterface ni) {$/;"	m	class:DistanceCapacityInterface
DistanceCapacityInterface	src/interfaces/DistanceCapacityInterface.java	/^	public DistanceCapacityInterface(Settings s)	{$/;"	m	class:DistanceCapacityInterface
DistanceCapacityInterface	src/interfaces/DistanceCapacityInterface.java	/^public class DistanceCapacityInterface extends NetworkInterface {$/;"	c
DistanceComparator	src/movement/map/DijkstraPathFinder.java	/^	private class DistanceComparator implements Comparator<MapNode> {$/;"	c	class:DijkstraPathFinder
DistanceComparator	src/routing/maxprop/MaxPropDijkstra.java	/^	private class DistanceComparator implements$/;"	c	class:MaxPropDijkstra
DistanceDelayReport	src/report/DistanceDelayReport.java	/^	public DistanceDelayReport() {$/;"	m	class:DistanceDelayReport
DistanceDelayReport	src/report/DistanceDelayReport.java	/^public class DistanceDelayReport extends Report implements MessageListener {$/;"	c
DistanceDelayReportTest	src/test/DistanceDelayReportTest.java	/^public class DistanceDelayReportTest extends TestCase {$/;"	c
DistanceMap	src/movement/map/DijkstraPathFinder.java	/^		public DistanceMap() {$/;"	m	class:DijkstraPathFinder.DistanceMap
DistanceMap	src/movement/map/DijkstraPathFinder.java	/^	private class DistanceMap {$/;"	c	class:DijkstraPathFinder
DistanceMap	src/routing/maxprop/MaxPropDijkstra.java	/^		public DistanceMap() {$/;"	m	class:MaxPropDijkstra.DistanceMap
DistanceMap	src/routing/maxprop/MaxPropDijkstra.java	/^	private class DistanceMap {$/;"	c	class:MaxPropDijkstra
DurationComparator	src/routing/schedule/ScheduleDijkstra.java	/^	private class DurationComparator implements Comparator<Integer> {$/;"	c	class:ScheduleDijkstra
EID	src/core/DTN2Manager.java	/^		public String	EID;$/;"	f	class:DTN2Manager.EIDHost
EIDHost	src/core/DTN2Manager.java	/^		public EIDHost(String eid, int host_id, DTNHost host) {$/;"	m	class:DTN2Manager.EIDHost
EIDHost	src/core/DTN2Manager.java	/^	public static class EIDHost {$/;"	c	class:DTN2Manager
EID_to_host	src/core/DTN2Manager.java	/^	private static Collection<EIDHost>		EID_to_host = null;$/;"	f	class:DTN2Manager	file:
EL_PANEL_NS	src/gui/EventLogPanel.java	/^	public static final String EL_PANEL_NS = "GUI.EventLogPanel";$/;"	f	class:EventLogPanel
END_LOCATION_S	src/movement/LinearFormation.java	/^	public static final String END_LOCATION_S = "endLocation";$/;"	f	class:LinearFormation
END_LOCATION_S	src/movement/LinearMovement.java	/^	public static final String END_LOCATION_S = "endLocation";$/;"	f	class:LinearMovement
END_TIME_S	src/core/SimScenario.java	/^	public static final String END_TIME_S = "endTime";$/;"	f	class:SimScenario
ENERGY_VALUE_ID	src/routing/util/EnergyModel.java	/^	public static final String ENERGY_VALUE_ID = "Energy.value";$/;"	f	class:EnergyModel
ENTRY_FORMAT	src/gui/EventLogPanel.java	/^	private static final String ENTRY_FORMAT = "% 9.1f: %s ";$/;"	f	class:EventLogPanel	file:
EPSILON	src/report/MovementNs2Report.java	/^	public static final double EPSILON = 0.00001;$/;"	f	class:MovementNs2Report
EPS_AVG_TIME	src/gui/GUIControls.java	/^	private static final int EPS_AVG_TIME = 2000;$/;"	f	class:GUIControls	file:
EVENING_ACTIVITY_CONTROL_SYSTEM_NR_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String EVENING_ACTIVITY_CONTROL_SYSTEM_NR_SETTING =$/;"	f	class:EveningActivityMovement
EVENING_ACTIVITY_MODE	src/movement/EveningActivityMovement.java	/^	private static final int EVENING_ACTIVITY_MODE = 1;$/;"	f	class:EveningActivityMovement	file:
EVENING_ACTIVITY_MODE	src/movement/WorkingDayMovement.java	/^	private static final int EVENING_ACTIVITY_MODE = 5;$/;"	f	class:WorkingDayMovement	file:
EVENTS_RE_S	src/gui/EventLogPanel.java	/^	public static final String EVENTS_RE_S = "REfilter";$/;"	f	class:EventLogPanel
EXPECTED_INTERFACE_COUNT	src/interfaces/ConnectivityGrid.java	/^		private static final int EXPECTED_INTERFACE_COUNT = 5;$/;"	f	class:ConnectivityGrid.GridCell	file:
EXTERNAL_MOVEMENT_NS	src/movement/ExternalMovement.java	/^	public static final String EXTERNAL_MOVEMENT_NS = "ExternalMovement";$/;"	f	class:ExternalMovement
EncountersVSUniqueEncountersReport	src/report/EncountersVSUniqueEncountersReport.java	/^	public EncountersVSUniqueEncountersReport() {$/;"	m	class:EncountersVSUniqueEncountersReport
EncountersVSUniqueEncountersReport	src/report/EncountersVSUniqueEncountersReport.java	/^public class EncountersVSUniqueEncountersReport extends Report$/;"	c
EnergyLevelReport	src/report/EnergyLevelReport.java	/^public class EnergyLevelReport extends SnapshotReport $/;"	c
EnergyModel	src/routing/util/EnergyModel.java	/^	protected EnergyModel(EnergyModel proto) {$/;"	m	class:EnergyModel
EnergyModel	src/routing/util/EnergyModel.java	/^	public EnergyModel(Settings s) {$/;"	m	class:EnergyModel
EnergyModel	src/routing/util/EnergyModel.java	/^public class EnergyModel implements ModuleCommunicationListener {$/;"	c
Entry	src/input/ExternalPathMovementReader.java	/^	public class Entry {$/;"	c	class:ExternalPathMovementReader
EpidemicOracleRouter	src/routing/EpidemicOracleRouter.java	/^	protected EpidemicOracleRouter(EpidemicOracleRouter r) {$/;"	m	class:EpidemicOracleRouter
EpidemicOracleRouter	src/routing/EpidemicOracleRouter.java	/^	public EpidemicOracleRouter(Settings s) {$/;"	m	class:EpidemicOracleRouter
EpidemicOracleRouter	src/routing/EpidemicOracleRouter.java	/^public class EpidemicOracleRouter extends ActiveRouter {$/;"	c
EpidemicRouter	src/routing/EpidemicRouter.java	/^	protected EpidemicRouter(EpidemicRouter r) {$/;"	m	class:EpidemicRouter
EpidemicRouter	src/routing/EpidemicRouter.java	/^	public EpidemicRouter(Settings s) {$/;"	m	class:EpidemicRouter
EpidemicRouter	src/routing/EpidemicRouter.java	/^public class EpidemicRouter extends ActiveRouter {$/;"	c
EpidemicRouterTest	src/test/EpidemicRouterTest.java	/^public class EpidemicRouterTest extends AbstractRouterTest {$/;"	c
EveningActivityControlSystem	src/movement/EveningActivityControlSystem.java	/^	private EveningActivityControlSystem(int id) {$/;"	m	class:EveningActivityControlSystem	file:
EveningActivityControlSystem	src/movement/EveningActivityControlSystem.java	/^public class EveningActivityControlSystem {$/;"	c
EveningActivityMovement	src/movement/EveningActivityMovement.java	/^	public EveningActivityMovement(EveningActivityMovement proto) {$/;"	m	class:EveningActivityMovement
EveningActivityMovement	src/movement/EveningActivityMovement.java	/^	public EveningActivityMovement(Settings settings) {$/;"	m	class:EveningActivityMovement
EveningActivityMovement	src/movement/EveningActivityMovement.java	/^public class EveningActivityMovement extends MapBasedMovement$/;"	c
EveningTrip	src/movement/EveningTrip.java	/^	public EveningTrip(int nrOfeveningActivityNodes, Coord location) {$/;"	m	class:EveningTrip
EveningTrip	src/movement/EveningTrip.java	/^public class EveningTrip {$/;"	c
EventLogControl	src/gui/EventLogControl.java	/^	public EventLogControl(JCheckBox show, JCheckBox pause) {$/;"	m	class:EventLogControl
EventLogControl	src/gui/EventLogControl.java	/^public class EventLogControl {$/;"	c
EventLogControlPanel	src/gui/EventLogControlPanel.java	/^	public EventLogControlPanel() {$/;"	m	class:EventLogControlPanel
EventLogControlPanel	src/gui/EventLogControlPanel.java	/^public class EventLogControlPanel extends JPanel implements ActionListener {$/;"	c
EventLogPanel	src/gui/EventLogPanel.java	/^	public EventLogPanel(DTNSimGUI gui) {$/;"	m	class:EventLogPanel
EventLogPanel	src/gui/EventLogPanel.java	/^public class EventLogPanel extends JPanel$/;"	c
EventLogReport	src/report/EventLogReport.java	/^public class EventLogReport extends Report$/;"	c
EventQueue	src/input/EventQueue.java	/^public interface EventQueue {$/;"	i
EventQueueHandler	src/input/EventQueueHandler.java	/^	public EventQueueHandler() {$/;"	m	class:EventQueueHandler
EventQueueHandler	src/input/EventQueueHandler.java	/^public class EventQueueHandler  {$/;"	c
ExtendedMovementModel	src/movement/ExtendedMovementModel.java	/^	public ExtendedMovementModel() {$/;"	m	class:ExtendedMovementModel
ExtendedMovementModel	src/movement/ExtendedMovementModel.java	/^	public ExtendedMovementModel(ExtendedMovementModel mm) {$/;"	m	class:ExtendedMovementModel
ExtendedMovementModel	src/movement/ExtendedMovementModel.java	/^	public ExtendedMovementModel(Settings settings) {$/;"	m	class:ExtendedMovementModel
ExtendedMovementModel	src/movement/ExtendedMovementModel.java	/^public abstract class ExtendedMovementModel extends MovementModel {$/;"	c
ExternalEvent	src/input/ExternalEvent.java	/^	public ExternalEvent(double time) {$/;"	m	class:ExternalEvent
ExternalEvent	src/input/ExternalEvent.java	/^public class ExternalEvent implements Comparable<ExternalEvent>, Serializable {$/;"	c
ExternalEventsQueue	src/input/ExternalEventsQueue.java	/^	public ExternalEventsQueue(Settings s) {$/;"	m	class:ExternalEventsQueue
ExternalEventsQueue	src/input/ExternalEventsQueue.java	/^	public ExternalEventsQueue(String filePath, int nrofPreload) {$/;"	m	class:ExternalEventsQueue
ExternalEventsQueue	src/input/ExternalEventsQueue.java	/^public class ExternalEventsQueue implements EventQueue {$/;"	c
ExternalEventsQueueTest	src/test/ExternalEventsQueueTest.java	/^public class ExternalEventsQueueTest extends TestCase {$/;"	c
ExternalEventsReader	src/input/ExternalEventsReader.java	/^public interface ExternalEventsReader {$/;"	i
ExternalMovement	src/movement/ExternalMovement.java	/^	private ExternalMovement(MovementModel mm) {$/;"	m	class:ExternalMovement	file:
ExternalMovement	src/movement/ExternalMovement.java	/^	public ExternalMovement(Settings settings) {$/;"	m	class:ExternalMovement
ExternalMovement	src/movement/ExternalMovement.java	/^public class ExternalMovement extends MovementModel {$/;"	c
ExternalMovementReader	src/input/ExternalMovementReader.java	/^	public ExternalMovementReader(String inFilePath) {$/;"	m	class:ExternalMovementReader
ExternalMovementReader	src/input/ExternalMovementReader.java	/^public class ExternalMovementReader {$/;"	c
ExternalMovementReaderTest	src/test/ExternalMovementReaderTest.java	/^public class ExternalMovementReaderTest extends TestCase {$/;"	c
ExternalMovementTest	src/test/ExternalMovementTest.java	/^public class ExternalMovementTest extends TestCase {$/;"	c
ExternalPathMovement	src/movement/ExternalPathMovement.java	/^	public ExternalPathMovement(ExternalPathMovement mm) {$/;"	m	class:ExternalPathMovement
ExternalPathMovement	src/movement/ExternalPathMovement.java	/^	public ExternalPathMovement(Settings settings) {$/;"	m	class:ExternalPathMovement
ExternalPathMovement	src/movement/ExternalPathMovement.java	/^public class ExternalPathMovement extends MovementModel {$/;"	c
ExternalPathMovementReader	src/input/ExternalPathMovementReader.java	/^	private ExternalPathMovementReader(String traceFilePath,$/;"	m	class:ExternalPathMovementReader	file:
ExternalPathMovementReader	src/input/ExternalPathMovementReader.java	/^public class ExternalPathMovementReader {$/;"	c
FFW_SPEED_INDEX	src/gui/GUIControls.java	/^	public static final int FFW_SPEED_INDEX = 7;$/;"	f	class:GUIControls
FILE_S	src/movement/MapBasedMovement.java	/^	public static final String FILE_S = "mapFile";$/;"	f	class:MapBasedMovement
FILL_DELIMITER	src/core/Settings.java	/^	public static final String FILL_DELIMITER = "%%";$/;"	f	class:Settings
FOCUS_ON_CLICK_S	src/gui/SimMenuBar.java	/^	public static final String FOCUS_ON_CLICK_S = "focusOnClick";$/;"	f	class:SimMenuBar
FONT_SIZE	src/gui/EventLogPanel.java	/^	private static final int FONT_SIZE = 12;$/;"	f	class:EventLogPanel	file:
FONT_SIZE	src/gui/playfield/ScaleReferenceGraphic.java	/^	private final int FONT_SIZE = 10;$/;"	f	class:ScaleReferenceGraphic	file:
FONT_TYPE	src/gui/EventLogPanel.java	/^	private static final String FONT_TYPE = "monospaced";$/;"	f	class:EventLogPanel	file:
FROM_RPOLICY_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String FROM_RPOLICY_S = "fromReceivePolicy";$/;"	f	class:MessageTransferAcceptPolicy
FROM_SPOLICY_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String FROM_SPOLICY_S = "fromSendPolicy";$/;"	f	class:MessageTransferAcceptPolicy
FirstContactRouter	src/routing/FirstContactRouter.java	/^	protected FirstContactRouter(FirstContactRouter r) {$/;"	m	class:FirstContactRouter
FirstContactRouter	src/routing/FirstContactRouter.java	/^	public FirstContactRouter(Settings s) {$/;"	m	class:FirstContactRouter
FirstContactRouter	src/routing/FirstContactRouter.java	/^public class FirstContactRouter extends ActiveRouter {$/;"	c
GAMMA	src/routing/ProphetRouterWithEstimation.java	/^	public static final double GAMMA = 0.98;$/;"	f	class:ProphetRouterWithEstimation
GAMMA_S	src/routing/ProphetRouter.java	/^	public static final String GAMMA_S = "gamma";$/;"	f	class:ProphetRouter
GAMMA_S	src/routing/ProphetV2Router.java	/^	public static final String GAMMA_S = "gamma";$/;"	f	class:ProphetV2Router
GAPPNAME_S	src/core/SimScenario.java	/^	public static final String GAPPNAME_S = "application";$/;"	f	class:SimScenario
GNUPLOT_FILE_EXTENSION_SETTING	src/report/NodeDensityReport.java	/^	public static final String GNUPLOT_FILE_EXTENSION_SETTING =$/;"	f	class:NodeDensityReport
GNUPLOT_SETTING	src/report/NodeDensityReport.java	/^	public static final String GNUPLOT_SETTING = "outputGnuplot";$/;"	f	class:NodeDensityReport
GNUPLOT_TERMINAL_SETTING	src/report/NodeDensityReport.java	/^	public static final String GNUPLOT_TERMINAL_SETTING = "gnuplotTerminal";$/;"	f	class:NodeDensityReport
GRANULARITY	src/report/ContactTimesReport.java	/^	public static final String GRANULARITY = "granularity";$/;"	f	class:ContactTimesReport
GRANULARITY	src/report/MessageLocationReport.java	/^	public static final String GRANULARITY = "granularity";$/;"	f	class:MessageLocationReport
GRANULARITY	src/report/SnapshotReport.java	/^	public static final String GRANULARITY = "granularity";$/;"	f	class:SnapshotReport
GRAPH_NAME	src/report/AdjacencyGraphvizReport.java	/^	public static final String GRAPH_NAME = "adjgraph";$/;"	f	class:AdjacencyGraphvizReport
GRAPH_NAME	src/report/MessageGraphvizReport.java	/^	public static final String GRAPH_NAME = "msggraph";$/;"	f	class:MessageGraphvizReport
GRIDLOC_NS	src/movement/GridLocation.java	/^	public static final String GRIDLOC_NS = "GridLocation";$/;"	f	class:GridLocation
GROUP_ID_S	src/core/SimScenario.java	/^	public static final String GROUP_ID_S = "groupID";$/;"	f	class:SimScenario
GROUP_NS	src/core/SimScenario.java	/^	public static final String GROUP_NS = "Group";$/;"	f	class:SimScenario
GUIControls	src/gui/GUIControls.java	/^	public GUIControls(DTNSimGUI gui, PlayField pf) {$/;"	m	class:GUIControls
GUIControls	src/gui/GUIControls.java	/^public class GUIControls extends JPanel implements ActionListener, ChangeListener {$/;"	c
GUI_NS	src/gui/MainWindow.java	/^	public static final String GUI_NS = "GUI";$/;"	f	class:MainWindow
GUI_WIN_NS	src/gui/MainWindow.java	/^	public static final String GUI_WIN_NS = GUI_NS + ".window";$/;"	f	class:MainWindow
GridCell	src/interfaces/ConnectivityGrid.java	/^		private GridCell() {$/;"	m	class:ConnectivityGrid.GridCell	file:
GridCell	src/interfaces/ConnectivityGrid.java	/^	public class GridCell {$/;"	c	class:ConnectivityGrid
GridLocation	src/movement/GridLocation.java	/^	public GridLocation(GridLocation proto) {$/;"	m	class:GridLocation
GridLocation	src/movement/GridLocation.java	/^	public GridLocation(Settings s) {$/;"	m	class:GridLocation
GridLocation	src/movement/GridLocation.java	/^public class GridLocation extends MovementModel {$/;"	c
HEADER	src/report/CreatedMessagesReport.java	/^	public static String HEADER = "# time  ID  size  fromHost  toHost  TTL  " +$/;"	f	class:CreatedMessagesReport
HEADER	src/report/DeliveredMessagesReport.java	/^	public static String HEADER = "# time  ID  size  hopcount  deliveryTime  " +$/;"	f	class:DeliveredMessagesReport
HEADER	src/report/MessageDelayReport.java	/^	public static final String HEADER =$/;"	f	class:MessageDelayReport
HEADER	src/report/MessageDeliveryReport.java	/^	public static String HEADER="# time  created  delivered  delivered\/created";$/;"	f	class:MessageDeliveryReport
HEADER	src/report/MessageReport.java	/^	public static final String HEADER =$/;"	f	class:MessageReport
HEADER	src/report/TotalContactTimeReport.java	/^	public static final String HEADER = "# time totalContactTime";$/;"	f	class:TotalContactTimeReport
HIGHLIGHT_BG_COLOR	src/gui/EventLogPanel.java	/^	private static final Color HIGHLIGHT_BG_COLOR = Color.GREEN;$/;"	f	class:EventLogPanel	file:
HOME_LOCATIONS_FILE_SETTING	src/movement/HomeActivityMovement.java	/^	public static final String HOME_LOCATIONS_FILE_SETTING = "homeLocationsFile";$/;"	f	class:HomeActivityMovement
HOME_MODE	src/movement/WorkingDayMovement.java	/^	private static final int HOME_MODE = 4;$/;"	f	class:WorkingDayMovement	file:
HOPCOUNT_RPOLICY_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String HOPCOUNT_RPOLICY_S = "hopCountReceivePolicy";$/;"	f	class:MessageTransferAcceptPolicy
HOPCOUNT_SPOLICY_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String HOPCOUNT_SPOLICY_S = "hopCountSendPolicy";$/;"	f	class:MessageTransferAcceptPolicy
HOST_DELIM	src/gui/EventLogPanel.java	/^	private static final String HOST_DELIM = "<->";$/;"	f	class:EventLogPanel	file:
HOST_DELIM	src/report/AdjacencyGraphvizReport.java	/^	private String HOST_DELIM = "<->"; \/\/ used in toString()$/;"	f	class:AdjacencyGraphvizReport	file:
HOST_KEY	src/gui/NodeChooser.java	/^	private static final String HOST_KEY = "host";$/;"	f	class:NodeChooser	file:
HOST_PROP	src/gui/EventLogPanel.java	/^	private static final String HOST_PROP = "host";$/;"	f	class:EventLogPanel	file:
HOST_RANGE_S	src/input/MessageEventGenerator.java	/^	public static final String HOST_RANGE_S = "hosts";$/;"	f	class:MessageEventGenerator
HomeActivityMovement	src/movement/HomeActivityMovement.java	/^	public HomeActivityMovement(HomeActivityMovement proto) {$/;"	m	class:HomeActivityMovement
HomeActivityMovement	src/movement/HomeActivityMovement.java	/^	public HomeActivityMovement(Settings settings) {$/;"	m	class:HomeActivityMovement
HomeActivityMovement	src/movement/HomeActivityMovement.java	/^public class HomeActivityMovement extends MapBasedMovement$/;"	c
ICON_FFW	src/gui/GUIControls.java	/^	private static final String ICON_FFW = "FastForward16.gif";$/;"	f	class:GUIControls	file:
ICON_PAUSE	src/gui/GUIControls.java	/^	private static final String ICON_PAUSE = "Pause16.gif";$/;"	f	class:GUIControls	file:
ICON_PLAY	src/gui/GUIControls.java	/^	private static final String ICON_PLAY = "Play16.gif";$/;"	f	class:GUIControls	file:
ICON_STEP	src/gui/GUIControls.java	/^	private static final String ICON_STEP = "StepForward16.gif";$/;"	f	class:GUIControls	file:
ICON_ZOOM	src/gui/GUIControls.java	/^	private static final String ICON_ZOOM = "Zoom24.gif";$/;"	f	class:GUIControls	file:
IFACE_NS	src/test/TestUtils.java	/^	public static String IFACE_NS = "interface";$/;"	f	class:TestUtils
IMMUNITY_S	src/routing/WaveRouter.java	/^	public static final String IMMUNITY_S = "immunityTime";$/;"	f	class:WaveRouter
INFINITE_SET_SIZE	src/routing/maxprop/MeetingProbabilitySet.java	/^	public static final int INFINITE_SET_SIZE = Integer.MAX_VALUE;$/;"	f	class:MeetingProbabilitySet
INFINITE_TTL	src/core/Message.java	/^	public static final int INFINITE_TTL = -1;$/;"	f	class:Message
INFINITY	src/movement/map/DijkstraPathFinder.java	/^	private static final Double INFINITY = Double.MAX_VALUE;$/;"	f	class:DijkstraPathFinder	file:
INFINITY	src/routing/maxprop/MaxPropDijkstra.java	/^	private static final Double INFINITY = Double.MAX_VALUE;$/;"	f	class:MaxPropDijkstra	file:
INFINITY	src/routing/schedule/ScheduleDijkstra.java	/^	private static final Double INFINITY = Double.MAX_VALUE;$/;"	f	class:ScheduleDijkstra	file:
INITIAL_LOC_CALL_COUNT	src/test/MovementListenerTest.java	/^	private static int INITIAL_LOC_CALL_COUNT = 0;$/;"	f	class:MovementListenerTest	file:
INITIAL_LOC_TEST_NODE_COUNT	src/test/MovementListenerTest.java	/^	private static int INITIAL_LOC_TEST_NODE_COUNT = 10;$/;"	f	class:MovementListenerTest	file:
INITIAL_LOC_TEST_SETTINGS	src/test/MovementListenerTest.java	/^	private static String INITIAL_LOC_TEST_SETTINGS =$/;"	f	class:MovementListenerTest	file:
INITIAL_SPEED_SELECTION	src/gui/GUIControls.java	/^	public static final int INITIAL_SPEED_SELECTION = 3;$/;"	f	class:GUIControls
INIT_CAPACITY	src/core/ModuleCommunicationBus.java	/^	private static int INIT_CAPACITY = 3;$/;"	f	class:ModuleCommunicationBus	file:
INIT_ENERGY_S	src/routing/util/EnergyModel.java	/^	public static final String INIT_ENERGY_S = "initialEnergy";$/;"	f	class:EnergyModel
INIT_LOC_S	src/movement/LinearMovement.java	/^	public static final String INIT_LOC_S = "initLocType";$/;"	f	class:LinearMovement
INPUT	src/test/ExternalMovementReaderTest.java	/^	private static final String INPUT =$/;"	f	class:ExternalMovementReaderTest	file:
INPUT	src/test/ExternalMovementTest.java	/^	private static final String[] INPUT = {$/;"	f	class:ExternalMovementTest	file:
INPUT	src/test/SettingsTest.java	/^	private static final String[] INPUT = {$/;"	f	class:SettingsTest	file:
INPUT_COORDS	src/test/ExternalMovementTest.java	/^	private static final Coord[][] INPUT_COORDS = {$/;"	f	class:ExternalMovementTest	file:
INTERFACENAME_S	src/core/SimScenario.java	/^	public static final String INTERFACENAME_S = "interface";$/;"	f	class:SimScenario
INTERVALLED_FORMAT	src/report/Report.java	/^	public static final String INTERVALLED_FORMAT ="%04d" + OUT_SUFFIX;$/;"	f	class:Report
INTERVAL_SETTING	src/report/Report.java	/^	public static final String INTERVAL_SETTING = "interval";$/;"	f	class:Report
INTNAME_S	src/core/SimScenario.java	/^	public static final String INTNAME_S = "name";$/;"	f	class:SimScenario
INTTYPE_NS	src/core/SimScenario.java	/^	public static final String INTTYPE_NS = "Interface";$/;"	f	class:SimScenario
INTTYPE_PACKAGE	src/core/SimScenario.java	/^	private static final String INTTYPE_PACKAGE = "interfaces.";$/;"	f	class:SimScenario	file:
INTTYPE_S	src/core/SimScenario.java	/^	public static final String INTTYPE_S = "type";$/;"	f	class:SimScenario
INVALID_COST	src/test/MaxPropRouterTest.java	/^	private static final double INVALID_COST = Double.MAX_VALUE;$/;"	f	class:MaxPropRouterTest	file:
IRS_S	src/test/SettingsTest.java	/^	private static final String IRS_S = "invalidRunSetting";$/;"	f	class:SettingsTest	file:
I_SET_PREFIX	src/test/ContactTimesReportTest.java	/^	private final static String I_SET_PREFIX = "InterContactTimesReport.";$/;"	f	class:ContactTimesReportTest	file:
I_TYP	src/routing/ProphetV2Router.java	/^	public static final double I_TYP = 1800;$/;"	f	class:ProphetV2Router
InfoPanel	src/gui/InfoPanel.java	/^	public InfoPanel(DTNSimGUI gui) {$/;"	m	class:InfoPanel
InfoPanel	src/gui/InfoPanel.java	/^public class InfoPanel extends JPanel implements ActionListener{$/;"	c
InfoTuple	src/report/DistanceDelayReport.java	/^		public InfoTuple(double time, Coord loc1, Coord loc2) {$/;"	m	class:DistanceDelayReport.InfoTuple
InfoTuple	src/report/DistanceDelayReport.java	/^	private class InfoTuple {$/;"	c	class:DistanceDelayReport
InterContactTimesReport	src/report/InterContactTimesReport.java	/^public class InterContactTimesReport extends ContactTimesReport {$/;"	c
InterferenceLimitedInterface	src/interfaces/InterferenceLimitedInterface.java	/^	public InterferenceLimitedInterface(InterferenceLimitedInterface ni) {$/;"	m	class:InterferenceLimitedInterface
InterferenceLimitedInterface	src/interfaces/InterferenceLimitedInterface.java	/^	public InterferenceLimitedInterface(Settings s) {$/;"	m	class:InterferenceLimitedInterface
InterferenceLimitedInterface	src/interfaces/InterferenceLimitedInterface.java	/^public class InterferenceLimitedInterface extends NetworkInterface {$/;"	c
JumpSizeDistributionReport	src/report/JumpSizeDistributionReport.java	/^	public JumpSizeDistributionReport() {$/;"	m	class:JumpSizeDistributionReport
JumpSizeDistributionReport	src/report/JumpSizeDistributionReport.java	/^public final class JumpSizeDistributionReport$/;"	c
LINEAR_FORMATION_NS	src/movement/LinearFormation.java	/^	public static final String LINEAR_FORMATION_NS = "LinearFormation.";$/;"	f	class:LinearFormation
LINEAR_MOVEMENT_NS	src/movement/LinearMovement.java	/^	public static final String LINEAR_MOVEMENT_NS = "LinearMovement.";$/;"	f	class:LinearMovement
LINESTRING	src/input/WKTReader.java	/^	public static final String LINESTRING = "LINESTRING";$/;"	f	class:WKTReader
LOCATION_S	src/movement/GridLocation.java	/^	public static final String LOCATION_S = "location";$/;"	f	class:GridLocation
LOCATION_S	src/movement/StationaryMovement.java	/^	public static final String LOCATION_S = "nodeLocation";$/;"	f	class:StationaryMovement
LOG_BUTTON_BG	src/gui/EventLogPanel.java	/^	private static final Color LOG_BUTTON_BG = Color.WHITE;$/;"	f	class:EventLogPanel	file:
LOG_UP_INTERVAL	src/gui/EventLogPanel.java	/^	public static final int LOG_UP_INTERVAL = 500;$/;"	f	class:EventLogPanel
LifeRouter	src/routing/LifeRouter.java	/^	protected LifeRouter(LifeRouter r) {$/;"	m	class:LifeRouter
LifeRouter	src/routing/LifeRouter.java	/^	public LifeRouter(Settings s) {$/;"	m	class:LifeRouter
LifeRouter	src/routing/LifeRouter.java	/^public class LifeRouter extends ActiveRouter {$/;"	c
LinearFormation	src/movement/LinearFormation.java	/^	public LinearFormation(LinearFormation lf) {$/;"	m	class:LinearFormation
LinearFormation	src/movement/LinearFormation.java	/^	public LinearFormation(Settings s) {$/;"	m	class:LinearFormation
LinearFormation	src/movement/LinearFormation.java	/^public class LinearFormation extends MovementModel {$/;"	c
LinearMovement	src/movement/LinearMovement.java	/^	public LinearMovement(LinearMovement ilm) {$/;"	m	class:LinearMovement
LinearMovement	src/movement/LinearMovement.java	/^	public LinearMovement(Settings s) {$/;"	m	class:LinearMovement
LinearMovement	src/movement/LinearMovement.java	/^public class LinearMovement extends MovementModel {$/;"	c
LocationSnapshotReport	src/report/LocationSnapshotReport.java	/^public class LocationSnapshotReport extends SnapshotReport {$/;"	c
MAP_BASE_MOVEMENT_NS	src/movement/MapBasedMovement.java	/^	public static final String MAP_BASE_MOVEMENT_NS = "MapBasedMovement";$/;"	f	class:MapBasedMovement
MAP_DATA	src/test/PointsOfInterestTest.java	/^	private static final String MAP_DATA =$/;"	f	class:PointsOfInterestTest	file:
MAP_DATA2	src/test/PointsOfInterestTest.java	/^	private static final String MAP_DATA2 =$/;"	f	class:PointsOfInterestTest	file:
MAP_SELECT_S	src/movement/MapBasedMovement.java	/^	public static final String MAP_SELECT_S = "okMaps";$/;"	f	class:MapBasedMovement
MAX	src/test/ScheduledUpdatesQueueTest.java	/^	private static double MAX = Double.MAX_VALUE;$/;"	f	class:ScheduledUpdatesQueueTest	file:
MAXPROP_NS	src/routing/MaxPropRouter.java	/^	public static final String MAXPROP_NS = "MaxPropRouter";$/;"	f	class:MaxPropRouter
MAXPROP_NS	src/routing/MaxPropRouterWithEstimation.java	/^	public static final String MAXPROP_NS = "MaxPropRouterWithEstimation";$/;"	f	class:MaxPropRouterWithEstimation
MAX_GROUP_SIZE_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String MAX_GROUP_SIZE_SETTING = "maxGroupSize";$/;"	f	class:EveningActivityMovement
MAX_NODE_COUNT	src/gui/NodeChooser.java	/^	public static final int MAX_NODE_COUNT = 500;$/;"	f	class:NodeChooser
MAX_TYPE	src/movement/map/MapNode.java	/^	public static final int MAX_TYPE = 31;$/;"	f	class:MapNode
MAX_WAIT_TIME_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String MAX_WAIT_TIME_SETTING =$/;"	f	class:EveningActivityMovement
MCBACR_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String MCBACR_S = "MCBRcondition";$/;"	f	class:MessageTransferAcceptPolicy
MCBACS_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String MCBACS_S = "MCBScondition";$/;"	f	class:MessageTransferAcceptPolicy
MCBCVR_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String MCBCVR_S = "MCBRvalue";$/;"	f	class:MessageTransferAcceptPolicy
MCBCVS_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String MCBCVS_S = "MCBSvalue";$/;"	f	class:MessageTransferAcceptPolicy
MEETING_SPOTS_FILE_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String MEETING_SPOTS_FILE_SETTING = "meetingSpotsFile";$/;"	f	class:EveningActivityMovement
MESSAGE_ID_PREFIX_S	src/input/MessageEventGenerator.java	/^	public static final String MESSAGE_ID_PREFIX_S = "prefix";$/;"	f	class:MessageEventGenerator
MESSAGE_INTERVAL_S	src/input/MessageEventGenerator.java	/^	public static final String MESSAGE_INTERVAL_S = "interval";$/;"	f	class:MessageEventGenerator
MESSAGE_SIZE_S	src/input/MessageEventGenerator.java	/^	public static final String MESSAGE_SIZE_S = "size";$/;"	f	class:MessageEventGenerator
MESSAGE_TIME_S	src/input/MessageEventGenerator.java	/^	public static final String MESSAGE_TIME_S = "time";$/;"	f	class:MessageEventGenerator
MESSAGE_TRANS_DELIVERED	src/report/EventLogReport.java	/^	public static final String MESSAGE_TRANS_DELIVERED = "D";$/;"	f	class:EventLogReport
MESSAGE_TRANS_DELIVERED_AGAIN	src/report/EventLogReport.java	/^	public static final String MESSAGE_TRANS_DELIVERED_AGAIN = "A";$/;"	f	class:EventLogReport
MESSAGE_TRANS_RELAYED	src/report/EventLogReport.java	/^	public static final String MESSAGE_TRANS_RELAYED = "R";$/;"	f	class:EventLogReport
MIN_AHEAD_INTERVALS	src/movement/ExternalMovement.java	/^	private static final double MIN_AHEAD_INTERVALS = 2;$/;"	f	class:ExternalMovement	file:
MIN_GROUP_SIZE_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String MIN_GROUP_SIZE_SETTING = "minGroupSize";$/;"	f	class:EveningActivityMovement
MIN_LENGTH	src/gui/playfield/ScaleReferenceGraphic.java	/^	private final int MIN_LENGTH = 30;$/;"	f	class:ScaleReferenceGraphic	file:
MIN_TYPE	src/movement/map/MapNode.java	/^	public static final int MIN_TYPE = 1;$/;"	f	class:MapNode
MIN_WAIT_TIME_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String MIN_WAIT_TIME_SETTING =$/;"	f	class:EveningActivityMovement
MM_PACKAGE	src/core/SimScenario.java	/^	private static final String MM_PACKAGE = "movement.";$/;"	f	class:SimScenario	file:
MM_WARMUP_S	src/ui/DTNSimUI.java	/^	public static final String MM_WARMUP_S =$/;"	f	class:DTNSimUI
MOVEMENT_FILE_S	src/movement/ExternalMovement.java	/^	public static final String MOVEMENT_FILE_S = "file";$/;"	f	class:ExternalMovement
MOVEMENT_FILE_S	src/movement/ExternalPathMovement.java	/^	public static final String MOVEMENT_FILE_S = "traceFile";$/;"	f	class:ExternalPathMovement
MOVEMENT_MODEL_NS	src/movement/MovementModel.java	/^	public static final String MOVEMENT_MODEL_NS = "MovementModel";$/;"	f	class:MovementModel
MOVEMENT_MODEL_S	src/core/SimScenario.java	/^	public static final String MOVEMENT_MODEL_S = "movementModel";$/;"	f	class:SimScenario
MSG_COUNT_PROPERTY	src/routing/SprayAndWaitRouter.java	/^	public static final String MSG_COUNT_PROPERTY = SPRAYANDWAIT_NS + "." +$/;"	f	class:SprayAndWaitRouter
MSG_PROP	src/gui/EventLogPanel.java	/^	private static final String MSG_PROP = "message";$/;"	f	class:EventLogPanel	file:
MSG_TTL_S	src/routing/MessageRouter.java	/^	public static final String MSG_TTL_S = "msgTtl";$/;"	f	class:MessageRouter
MTA_POLICY_NS	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String MTA_POLICY_NS = "mtaPolicy";$/;"	f	class:MessageTransferAcceptPolicy
MULTILINESTRING	src/input/WKTReader.java	/^	public static final String MULTILINESTRING = "MULTILINESTRING";$/;"	f	class:WKTReader
MainWindow	src/gui/MainWindow.java	/^    public MainWindow(String scenName, World world, PlayField field,$/;"	m	class:MainWindow
MainWindow	src/gui/MainWindow.java	/^public class MainWindow extends JFrame {$/;"	c
MapBasedMovement	src/movement/MapBasedMovement.java	/^	protected MapBasedMovement(MapBasedMovement mbm) {$/;"	m	class:MapBasedMovement
MapBasedMovement	src/movement/MapBasedMovement.java	/^	public MapBasedMovement(Settings settings) {$/;"	m	class:MapBasedMovement
MapBasedMovement	src/movement/MapBasedMovement.java	/^	public MapBasedMovement(Settings settings, SimMap newMap, int nrofMaps) {$/;"	m	class:MapBasedMovement
MapBasedMovement	src/movement/MapBasedMovement.java	/^public class MapBasedMovement extends MovementModel implements SwitchableMovement {$/;"	c
MapBasedMovementTest	src/test/MapBasedMovementTest.java	/^public class MapBasedMovementTest extends TestCase {$/;"	c
MapGraphic	src/gui/playfield/MapGraphic.java	/^	public MapGraphic(SimMap simMap) {$/;"	m	class:MapGraphic
MapGraphic	src/gui/playfield/MapGraphic.java	/^public class MapGraphic extends PlayFieldGraphic {$/;"	c
MapNode	src/movement/map/MapNode.java	/^	public MapNode(Coord location) {$/;"	m	class:MapNode
MapNode	src/movement/map/MapNode.java	/^public class MapNode implements Comparable<MapNode> {$/;"	c
MapNodeTest	src/test/MapNodeTest.java	/^public class MapNodeTest extends TestCase {$/;"	c
MapRoute	src/movement/map/MapRoute.java	/^	public MapRoute(int type, List<MapNode> stops) {$/;"	m	class:MapRoute
MapRoute	src/movement/map/MapRoute.java	/^public class MapRoute {$/;"	c
MapRouteMovement	src/movement/MapRouteMovement.java	/^	protected MapRouteMovement(MapRouteMovement proto) {$/;"	m	class:MapRouteMovement
MapRouteMovement	src/movement/MapRouteMovement.java	/^	public MapRouteMovement(Settings settings) {$/;"	m	class:MapRouteMovement
MapRouteMovement	src/movement/MapRouteMovement.java	/^public class MapRouteMovement extends MapBasedMovement implements$/;"	c
MaxPropComparator	src/routing/MaxPropRouter.java	/^		public MaxPropComparator(int treshold) {$/;"	m	class:MaxPropRouter.MaxPropComparator
MaxPropComparator	src/routing/MaxPropRouter.java	/^		public MaxPropComparator(int treshold, DTNHost from1, DTNHost from2) {$/;"	m	class:MaxPropRouter.MaxPropComparator
MaxPropComparator	src/routing/MaxPropRouter.java	/^	private class MaxPropComparator implements Comparator<Message> {$/;"	c	class:MaxPropRouter
MaxPropComparator	src/routing/MaxPropRouterWithEstimation.java	/^		public MaxPropComparator(int treshold) {$/;"	m	class:MaxPropRouterWithEstimation.MaxPropComparator
MaxPropComparator	src/routing/MaxPropRouterWithEstimation.java	/^		public MaxPropComparator(int treshold, DTNHost from1, DTNHost from2) {$/;"	m	class:MaxPropRouterWithEstimation.MaxPropComparator
MaxPropComparator	src/routing/MaxPropRouterWithEstimation.java	/^	private class MaxPropComparator implements Comparator<Message> {$/;"	c	class:MaxPropRouterWithEstimation
MaxPropDijkstra	src/routing/maxprop/MaxPropDijkstra.java	/^	public MaxPropDijkstra(Map<Integer, MeetingProbabilitySet> probs) {$/;"	m	class:MaxPropDijkstra
MaxPropDijkstra	src/routing/maxprop/MaxPropDijkstra.java	/^public class MaxPropDijkstra {$/;"	c
MaxPropDijkstraTest	src/test/MaxPropDijkstraTest.java	/^public class MaxPropDijkstraTest extends TestCase {$/;"	c
MaxPropRouter	src/routing/MaxPropRouter.java	/^	protected MaxPropRouter(MaxPropRouter r) {$/;"	m	class:MaxPropRouter
MaxPropRouter	src/routing/MaxPropRouter.java	/^	public MaxPropRouter(Settings settings) {$/;"	m	class:MaxPropRouter
MaxPropRouter	src/routing/MaxPropRouter.java	/^public class MaxPropRouter extends ActiveRouter {$/;"	c
MaxPropRouterTest	src/test/MaxPropRouterTest.java	/^public class MaxPropRouterTest extends AbstractRouterTest {$/;"	c
MaxPropRouterWithEstimation	src/routing/MaxPropRouterWithEstimation.java	/^	protected MaxPropRouterWithEstimation(MaxPropRouterWithEstimation r) {$/;"	m	class:MaxPropRouterWithEstimation
MaxPropRouterWithEstimation	src/routing/MaxPropRouterWithEstimation.java	/^	public MaxPropRouterWithEstimation(Settings settings) {$/;"	m	class:MaxPropRouterWithEstimation
MaxPropRouterWithEstimation	src/routing/MaxPropRouterWithEstimation.java	/^public class MaxPropRouterWithEstimation extends ActiveRouter {$/;"	c
MaxPropTupleComparator	src/routing/MaxPropRouter.java	/^		public MaxPropTupleComparator(int threshold) {$/;"	m	class:MaxPropRouter.MaxPropTupleComparator
MaxPropTupleComparator	src/routing/MaxPropRouter.java	/^	private class MaxPropTupleComparator$/;"	c	class:MaxPropRouter
MaxPropTupleComparator	src/routing/MaxPropRouterWithEstimation.java	/^		public MaxPropTupleComparator(int threshold) {$/;"	m	class:MaxPropRouterWithEstimation.MaxPropTupleComparator
MaxPropTupleComparator	src/routing/MaxPropRouterWithEstimation.java	/^	private class MaxPropTupleComparator$/;"	c	class:MaxPropRouterWithEstimation
MeetingProbabilitySet	src/routing/maxprop/MeetingProbabilitySet.java	/^	public MeetingProbabilitySet() {$/;"	m	class:MeetingProbabilitySet
MeetingProbabilitySet	src/routing/maxprop/MeetingProbabilitySet.java	/^	public MeetingProbabilitySet(double alpha,$/;"	m	class:MeetingProbabilitySet
MeetingProbabilitySet	src/routing/maxprop/MeetingProbabilitySet.java	/^	public MeetingProbabilitySet(int maxSetSize, double alpha) {$/;"	m	class:MeetingProbabilitySet
MeetingProbabilitySet	src/routing/maxprop/MeetingProbabilitySet.java	/^public class MeetingProbabilitySet {$/;"	c
Message	src/core/Message.java	/^	public Message(DTNHost from, DTNHost to, String id, int size) {$/;"	m	class:Message
Message	src/core/Message.java	/^public class Message implements Comparable<Message> {$/;"	c
MessageAvailabilityReport	src/report/MessageAvailabilityReport.java	/^	public MessageAvailabilityReport() {$/;"	m	class:MessageAvailabilityReport
MessageAvailabilityReport	src/report/MessageAvailabilityReport.java	/^public class MessageAvailabilityReport extends MessageLocationReport {$/;"	c
MessageBurstGenerator	src/input/MessageBurstGenerator.java	/^	public MessageBurstGenerator(Settings s) {$/;"	m	class:MessageBurstGenerator
MessageBurstGenerator	src/input/MessageBurstGenerator.java	/^public class MessageBurstGenerator extends MessageEventGenerator {$/;"	c
MessageChecker	src/test/MessageChecker.java	/^	public MessageChecker() {$/;"	m	class:MessageChecker
MessageChecker	src/test/MessageChecker.java	/^public class MessageChecker implements MessageListener {$/;"	c
MessageCopyCountReport	src/report/MessageCopyCountReport.java	/^public class MessageCopyCountReport extends MessageLocationReport {$/;"	c
MessageCreateEvent	src/input/MessageCreateEvent.java	/^	public MessageCreateEvent(int from, int to, String id, int size,$/;"	m	class:MessageCreateEvent
MessageCreateEvent	src/input/MessageCreateEvent.java	/^public class MessageCreateEvent extends MessageEvent {$/;"	c
MessageDelayReport	src/report/MessageDelayReport.java	/^	public MessageDelayReport() {$/;"	m	class:MessageDelayReport
MessageDelayReport	src/report/MessageDelayReport.java	/^public class MessageDelayReport extends Report implements MessageListener {$/;"	c
MessageDeleteEvent	src/input/MessageDeleteEvent.java	/^	public MessageDeleteEvent(int host, String id, double time,$/;"	m	class:MessageDeleteEvent
MessageDeleteEvent	src/input/MessageDeleteEvent.java	/^public class MessageDeleteEvent extends MessageEvent {$/;"	c
MessageDeliveryReport	src/report/MessageDeliveryReport.java	/^	public MessageDeliveryReport() {$/;"	m	class:MessageDeliveryReport
MessageDeliveryReport	src/report/MessageDeliveryReport.java	/^public class MessageDeliveryReport extends Report implements MessageListener {$/;"	c
MessageEvent	src/input/MessageEvent.java	/^	public MessageEvent(int from, int to, String id, double time) {$/;"	m	class:MessageEvent
MessageEvent	src/input/MessageEvent.java	/^public abstract class MessageEvent extends ExternalEvent {$/;"	c
MessageEventGenerator	src/input/MessageEventGenerator.java	/^	public MessageEventGenerator(Settings s){$/;"	m	class:MessageEventGenerator
MessageEventGenerator	src/input/MessageEventGenerator.java	/^public class MessageEventGenerator implements EventQueue {$/;"	c
MessageGraphic	src/gui/playfield/MessageGraphic.java	/^	public MessageGraphic(DTNHost from, DTNHost to) {$/;"	m	class:MessageGraphic
MessageGraphic	src/gui/playfield/MessageGraphic.java	/^public class MessageGraphic extends PlayFieldGraphic {$/;"	c
MessageGraphvizReport	src/report/MessageGraphvizReport.java	/^	public MessageGraphvizReport() {$/;"	m	class:MessageGraphvizReport
MessageGraphvizReport	src/report/MessageGraphvizReport.java	/^public class MessageGraphvizReport extends Report implements MessageListener {$/;"	c
MessageGraphvizReportTest	src/test/MessageGraphvizReportTest.java	/^public class MessageGraphvizReportTest extends TestCase {$/;"	c
MessageListener	src/core/MessageListener.java	/^public interface MessageListener {$/;"	i
MessageLocationReport	src/report/MessageLocationReport.java	/^	public MessageLocationReport() {$/;"	m	class:MessageLocationReport
MessageLocationReport	src/report/MessageLocationReport.java	/^public class MessageLocationReport extends Report implements UpdateListener {$/;"	c
MessageRelayEvent	src/input/MessageRelayEvent.java	/^	public MessageRelayEvent(int from, int to, String id, double time,$/;"	m	class:MessageRelayEvent
MessageRelayEvent	src/input/MessageRelayEvent.java	/^public class MessageRelayEvent extends MessageEvent {$/;"	c
MessageReport	src/report/MessageReport.java	/^	public MessageReport() {$/;"	m	class:MessageReport
MessageReport	src/report/MessageReport.java	/^public class MessageReport extends Report implements MessageListener {$/;"	c
MessageRouter	src/routing/MessageRouter.java	/^	protected MessageRouter(MessageRouter r) {$/;"	m	class:MessageRouter
MessageRouter	src/routing/MessageRouter.java	/^	public MessageRouter(Settings s) {$/;"	m	class:MessageRouter
MessageRouter	src/routing/MessageRouter.java	/^public abstract class MessageRouter {$/;"	c
MessageStatsReport	src/report/MessageStatsReport.java	/^	public MessageStatsReport() {$/;"	m	class:MessageStatsReport
MessageStatsReport	src/report/MessageStatsReport.java	/^public class MessageStatsReport extends Report implements MessageListener {$/;"	c
MessageTest	src/test/MessageTest.java	/^public class MessageTest extends TestCase {$/;"	c
MessageTransferAcceptPolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	public MessageTransferAcceptPolicy(Settings nsSettings) {$/;"	m	class:MessageTransferAcceptPolicy
MessageTransferAcceptPolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^public class MessageTransferAcceptPolicy {$/;"	c
ModifiedRandomDirection	src/movement/ModifiedRandomDirection.java	/^    public ModifiedRandomDirection( ModifiedRandomDirection other ) {$/;"	m	class:ModifiedRandomDirection
ModifiedRandomDirection	src/movement/ModifiedRandomDirection.java	/^    public ModifiedRandomDirection( Settings settings ) {$/;"	m	class:ModifiedRandomDirection
ModifiedRandomDirection	src/movement/ModifiedRandomDirection.java	/^public class ModifiedRandomDirection$/;"	c
ModuleCommunicationBus	src/core/ModuleCommunicationBus.java	/^	public ModuleCommunicationBus() {$/;"	m	class:ModuleCommunicationBus
ModuleCommunicationBus	src/core/ModuleCommunicationBus.java	/^public class ModuleCommunicationBus {$/;"	c
ModuleCommunicationBusTest	src/test/ModuleCommunicationBusTest.java	/^public class ModuleCommunicationBusTest extends TestCase {$/;"	c
ModuleCommunicationListener	src/core/ModuleCommunicationListener.java	/^public interface ModuleCommunicationListener {$/;"	i
MovementListener	src/core/MovementListener.java	/^public interface MovementListener {$/;"	i
MovementListenerTest	src/test/MovementListenerTest.java	/^public class MovementListenerTest {$/;"	c
MovementListenerTestReport	src/report/MovementListenerTestReport.java	/^public final class MovementListenerTestReport$/;"	c
MovementModel	src/movement/MovementModel.java	/^	public MovementModel() {$/;"	m	class:MovementModel
MovementModel	src/movement/MovementModel.java	/^	public MovementModel(MovementModel mm) {$/;"	m	class:MovementModel
MovementModel	src/movement/MovementModel.java	/^	public MovementModel(Settings settings) {$/;"	m	class:MovementModel
MovementModel	src/movement/MovementModel.java	/^public abstract class MovementModel {$/;"	c
MovementNs2Report	src/report/MovementNs2Report.java	/^	public MovementNs2Report() {$/;"	m	class:MovementNs2Report
MovementNs2Report	src/report/MovementNs2Report.java	/^public class MovementNs2Report extends Report implements MovementListener {$/;"	c
MovementReport	src/test/MovementListenerTest.java	/^	private static class MovementReport$/;"	c	class:MovementListenerTest
MsgCheckerEvent	src/test/MessageChecker.java	/^		public MsgCheckerEvent(Message m, DTNHost from, DTNHost to,$/;"	m	class:MessageChecker.MsgCheckerEvent
MsgCheckerEvent	src/test/MessageChecker.java	/^	private class MsgCheckerEvent {$/;"	c	class:MessageChecker
NAME_S	src/core/SimScenario.java	/^	public static final String NAME_S = "name";$/;"	f	class:SimScenario
NAN	src/report/Report.java	/^	public static final String NAN = "NaN";$/;"	f	class:Report
NET_SUB_NS	src/core/NetworkInterface.java	/^	public static final String NET_SUB_NS = "net";$/;"	f	class:NetworkInterface
NM_COUNT_S	src/routing/LifeRouter.java	/^	public static final String NM_COUNT_S = "nmcount";$/;"	f	class:LifeRouter
NODE_ARR_S	src/report/MovementNs2Report.java	/^	public static final String NODE_ARR_S = "nodeArray";$/;"	f	class:MovementNs2Report
NODE_MESSAGE_FILTERS_S	src/gui/NodeChooser.java	/^	public static final String NODE_MESSAGE_FILTERS_S = "nodeMessageFilters";$/;"	f	class:NodeChooser
NROF	src/test/AdjacencyGraphvizReportTest.java	/^	private static final int NROF = 3;$/;"	f	class:AdjacencyGraphvizReportTest	file:
NROF_COPIES	src/routing/SprayAndWaitRouter.java	/^	public static final String NROF_COPIES = "nrofCopies";$/;"	f	class:SprayAndWaitRouter
NROF_EVENTS_S	src/gui/EventLogPanel.java	/^	public static final String NROF_EVENTS_S = "nrofEvents";$/;"	f	class:EventLogPanel
NROF_FILES_S	src/movement/MapBasedMovement.java	/^	public static final String NROF_FILES_S = "nrofMapFiles";$/;"	f	class:MapBasedMovement
NROF_GROUPS_S	src/core/SimScenario.java	/^	public static final String NROF_GROUPS_S = "nrofHostGroups";$/;"	f	class:SimScenario
NROF_HOSTS	src/test/MaxPropDijkstraTest.java	/^	private final int NROF_HOSTS = 5;$/;"	f	class:MaxPropDijkstraTest	file:
NROF_HOSTS	src/test/MaxPropRouterTest.java	/^	private static final int NROF_HOSTS = 10;$/;"	f	class:MaxPropRouterTest	file:
NROF_HOSTS_S	src/core/SimScenario.java	/^	public static final String NROF_HOSTS_S = "nrofHosts";$/;"	f	class:SimScenario
NROF_HOSTS_S	src/report/MessageAvailabilityReport.java	/^	public static final String NROF_HOSTS_S = "nrofHosts";$/;"	f	class:MessageAvailabilityReport
NROF_INTERF_S	src/core/SimScenario.java	/^	public static final String NROF_INTERF_S = "nrofInterfaces";$/;"	f	class:SimScenario
NROF_INTTYPES_S	src/core/SimScenario.java	/^	public static final String NROF_INTTYPES_S = "nrofInterfaceTypes";$/;"	f	class:SimScenario
NROF_MCBCS_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String NROF_MCBCS_S = "nrofMCBACs";$/;"	f	class:MessageTransferAcceptPolicy
NROF_PRELOAD_S	src/movement/ExternalMovement.java	/^	public static final String NROF_PRELOAD_S = "nrofPreload";$/;"	f	class:ExternalMovement
NROF_REPORT_S	src/ui/DTNSimUI.java	/^	public static final String NROF_REPORT_S = "Report.nrofReports";$/;"	f	class:DTNSimUI
NROF_SERVICES_S	src/core/SimScenario.java	/^    public static final String NROF_SERVICES_S = "nrofServices";$/;"	f	class:SimScenario
NROF_SETTING	src/input/EventQueueHandler.java	/^	public static final String NROF_SETTING = "nrof";$/;"	f	class:EventQueueHandler
NROF_TST_NODES	src/test/WKTReaderTest.java	/^	private final int NROF_TST_NODES = 9;$/;"	f	class:WKTReaderTest	file:
NROF_VM_S	src/core/SimScenario.java	/^	public static final String NROF_VM_S = "nrofVMs";$/;"	f	class:SimScenario
NR_OF_MEETING_SPOTS_SETTING	src/movement/EveningActivityMovement.java	/^	public static final String NR_OF_MEETING_SPOTS_SETTING = "nrOfMeetingSpots";$/;"	f	class:EveningActivityMovement
NR_OF_OFFICES_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String NR_OF_OFFICES_SETTING = "nrOfOffices";$/;"	f	class:OfficeActivityMovement
NS_CMD_S	src/report/MovementNs2Report.java	/^	public static final String NS_CMD_S = "nsCmd";$/;"	f	class:MovementNs2Report
NetworkInterface	src/core/NetworkInterface.java	/^	public NetworkInterface() {$/;"	m	class:NetworkInterface
NetworkInterface	src/core/NetworkInterface.java	/^	public NetworkInterface(NetworkInterface ni) {$/;"	m	class:NetworkInterface
NetworkInterface	src/core/NetworkInterface.java	/^	public NetworkInterface(Settings s) {$/;"	m	class:NetworkInterface
NetworkInterface	src/core/NetworkInterface.java	/^abstract public class NetworkInterface implements ModuleCommunicationListener {$/;"	c
NodeChooser	src/gui/NodeChooser.java	/^	public NodeChooser(List<DTNHost> nodes,	DTNSimGUI gui) {$/;"	m	class:NodeChooser
NodeChooser	src/gui/NodeChooser.java	/^public class NodeChooser extends JPanel implements ActionListener {$/;"	c
NodeDensityReport	src/report/NodeDensityReport.java	/^	public NodeDensityReport() {$/;"	m	class:NodeDensityReport
NodeDensityReport	src/report/NodeDensityReport.java	/^public class NodeDensityReport$/;"	c
NodeFilter	src/gui/nodefilter/NodeFilter.java	/^public interface NodeFilter {$/;"	i
NodeGraphic	src/gui/playfield/NodeGraphic.java	/^	public NodeGraphic(DTNHost node) {$/;"	m	class:NodeGraphic
NodeGraphic	src/gui/playfield/NodeGraphic.java	/^public class NodeGraphic extends PlayFieldGraphic {$/;"	c
NodeMessageFilter	src/gui/nodefilter/NodeMessageFilter.java	/^	public NodeMessageFilter(String messageId) {$/;"	m	class:NodeMessageFilter
NodeMessageFilter	src/gui/nodefilter/NodeMessageFilter.java	/^public class NodeMessageFilter implements NodeFilter {$/;"	c
OFFICE_LOCATIONS_FILE_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String OFFICE_LOCATIONS_FILE_SETTING =$/;"	f	class:OfficeActivityMovement
OFFICE_MAX_WAIT_TIME_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String OFFICE_MAX_WAIT_TIME_SETTING =$/;"	f	class:OfficeActivityMovement
OFFICE_MIN_WAIT_TIME_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String OFFICE_MIN_WAIT_TIME_SETTING =$/;"	f	class:OfficeActivityMovement
OFFICE_SIZE_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String OFFICE_SIZE_SETTING = "officeSize";$/;"	f	class:OfficeActivityMovement
OFFICE_WAIT_TIME_PARETO_COEFF_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String OFFICE_WAIT_TIME_PARETO_COEFF_SETTING =$/;"	f	class:OfficeActivityMovement
OFFSET_S	src/movement/GridLocation.java	/^	public static final String OFFSET_S = "randomOffset";$/;"	f	class:GridLocation
ONLY_AVERAGE_SETTING	src/report/NodeDensityReport.java	/^	public static final String ONLY_AVERAGE_SETTING = "onlyAverage";$/;"	f	class:NodeDensityReport
OPTIMIZATION_SETTINGS_NS	src/core/World.java	/^	public static final String OPTIMIZATION_SETTINGS_NS = "Optimization";$/;"	f	class:World
OUTPUT_SETTING	src/report/Report.java	/^	public static final String OUTPUT_SETTING = "output";$/;"	f	class:Report
OUT_SUFFIX	src/report/Report.java	/^	public static final String OUT_SUFFIX = ".txt";$/;"	f	class:Report
OfficeActivityMovement	src/movement/OfficeActivityMovement.java	/^	public OfficeActivityMovement(OfficeActivityMovement proto) {$/;"	m	class:OfficeActivityMovement
OfficeActivityMovement	src/movement/OfficeActivityMovement.java	/^	public OfficeActivityMovement(Settings settings) {$/;"	m	class:OfficeActivityMovement
OfficeActivityMovement	src/movement/OfficeActivityMovement.java	/^public class OfficeActivityMovement extends MapBasedMovement implements$/;"	c
OneFromEachMessageGenerator	src/input/OneFromEachMessageGenerator.java	/^	public OneFromEachMessageGenerator(Settings s) {$/;"	m	class:OneFromEachMessageGenerator
OneFromEachMessageGenerator	src/input/OneFromEachMessageGenerator.java	/^public class OneFromEachMessageGenerator extends MessageEventGenerator {$/;"	c
OneToEachMessageGenerator	src/input/OneToEachMessageGenerator.java	/^	public OneToEachMessageGenerator(Settings s) {$/;"	m	class:OneToEachMessageGenerator
OneToEachMessageGenerator	src/input/OneToEachMessageGenerator.java	/^public class OneToEachMessageGenerator extends MessageEventGenerator {$/;"	c
PADDING	src/gui/EventLogControlPanel.java	/^	private static final int PADDING = 5;$/;"	f	class:EventLogControlPanel	file:
PANEL_TITLE	src/gui/EventLogPanel.java	/^	private static final String PANEL_TITLE = "Event log";$/;"	f	class:EventLogPanel	file:
PATH_COLOR	src/gui/playfield/MapGraphic.java	/^	private final Color PATH_COLOR = Color.LIGHT_GRAY;$/;"	f	class:MapGraphic	file:
PATH_COLOR	src/gui/playfield/PathGraphic.java	/^	private final static Color PATH_COLOR = Color.RED;$/;"	f	class:PathGraphic	file:
PATH_GRAPHICS	src/gui/GUIControls.java	/^	private static final String PATH_GRAPHICS = "buttonGraphics\/";$/;"	f	class:GUIControls	file:
PATH_LENGTH	src/movement/RandomWaypoint.java	/^	private static final int PATH_LENGTH = 1;$/;"	f	class:RandomWaypoint	file:
PATH_SETTING	src/input/EventQueueHandler.java	/^	public static final String PATH_SETTING = "filePath";$/;"	f	class:EventQueueHandler
PATH_SETTING	src/input/ExternalEventsQueue.java	/^	public static final String PATH_SETTING = "filePath";$/;"	f	class:ExternalEventsQueue
PAUSE_TEXT	src/gui/EventLogControlPanel.java	/^	private static final String PAUSE_TEXT = "pause";$/;"	f	class:EventLogControlPanel	file:
PEncMax	src/routing/ProphetV2Router.java	/^	public static final double PEncMax = 0.5;$/;"	f	class:ProphetV2Router
PINGPONG	src/movement/map/MapRoute.java	/^	public static final int PINGPONG = 2;$/;"	f	class:MapRoute
PING_DEST_RANGE	src/applications/PingApplication.java	/^	public static final String PING_DEST_RANGE = "destinationRange";$/;"	f	class:PingApplication
PING_INTERVAL	src/applications/PingApplication.java	/^	public static final String PING_INTERVAL = "interval";$/;"	f	class:PingApplication
PING_OFFSET	src/applications/PingApplication.java	/^	public static final String PING_OFFSET = "offset";$/;"	f	class:PingApplication
PING_PASSIVE	src/applications/PingApplication.java	/^	public static final String PING_PASSIVE = "passive";$/;"	f	class:PingApplication
PING_PING_SIZE	src/applications/PingApplication.java	/^	public static final String PING_PING_SIZE = "pingSize";$/;"	f	class:PingApplication
PING_PONG_SIZE	src/applications/PingApplication.java	/^	public static final String PING_PONG_SIZE = "pongSize";$/;"	f	class:PingApplication
PING_SEED	src/applications/PingApplication.java	/^	public static final String PING_SEED = "seed";$/;"	f	class:PingApplication
PLAYFIELD_OFFSET	src/gui/playfield/PlayField.java	/^	public static final int PLAYFIELD_OFFSET = 10;$/;"	f	class:PlayField
POINT	src/input/WKTReader.java	/^	public static final String POINT = "POINT";$/;"	f	class:WKTReader
POINTS	src/test/WKTPointReaderTest.java	/^	private final Coord[] POINTS = {$/;"	f	class:WKTPointReaderTest	file:
POINTS_IN_MAP	src/test/PointsOfInterestTest.java	/^	private static final String[] POINTS_IN_MAP = {$/;"	f	class:PointsOfInterestTest	file:
POINT_DATA	src/test/WKTPointReaderTest.java	/^	private final String POINT_DATA =$/;"	f	class:WKTPointReaderTest	file:
POI_FILE_S	src/movement/map/PointsOfInterest.java	/^	public static final String POI_FILE_S = "poiFile";$/;"	f	class:PointsOfInterest
POI_NS	src/movement/map/PointsOfInterest.java	/^	public static final String POI_NS = "PointsOfInterest";$/;"	f	class:PointsOfInterest
POI_SELECT_S	src/movement/map/PointsOfInterest.java	/^	public static final String POI_SELECT_S = "pois";$/;"	f	class:PointsOfInterest
PQ_INIT_SIZE	src/movement/map/DijkstraPathFinder.java	/^	private static final int PQ_INIT_SIZE = 11;$/;"	f	class:DijkstraPathFinder	file:
PQ_INIT_SIZE	src/routing/maxprop/MaxPropDijkstra.java	/^	private static final int PQ_INIT_SIZE = 11;$/;"	f	class:MaxPropDijkstra	file:
PQ_INIT_SIZE	src/routing/schedule/ScheduleDijkstra.java	/^	private static final int PQ_INIT_SIZE = 11;$/;"	f	class:ScheduleDijkstra	file:
PRECISION_SETTING	src/report/Report.java	/^	public static final String PRECISION_SETTING = "precision";$/;"	f	class:Report
PRELOAD_SETTING	src/input/EventQueueHandler.java	/^	public static final String PRELOAD_SETTING = "nrofPreload";$/;"	f	class:EventQueueHandler
PRELOAD_SETTING	src/input/ExternalEventsQueue.java	/^	public static final String PRELOAD_SETTING = "nrofPreload";$/;"	f	class:ExternalEventsQueue
PROBABILITIES_STRING	src/movement/BusTravellerMovement.java	/^	public static final String PROBABILITIES_STRING = "probs";$/;"	f	class:BusTravellerMovement
PROBABILITY_TAKE_OTHER_BUS	src/movement/BusTravellerMovement.java	/^	public static final String PROBABILITY_TAKE_OTHER_BUS = "probTakeOtherBus";$/;"	f	class:BusTravellerMovement
PROBABILITY_TO_GO_SHOPPING_SETTING	src/movement/WorkingDayMovement.java	/^	public static final String PROBABILITY_TO_GO_SHOPPING_SETTING =$/;"	f	class:WorkingDayMovement
PROBABILITY_TO_OWN_CAR_SETTING	src/movement/WorkingDayMovement.java	/^	public static final String PROBABILITY_TO_OWN_CAR_SETTING = "ownCarProb";$/;"	f	class:WorkingDayMovement
PROB_SET_MAX_SIZE_S	src/routing/MaxPropRouter.java	/^	public static final String PROB_SET_MAX_SIZE_S = "probSetMaxSize";$/;"	f	class:MaxPropRouter
PROPHET_NS	src/routing/ProphetRouter.java	/^	public static final String PROPHET_NS = "ProphetRouter";$/;"	f	class:ProphetRouter
PROPHET_NS	src/routing/ProphetRouterWithEstimation.java	/^	public static final String PROPHET_NS = "ProphetRouterWithEstimation";$/;"	f	class:ProphetRouterWithEstimation
PROPHET_NS	src/routing/ProphetV2Router.java	/^	public static final String PROPHET_NS = "ProphetV2Router";$/;"	f	class:ProphetV2Router
P_AVG_TARGET_S	src/routing/ProphetRouterWithEstimation.java	/^	public static final String P_AVG_TARGET_S = "targetPavg";$/;"	f	class:ProphetRouterWithEstimation
P_INIT	src/routing/ProphetRouter.java	/^	public static final double P_INIT = 0.75;$/;"	f	class:ProphetRouter
P_INIT	src/routing/ProphetRouterWithEstimation.java	/^	public static final double P_INIT = 0.75;$/;"	f	class:ProphetRouterWithEstimation
ParetoRNG	src/util/ParetoRNG.java	/^	public ParetoRNG(Random rng, double k, double minValue, double maxValue) {$/;"	m	class:ParetoRNG
ParetoRNG	src/util/ParetoRNG.java	/^public class ParetoRNG {$/;"	c
ParserHandler	src/input/DTN2Events.java	/^		public ParserHandler(int hostID, DTN2Events eventsHandler,$/;"	m	class:DTN2Events.ParserHandler
ParserHandler	src/input/DTN2Events.java	/^	public class ParserHandler implements CLAInterface {$/;"	c	class:DTN2Events
PassiveRouter	src/routing/PassiveRouter.java	/^	protected PassiveRouter(PassiveRouter r) {$/;"	m	class:PassiveRouter
PassiveRouter	src/routing/PassiveRouter.java	/^	public PassiveRouter(Settings s) {$/;"	m	class:PassiveRouter
PassiveRouter	src/routing/PassiveRouter.java	/^public class PassiveRouter extends MessageRouter {$/;"	c
Path	src/movement/Path.java	/^	public Path() {$/;"	m	class:Path
Path	src/movement/Path.java	/^	public Path(Path path) {$/;"	m	class:Path
Path	src/movement/Path.java	/^	public Path(double speed) {$/;"	m	class:Path
Path	src/movement/Path.java	/^public class Path  {$/;"	c
PathGraphic	src/gui/playfield/PathGraphic.java	/^	public PathGraphic(Path path) {$/;"	m	class:PathGraphic
PathGraphic	src/gui/playfield/PathGraphic.java	/^public class PathGraphic extends PlayFieldGraphic {$/;"	c
PingAppReporter	src/report/PingAppReporter.java	/^public class PingAppReporter extends Report implements ApplicationListener {$/;"	c
PingApplication	src/applications/PingApplication.java	/^	public PingApplication(PingApplication a) {$/;"	m	class:PingApplication
PingApplication	src/applications/PingApplication.java	/^	public PingApplication(Settings s) {$/;"	m	class:PingApplication
PingApplication	src/applications/PingApplication.java	/^public class PingApplication extends Application {$/;"	c
PlayField	src/gui/playfield/PlayField.java	/^	public PlayField (World w, DTNSimGUI gui) {$/;"	m	class:PlayField
PlayField	src/gui/playfield/PlayField.java	/^public class PlayField extends JPanel {$/;"	c
PlayFieldGraphic	src/gui/playfield/PlayFieldGraphic.java	/^public abstract class PlayFieldGraphic {$/;"	c
PlayfieldMouseHandler	src/gui/DTNSimGUI.java	/^	private class PlayfieldMouseHandler extends MouseAdapter implements$/;"	c	class:DTNSimGUI
PointsOfInterest	src/movement/map/PointsOfInterest.java	/^	public PointsOfInterest(SimMap parentMap, int [] okMapNodeTypes,$/;"	m	class:PointsOfInterest
PointsOfInterest	src/movement/map/PointsOfInterest.java	/^public class PointsOfInterest {$/;"	c
PointsOfInterestTest	src/test/PointsOfInterestTest.java	/^public class PointsOfInterestTest extends TestCase {$/;"	c
ProphetRouter	src/routing/ProphetRouter.java	/^	protected ProphetRouter(ProphetRouter r) {$/;"	m	class:ProphetRouter
ProphetRouter	src/routing/ProphetRouter.java	/^	public ProphetRouter(Settings s) {$/;"	m	class:ProphetRouter
ProphetRouter	src/routing/ProphetRouter.java	/^public class ProphetRouter extends ActiveRouter {$/;"	c
ProphetRouterTest	src/test/ProphetRouterTest.java	/^public class ProphetRouterTest extends AbstractRouterTest {$/;"	c
ProphetRouterWithEstimation	src/routing/ProphetRouterWithEstimation.java	/^	protected ProphetRouterWithEstimation(ProphetRouterWithEstimation r) {$/;"	m	class:ProphetRouterWithEstimation
ProphetRouterWithEstimation	src/routing/ProphetRouterWithEstimation.java	/^	public ProphetRouterWithEstimation(Settings s) {$/;"	m	class:ProphetRouterWithEstimation
ProphetRouterWithEstimation	src/routing/ProphetRouterWithEstimation.java	/^public class ProphetRouterWithEstimation extends ActiveRouter {$/;"	c
ProphetV2Router	src/routing/ProphetV2Router.java	/^	protected ProphetV2Router(ProphetV2Router r) {$/;"	m	class:ProphetV2Router
ProphetV2Router	src/routing/ProphetV2Router.java	/^	public ProphetV2Router(Settings s) {$/;"	m	class:ProphetV2Router
ProphetV2Router	src/routing/ProphetV2Router.java	/^public class ProphetV2Router extends ActiveRouter {$/;"	c
Q_MODE_FIFO	src/routing/MessageRouter.java	/^	public static final int Q_MODE_FIFO = 2;$/;"	f	class:MessageRouter
Q_MODE_RANDOM	src/routing/MessageRouter.java	/^	public static final int Q_MODE_RANDOM = 1;$/;"	f	class:MessageRouter
RANDOMIZE_UPDATES_S	src/core/World.java	/^	public static final String RANDOMIZE_UPDATES_S = "randomizeUpdateOrder";$/;"	f	class:World
RANGE_DELIMETER	src/core/DTNSim.java	/^	public static final String RANGE_DELIMETER = ":";$/;"	f	class:DTNSim
RANGE_ID	src/core/NetworkInterface.java	/^	public static final String RANGE_ID = "Network.radioRange";$/;"	f	class:NetworkInterface
RAW_OUTPUT_SETTING	src/report/JumpSizeDistributionReport.java	/^	public static final String RAW_OUTPUT_SETTING = "outputRawData";$/;"	f	class:JumpSizeDistributionReport
RCV_OK	src/routing/MessageRouter.java	/^	public static final int RCV_OK = 0;$/;"	f	class:MessageRouter
READY_MODE	src/movement/HomeActivityMovement.java	/^	private static final int READY_MODE = 2;$/;"	f	class:HomeActivityMovement	file:
REF_COLOR	src/gui/playfield/ScaleReferenceGraphic.java	/^	private final Color REF_COLOR = Color.BLACK;$/;"	f	class:ScaleReferenceGraphic	file:
REMOVE	src/input/StandardEventsReader.java	/^	public static final String REMOVE = "R";$/;"	f	class:StandardEventsReader
REPORTDIR_SETTING	src/report/Report.java	/^	public static final String REPORTDIR_SETTING = "Report.reportDir";$/;"	f	class:Report
REPORTED_MESSAGES	src/report/MessageLocationReport.java	/^	public static final String REPORTED_MESSAGES = "messages";$/;"	f	class:MessageLocationReport
REPORTED_NODES	src/report/SnapshotReport.java	/^	public static final String REPORTED_NODES = "nodes";$/;"	f	class:SnapshotReport
REPORT_NS	src/report/Report.java	/^	public static final String REPORT_NS = "Report";$/;"	f	class:Report
REPORT_PAC	src/ui/DTNSimUI.java	/^	private static final String REPORT_PAC = "report.";$/;"	f	class:DTNSimUI	file:
REPORT_S	src/ui/DTNSimUI.java	/^	public static final String REPORT_S = "Report.report";$/;"	f	class:DTNSimUI
RESET_METHOD_NAME	src/core/DTNSim.java	/^	public static final String RESET_METHOD_NAME = "reset";$/;"	f	class:DTNSim
RESPONSE_PREFIX	src/routing/ActiveRouter.java	/^	public static final String RESPONSE_PREFIX = "R_";$/;"	f	class:ActiveRouter
RNG_SEED	src/movement/MovementModel.java	/^	public static final String RNG_SEED = "rngSeed";$/;"	f	class:MovementModel
ROUTER_S	src/core/SimScenario.java	/^	public static final String ROUTER_S = "router";$/;"	f	class:SimScenario
ROUTE_FILE_S	src/movement/MapRouteMovement.java	/^	public static final String ROUTE_FILE_S = "routeFile";$/;"	f	class:MapRouteMovement
ROUTE_FIRST_STOP_S	src/movement/MapRouteMovement.java	/^	public static final String ROUTE_FIRST_STOP_S = "routeFirstStop";$/;"	f	class:MapRouteMovement
ROUTE_TYPE_S	src/movement/MapRouteMovement.java	/^	public static final String ROUTE_TYPE_S = "routeType";$/;"	f	class:MapRouteMovement
ROUTING_PACKAGE	src/core/SimScenario.java	/^	private static final String ROUTING_PACKAGE = "routing.";$/;"	f	class:SimScenario	file:
ROWS_S	src/movement/GridLocation.java	/^	public static final String ROWS_S = "rows";$/;"	f	class:GridLocation
RS_S	src/test/SettingsTest.java	/^	private String RS_S = "runSetting";$/;"	f	class:SettingsTest	file:
RadiusOfGyrationReport	src/report/RadiusOfGyrationReport.java	/^	public RadiusOfGyrationReport() {$/;"	m	class:RadiusOfGyrationReport
RadiusOfGyrationReport	src/report/RadiusOfGyrationReport.java	/^public final class RadiusOfGyrationReport$/;"	c
RandomDirection	src/movement/RandomDirection.java	/^    public RandomDirection( RandomDirection other ) {$/;"	m	class:RandomDirection
RandomDirection	src/movement/RandomDirection.java	/^    public RandomDirection( Settings settings ) {$/;"	m	class:RandomDirection
RandomDirection	src/movement/RandomDirection.java	/^public class RandomDirection$/;"	c
RandomWalk	src/movement/RandomWalk.java	/^	private RandomWalk(RandomWalk rwp) {$/;"	m	class:RandomWalk	file:
RandomWalk	src/movement/RandomWalk.java	/^	public RandomWalk(Settings settings) {$/;"	m	class:RandomWalk
RandomWalk	src/movement/RandomWalk.java	/^public class RandomWalk extends MovementModel implements SwitchableMovement {$/;"	c
RandomWaypoint	src/movement/RandomWaypoint.java	/^	protected RandomWaypoint(RandomWaypoint rwp) {$/;"	m	class:RandomWaypoint
RandomWaypoint	src/movement/RandomWaypoint.java	/^	public RandomWaypoint(Settings settings) {$/;"	m	class:RandomWaypoint
RandomWaypoint	src/movement/RandomWaypoint.java	/^public class RandomWaypoint extends MovementModel {$/;"	c
Range	src/util/Range.java	/^	public Range(String str) throws NumberFormatException {$/;"	m	class:Range
Range	src/util/Range.java	/^	public Range(double min, double max) {$/;"	m	class:Range
Range	src/util/Range.java	/^public class Range {$/;"	c
Report	src/report/Report.java	/^	public Report(){$/;"	m	class:Report
Report	src/report/Report.java	/^public abstract class Report {$/;"	c
RoutingInfo	src/routing/util/RoutingInfo.java	/^	public RoutingInfo(Object o) {$/;"	m	class:RoutingInfo
RoutingInfo	src/routing/util/RoutingInfo.java	/^	public RoutingInfo(String infoText) {$/;"	m	class:RoutingInfo
RoutingInfo	src/routing/util/RoutingInfo.java	/^public class RoutingInfo {$/;"	c
RoutingInfoWindow	src/gui/RoutingInfoWindow.java	/^	public RoutingInfoWindow(DTNHost host) {$/;"	m	class:RoutingInfoWindow
RoutingInfoWindow	src/gui/RoutingInfoWindow.java	/^public class RoutingInfoWindow extends JFrame implements ActionListener {$/;"	c
SAMPLE_INTERVAL_SETTING	src/report/SamplingReport.java	/^	public static final String SAMPLE_INTERVAL_SETTING = "sampleInterval";$/;"	f	class:SamplingReport
SCAN_ENERGY_S	src/routing/util/EnergyModel.java	/^	public static final String SCAN_ENERGY_S = "scanEnergy";$/;"	f	class:EnergyModel
SCAN_INTERVAL_ID	src/core/NetworkInterface.java	/^	public static final String SCAN_INTERVAL_ID = "Network.scanInterval";$/;"	f	class:NetworkInterface
SCAN_INTERVAL_S	src/core/NetworkInterface.java	/^	public static final String SCAN_INTERVAL_S = "scanInterval";$/;"	f	class:NetworkInterface
SCAN_RSP_ENERGY_S	src/routing/util/EnergyModel.java	/^	public static final String SCAN_RSP_ENERGY_S = "scanResponseEnergy";$/;"	f	class:EnergyModel
SCENARIO_NS	src/core/SimScenario.java	/^	public static final String SCENARIO_NS = "Scenario";$/;"	f	class:SimScenario
SCREENSHOT_FILE	src/gui/GUIControls.java	/^	private static final String SCREENSHOT_FILE = "screenshot";$/;"	f	class:GUIControls	file:
SCREENSHOT_FILE_TYPE	src/gui/GUIControls.java	/^	private static final String SCREENSHOT_FILE_TYPE = "png";$/;"	f	class:GUIControls	file:
SECONDS_IN_TIME_UNIT	src/test/ProphetRouterTest.java	/^	private static int SECONDS_IN_TIME_UNIT = 60;$/;"	f	class:ProphetRouterTest	file:
SECONDS_IN_UNIT_S	src/routing/ProphetRouter.java	/^	public static final String SECONDS_IN_UNIT_S ="secondsInTimeUnit";$/;"	f	class:ProphetRouter
SECONDS_IN_UNIT_S	src/routing/ProphetV2Router.java	/^	public static final String SECONDS_IN_UNIT_S ="secondsInTimeUnit";$/;"	f	class:ProphetV2Router
SEND	src/input/StandardEventsReader.java	/^	public static final String SEND = "S";$/;"	f	class:StandardEventsReader
SENDING	src/input/MessageRelayEvent.java	/^	public static final int SENDING = 1;$/;"	f	class:MessageRelayEvent
SEND_QUEUE_MODE_S	src/routing/MessageRouter.java	/^	public static final String SEND_QUEUE_MODE_S = "sendQueue";$/;"	f	class:MessageRouter
SERVICE_EXECTIME_S	src/core/SimScenario.java	/^	public static final String SERVICE_EXECTIME_S = "executionTime";$/;"	f	class:SimScenario
SERVICE_NS	src/core/SimScenario.java	/^	public static final String SERVICE_NS = "Service";$/;"	f	class:SimScenario
SETTINGS_NAMESPACE	src/input/EventQueueHandler.java	/^	public static final String SETTINGS_NAMESPACE = "Events";$/;"	f	class:EventQueueHandler
SETTINGS_NAMESPACE	src/input/ExternalEventsQueue.java	/^	public static final String SETTINGS_NAMESPACE = "ExternalEvents";$/;"	f	class:ExternalEventsQueue
SETTING_OUTPUT_S	src/core/Settings.java	/^	public static final String SETTING_OUTPUT_S = "Settings.output";$/;"	f	class:Settings
SET_PREFIX	src/test/ContactTimesReportTest.java	/^	private final static String SET_PREFIX = "ContactTimesReport.";$/;"	f	class:ContactTimesReportTest	file:
SET_PREFIX	src/test/TotalContactTimeReportTest.java	/^	private final String SET_PREFIX = "TotalContactTimeReport.";$/;"	f	class:TotalContactTimeReportTest	file:
SHOW_BUFFER_S	src/gui/SimMenuBar.java	/^	public static final String SHOW_BUFFER_S = "showMessageBuffer";$/;"	f	class:SimMenuBar
SHOW_CONNECTIONS_S	src/gui/SimMenuBar.java	/^	public static final String SHOW_CONNECTIONS_S = "showNodeConnections";$/;"	f	class:SimMenuBar
SHOW_NODE_NAMESTR_S	src/gui/SimMenuBar.java	/^	public static final String SHOW_NODE_NAMESTR_S = "showNodeNameStrings";$/;"	f	class:SimMenuBar
SHOW_RADIO_COVERAGES_S	src/gui/SimMenuBar.java	/^	public static final String SHOW_RADIO_COVERAGES_S = "showNodeRadioCoverages";$/;"	f	class:SimMenuBar
SHOW_TEXT	src/gui/EventLogControlPanel.java	/^	private static final String SHOW_TEXT = "show";$/;"	f	class:EventLogControlPanel	file:
SIMULATE_CON_ONCE_S	src/core/World.java	/^	public static final String SIMULATE_CON_ONCE_S = "simulateConnectionsOnce";$/;"	f	class:World
SIM_CON_S	src/core/SimScenario.java	/^	public static final String SIM_CON_S = "simulateConnections";$/;"	f	class:SimScenario
SIZE	src/gui/playfield/ScaleReferenceGraphic.java	/^	private final int SIZE = 8;$/;"	f	class:ScaleReferenceGraphic	file:
SPACING_S	src/movement/GridLocation.java	/^	public static final String SPACING_S = "spacing";$/;"	f	class:GridLocation
SPEED	src/movement/MovementModel.java	/^	public static final String SPEED = "speed";$/;"	f	class:MovementModel
SPEED_ID	src/core/NetworkInterface.java	/^	public static final String SPEED_ID = "Network.speed";$/;"	f	class:NetworkInterface
SPLIT_PANE_LOG_WEIGHT	src/gui/MainWindow.java	/^	private static final double SPLIT_PANE_LOG_WEIGHT = 0.2;$/;"	f	class:MainWindow	file:
SPRAYANDWAIT_NS	src/routing/SprayAndWaitRouter.java	/^	public static final String SPRAYANDWAIT_NS = "SprayAndWaitRouter";$/;"	f	class:SprayAndWaitRouter
STAGE_STRINGS	src/input/MessageRelayEvent.java	/^	public static final String[] STAGE_STRINGS = {"SENDING",$/;"	f	class:MessageRelayEvent
START_LOCATION_S	src/movement/LinearFormation.java	/^	public static final String START_LOCATION_S = "startLocation";$/;"	f	class:LinearFormation
START_LOCATION_S	src/movement/LinearMovement.java	/^	public static final String START_LOCATION_S = "startLocation";$/;"	f	class:LinearMovement
START_TIME	src/test/ConnectionTest.java	/^	public static final double START_TIME = 10.0;$/;"	f	class:ConnectionTest
STATE_DECIDED_TO_ENTER_A_BUS	src/movement/BusTravellerMovement.java	/^	public static final int STATE_DECIDED_TO_ENTER_A_BUS = 1;$/;"	f	class:BusTravellerMovement
STATE_TRAVELLING_ON_BUS	src/movement/BusTravellerMovement.java	/^	public static final int STATE_TRAVELLING_ON_BUS = 2;$/;"	f	class:BusTravellerMovement
STATE_WAITING_FOR_BUS	src/movement/BusTravellerMovement.java	/^	public static final int STATE_WAITING_FOR_BUS = 0;$/;"	f	class:BusTravellerMovement
STATE_WALKING_ELSEWHERE	src/movement/BusTravellerMovement.java	/^	public static final int STATE_WALKING_ELSEWHERE = 3;$/;"	f	class:BusTravellerMovement
STATIONARY_INPUT	src/test/ExternalMovementTest.java	/^	private static final String[] STATIONARY_INPUT = {$/;"	f	class:ExternalMovementTest	file:
STATIONARY_INPUT_COORDS	src/test/ExternalMovementTest.java	/^	private static final Coord[] STATIONARY_INPUT_COORDS = {$/;"	f	class:ExternalMovementTest	file:
STD_FOR_TIME_DIFF_SETTING	src/movement/HomeActivityMovement.java	/^	public static final String STD_FOR_TIME_DIFF_SETTING = "timeDiffSTD";$/;"	f	class:HomeActivityMovement
STR_Q_MODE_FIFO	src/routing/MessageRouter.java	/^	public static final String STR_Q_MODE_FIFO = "FIFO";$/;"	f	class:MessageRouter
STR_Q_MODE_RANDOM	src/routing/MessageRouter.java	/^	public static final String STR_Q_MODE_RANDOM = "RANDOM";$/;"	f	class:MessageRouter
SYNTAX	src/report/DistanceDelayReport.java	/^	public static final String SYNTAX =$/;"	f	class:DistanceDelayReport
SamplingReport	src/report/SamplingReport.java	/^	protected SamplingReport() {$/;"	m	class:SamplingReport
SamplingReport	src/report/SamplingReport.java	/^public abstract class SamplingReport$/;"	c
ScaleReferenceGraphic	src/gui/playfield/ScaleReferenceGraphic.java	/^public class ScaleReferenceGraphic extends PlayFieldGraphic {$/;"	c
ScheduleDijkstra	src/routing/schedule/ScheduleDijkstra.java	/^	public ScheduleDijkstra(ScheduleOracle oracle) {$/;"	m	class:ScheduleDijkstra
ScheduleDijkstra	src/routing/schedule/ScheduleDijkstra.java	/^public class ScheduleDijkstra {$/;"	c
ScheduleDijkstraTest	src/test/ScheduleDijkstraTest.java	/^public class ScheduleDijkstraTest extends TestCase {$/;"	c
ScheduleEntry	src/routing/schedule/ScheduleEntry.java	/^	public ScheduleEntry(double time, int from, int via, int to,$/;"	m	class:ScheduleEntry
ScheduleEntry	src/routing/schedule/ScheduleEntry.java	/^public class ScheduleEntry implements Serializable {$/;"	c
ScheduleOracle	src/routing/schedule/ScheduleOracle.java	/^	public ScheduleOracle() {$/;"	m	class:ScheduleOracle
ScheduleOracle	src/routing/schedule/ScheduleOracle.java	/^public class ScheduleOracle implements Serializable{$/;"	c
ScheduledUpdatesQueue	src/input/ScheduledUpdatesQueue.java	/^	public ScheduledUpdatesQueue(){$/;"	m	class:ScheduledUpdatesQueue
ScheduledUpdatesQueue	src/input/ScheduledUpdatesQueue.java	/^public class ScheduledUpdatesQueue implements EventQueue {$/;"	c
ScheduledUpdatesQueueTest	src/test/ScheduledUpdatesQueueTest.java	/^public class ScheduledUpdatesQueueTest extends TestCase {$/;"	c
Settings	src/core/Settings.java	/^	public Settings() {$/;"	m	class:Settings
Settings	src/core/Settings.java	/^	public Settings(String namespace) {$/;"	m	class:Settings
Settings	src/core/Settings.java	/^public class Settings {$/;"	c
SettingsError	src/core/SettingsError.java	/^	public SettingsError(Exception e) {$/;"	m	class:SettingsError
SettingsError	src/core/SettingsError.java	/^	public SettingsError(String cause) {$/;"	m	class:SettingsError
SettingsError	src/core/SettingsError.java	/^	public SettingsError(String cause, Exception e) {$/;"	m	class:SettingsError
SettingsError	src/core/SettingsError.java	/^public class SettingsError extends SimError {$/;"	c
SettingsTest	src/test/SettingsTest.java	/^public class SettingsTest extends TestCase {$/;"	c
ShortestPathMapBasedMovement	src/movement/ShortestPathMapBasedMovement.java	/^	protected ShortestPathMapBasedMovement(ShortestPathMapBasedMovement mbm) {$/;"	m	class:ShortestPathMapBasedMovement
ShortestPathMapBasedMovement	src/movement/ShortestPathMapBasedMovement.java	/^	public ShortestPathMapBasedMovement(Settings settings) {$/;"	m	class:ShortestPathMapBasedMovement
ShortestPathMapBasedMovement	src/movement/ShortestPathMapBasedMovement.java	/^public class ShortestPathMapBasedMovement extends MapBasedMovement implements$/;"	c
SimClock	src/core/SimClock.java	/^	private SimClock() {}$/;"	m	class:SimClock	file:
SimClock	src/core/SimClock.java	/^public class SimClock {$/;"	c
SimError	src/core/SimError.java	/^	public SimError(Exception e) {$/;"	m	class:SimError
SimError	src/core/SimError.java	/^	public SimError(String cause) {$/;"	m	class:SimError
SimError	src/core/SimError.java	/^	public SimError(String cause, Exception e) {$/;"	m	class:SimError
SimError	src/core/SimError.java	/^public class SimError extends AssertionError {$/;"	c
SimMap	src/movement/map/SimMap.java	/^	public SimMap(Map<Coord, MapNode> nodes) {$/;"	m	class:SimMap
SimMap	src/movement/map/SimMap.java	/^public class SimMap implements Serializable {$/;"	c
SimMenuBar	src/gui/SimMenuBar.java	/^	public SimMenuBar(PlayField field, NodeChooser nodeChooser) {$/;"	m	class:SimMenuBar
SimMenuBar	src/gui/SimMenuBar.java	/^public class SimMenuBar extends JMenuBar implements ActionListener {$/;"	c
SimScenario	src/core/SimScenario.java	/^	protected SimScenario() {$/;"	m	class:SimScenario
SimScenario	src/core/SimScenario.java	/^public class SimScenario implements Serializable {$/;"	c
SimpleBroadcastInterface	src/interfaces/SimpleBroadcastInterface.java	/^	public SimpleBroadcastInterface(Settings s)	{$/;"	m	class:SimpleBroadcastInterface
SimpleBroadcastInterface	src/interfaces/SimpleBroadcastInterface.java	/^	public SimpleBroadcastInterface(SimpleBroadcastInterface ni) {$/;"	m	class:SimpleBroadcastInterface
SimpleBroadcastInterface	src/interfaces/SimpleBroadcastInterface.java	/^public class SimpleBroadcastInterface extends NetworkInterface {$/;"	c
SnapshotReport	src/report/SnapshotReport.java	/^	public SnapshotReport() {$/;"	m	class:SnapshotReport
SnapshotReport	src/report/SnapshotReport.java	/^public abstract class SnapshotReport extends Report implements UpdateListener {$/;"	c
SprayAndWaitRouter	src/routing/SprayAndWaitRouter.java	/^	protected SprayAndWaitRouter(SprayAndWaitRouter r) {$/;"	m	class:SprayAndWaitRouter
SprayAndWaitRouter	src/routing/SprayAndWaitRouter.java	/^	public SprayAndWaitRouter(Settings s) {$/;"	m	class:SprayAndWaitRouter
SprayAndWaitRouter	src/routing/SprayAndWaitRouter.java	/^public class SprayAndWaitRouter extends ActiveRouter {$/;"	c
StandardEventsReader	src/input/StandardEventsReader.java	/^	public StandardEventsReader(File eventsFile){$/;"	m	class:StandardEventsReader
StandardEventsReader	src/input/StandardEventsReader.java	/^public class StandardEventsReader implements ExternalEventsReader {$/;"	c
StationaryMovement	src/movement/StationaryMovement.java	/^	public StationaryMovement(Settings s) {$/;"	m	class:StationaryMovement
StationaryMovement	src/movement/StationaryMovement.java	/^	public StationaryMovement(StationaryMovement sm) {$/;"	m	class:StationaryMovement
StationaryMovement	src/movement/StationaryMovement.java	/^public class StationaryMovement extends MovementModel {$/;"	c
StationaryMovement	src/test/StationaryMovement.java	/^	public StationaryMovement(Coord location) {$/;"	m	class:StationaryMovement
StationaryMovement	src/test/StationaryMovement.java	/^public class StationaryMovement extends MovementModel {$/;"	c
SwitchableMovement	src/movement/SwitchableMovement.java	/^public interface SwitchableMovement {$/;"	i
TARGET_S	src/movement/LinearMovement.java	/^	public static final String TARGET_S = "targetType";$/;"	f	class:LinearMovement
TEXT_FFW	src/gui/GUIControls.java	/^	private static final String TEXT_FFW = "enable\/disable fast forward";$/;"	f	class:GUIControls	file:
TEXT_PAUSE	src/gui/GUIControls.java	/^	private static final String TEXT_PAUSE = "pause simulation";$/;"	f	class:GUIControls	file:
TEXT_PLAY	src/gui/GUIControls.java	/^	private static final String TEXT_PLAY = "play simulation";$/;"	f	class:GUIControls	file:
TEXT_PLAY_UNTIL	src/gui/GUIControls.java	/^	private static final String TEXT_PLAY_UNTIL = "play simulation until sim time...";$/;"	f	class:GUIControls	file:
TEXT_SCREEN_SHOT	src/gui/GUIControls.java	/^	private static final String TEXT_SCREEN_SHOT = "screen shot";$/;"	f	class:GUIControls	file:
TEXT_SEPS	src/gui/GUIControls.java	/^	private static final String TEXT_SEPS = "simulated seconds per second";$/;"	f	class:GUIControls	file:
TEXT_SIMTIME	src/gui/GUIControls.java	/^	private static final String TEXT_SIMTIME = "Simulation time - "+$/;"	f	class:GUIControls	file:
TEXT_STEP	src/gui/GUIControls.java	/^	private static final String TEXT_STEP = "step forward one interval";$/;"	f	class:GUIControls	file:
TEXT_UP_CHOOSER	src/gui/GUIControls.java	/^	private static final String TEXT_UP_CHOOSER = "GUI update:";$/;"	f	class:GUIControls	file:
TIME_DELTA	src/test/WorldTest.java	/^	private static final double TIME_DELTA = 0.00001;$/;"	f	class:WorldTest	file:
TIME_SCALE_S	src/routing/MaxPropRouterWithEstimation.java	/^	public static final String TIME_SCALE_S ="timeScale";$/;"	f	class:MaxPropRouterWithEstimation
TIME_SCALE_S	src/routing/ProphetRouterWithEstimation.java	/^	public static final String TIME_SCALE_S ="timeScale";$/;"	f	class:ProphetRouterWithEstimation
TITLE_TEXT	src/gui/EventLogControlPanel.java	/^	private static final String TITLE_TEXT = "Event log controls";$/;"	f	class:EventLogControlPanel	file:
TO_HOST_RANGE_S	src/input/MessageEventGenerator.java	/^	public static final String TO_HOST_RANGE_S = "tohosts";$/;"	f	class:MessageEventGenerator
TO_ME_VALUE	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final int TO_ME_VALUE = -1;$/;"	f	class:MessageTransferAcceptPolicy
TO_RPOLICY_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String TO_RPOLICY_S = "toReceivePolicy";$/;"	f	class:MessageTransferAcceptPolicy
TO_SPOLICY_S	src/routing/util/MessageTransferAcceptPolicy.java	/^	public static final String TO_SPOLICY_S = "toSendPolicy";$/;"	f	class:MessageTransferAcceptPolicy
TRANSFERRED	src/input/MessageRelayEvent.java	/^	public static final int TRANSFERRED = 2;$/;"	f	class:MessageRelayEvent
TRANSMIT_ENERGY_S	src/routing/util/EnergyModel.java	/^	public static final String TRANSMIT_ENERGY_S = "transmitEnergy";$/;"	f	class:EnergyModel
TRANSMIT_RANGE_S	src/core/NetworkInterface.java	/^	public static final String TRANSMIT_RANGE_S = "transmitRange";$/;"	f	class:NetworkInterface
TRANSMIT_SPEED	src/test/AbstractRouterTest.java	/^	protected static final int TRANSMIT_SPEED = 10;$/;"	f	class:AbstractRouterTest
TRANSMIT_SPEEDS_S	src/interfaces/DistanceCapacityInterface.java	/^	public static final String TRANSMIT_SPEEDS_S = "transmitSpeeds";$/;"	f	class:DistanceCapacityInterface
TRANSMIT_SPEED_S	src/core/NetworkInterface.java	/^	public static final String TRANSMIT_SPEED_S = "transmitSpeed";$/;"	f	class:NetworkInterface
TRY_LATER_BUSY	src/routing/MessageRouter.java	/^	public static final int TRY_LATER_BUSY = 1;$/;"	f	class:MessageRouter
TST	src/test/SettingsTest.java	/^	private static final String TST = "tstSetting";$/;"	f	class:SettingsTest	file:
TST_RES	src/test/SettingsTest.java	/^	private static final String TST_RES = "tst";$/;"	f	class:SettingsTest	file:
TST_TOPOLOGY	src/test/WKTReaderTest.java	/^	private String TST_TOPOLOGY = "LINESTRING (1.0 1.0, 2.0 1.0, 3.0 1.0, 8.0 1.0) \\n\\r" +$/;"	f	class:WKTReaderTest	file:
TST_VAL	src/test/ModuleCommunicationBusTest.java	/^	private static final String TST_VAL = "test-value";$/;"	f	class:ModuleCommunicationBusTest	file:
TTL	src/test/EpidemicRouterTest.java	/^	private static int TTL = 300;$/;"	f	class:EpidemicRouterTest	file:
TTL_CHECK_INTERVAL	src/routing/ActiveRouter.java	/^	public static int TTL_CHECK_INTERVAL = 60;$/;"	f	class:ActiveRouter
TYPE_ABORT	src/test/MessageChecker.java	/^	public final String TYPE_ABORT = "abort";$/;"	f	class:MessageChecker
TYPE_CREATE	src/test/MessageChecker.java	/^	public final String TYPE_CREATE = "create";$/;"	f	class:MessageChecker
TYPE_DELETE	src/test/MessageChecker.java	/^	public final String TYPE_DELETE = "delete";$/;"	f	class:MessageChecker
TYPE_NONE	src/test/MessageChecker.java	/^	public final String TYPE_NONE = "none";$/;"	f	class:MessageChecker
TYPE_RELAY	src/test/MessageChecker.java	/^	public final String TYPE_RELAY = "relay";$/;"	f	class:MessageChecker
TYPE_START	src/test/MessageChecker.java	/^	public final String TYPE_START = "start";$/;"	f	class:MessageChecker
TestDTNHost	src/test/TestDTNHost.java	/^	public TestDTNHost(List<NetworkInterface> li,$/;"	m	class:TestDTNHost
TestDTNHost	src/test/TestDTNHost.java	/^public class TestDTNHost extends DTNHost {$/;"	c
TestInterface	src/test/TestInterface.java	/^	public TestInterface(Settings s) {$/;"	m	class:TestInterface
TestInterface	src/test/TestInterface.java	/^	public TestInterface(TestInterface ti) {$/;"	m	class:TestInterface
TestInterface	src/test/TestInterface.java	/^public class TestInterface extends NetworkInterface {$/;"	c
TestScenario	src/test/WorldTest.java	/^		public TestScenario() {	}$/;"	m	class:WorldTest.TestScenario
TestScenario	src/test/WorldTest.java	/^	private class TestScenario extends core.SimScenario {$/;"	c	class:WorldTest
TestSettings	src/test/TestSettings.java	/^	public TestSettings() {$/;"	m	class:TestSettings
TestSettings	src/test/TestSettings.java	/^	public TestSettings(String ns) {$/;"	m	class:TestSettings
TestSettings	src/test/TestSettings.java	/^public class TestSettings extends core.Settings {$/;"	c
TestUtils	src/test/TestUtils.java	/^	public TestUtils(List<ConnectionListener> cl, List<MessageListener> ml,$/;"	m	class:TestUtils
TestUtils	src/test/TestUtils.java	/^public class TestUtils {$/;"	c
TimeMap	src/routing/schedule/ScheduleDijkstra.java	/^		public TimeMap() {$/;"	m	class:ScheduleDijkstra.TimeMap
TimeMap	src/routing/schedule/ScheduleDijkstra.java	/^	private class TimeMap {$/;"	c	class:ScheduleDijkstra
TimeRange	src/util/ActivenessHandler.java	/^		public TimeRange(double start, double end) {$/;"	m	class:ActivenessHandler.TimeRange
TimeRange	src/util/ActivenessHandler.java	/^	private class TimeRange {$/;"	c	class:ActivenessHandler
Toolkit	toolkit/Common.pm	/^package Toolkit;$/;"	p
Toolkit	toolkit/ccdfPlotter.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/createCircles.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/createCreates.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/delProb.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/dieselnetConverter.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/dtnsim2parser.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/getAverages.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/getStats.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/getStatsAverages.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/messageAvailabilityAnalyzer.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/messageAvailabilityAnalyzer2.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/messageCopyCountAnalyzer.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/messageCopyCountPlotter.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/messageLocationAnimator.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/splotEnergy.pl	/^package Toolkit;$/;"	p
Toolkit	toolkit/transimsParser.pl	/^package Toolkit;$/;"	p
TotalContactTimeReport	src/report/TotalContactTimeReport.java	/^public class TotalContactTimeReport extends ContactTimesReport implements$/;"	c
TotalContactTimeReportTest	src/test/TotalContactTimeReportTest.java	/^public class TotalContactTimeReportTest extends TestCase {$/;"	c
TotalEncountersReport	src/report/TotalEncountersReport.java	/^	public TotalEncountersReport() {$/;"	m	class:TotalEncountersReport
TotalEncountersReport	src/report/TotalEncountersReport.java	/^public class TotalEncountersReport extends Report implements ConnectionListener,$/;"	c
TransportMovement	src/movement/TransportMovement.java	/^public interface TransportMovement extends SwitchableMovement {$/;"	i
Tuple	src/util/Tuple.java	/^	public Tuple(K key, V value) {$/;"	m	class:Tuple
Tuple	src/util/Tuple.java	/^public class Tuple<K,V>  {$/;"	c
TupleComparator	src/routing/ProphetRouter.java	/^	private class TupleComparator implements Comparator$/;"	c	class:ProphetRouter
TupleComparator	src/routing/ProphetRouterWithEstimation.java	/^	private class TupleComparator implements Comparator$/;"	c	class:ProphetRouterWithEstimation
TupleComparator	src/routing/ProphetV2Router.java	/^	private class TupleComparator implements Comparator$/;"	c	class:ProphetV2Router
UI_UP_INTERVAL	src/ui/DTNSimTextUI.java	/^	public static final long UI_UP_INTERVAL = 60000;$/;"	f	class:DTNSimTextUI
UNDERLAY_NS	src/gui/SimMenuBar.java	/^	public static final String UNDERLAY_NS = "GUI.UnderlayImage";$/;"	f	class:SimMenuBar
UP_INT_S	src/core/SimScenario.java	/^	public static final String UP_INT_S = "updateInterval";$/;"	f	class:SimScenario
UP_SPEEDS	src/gui/GUIControls.java	/^	public static final String[] UP_SPEEDS = {"-10", "-1", "0.1", "1", "10",$/;"	f	class:GUIControls
UniqueEncountersReport	src/report/UniqueEncountersReport.java	/^	public UniqueEncountersReport() {$/;"	m	class:UniqueEncountersReport
UniqueEncountersReport	src/report/UniqueEncountersReport.java	/^public class UniqueEncountersReport extends Report implements$/;"	c
UpdateListener	src/core/UpdateListener.java	/^public interface UpdateListener {$/;"	i
VALID_OPERATORS	src/core/ArithmeticCondition.java	/^	private static final String VALID_OPERATORS = "><=";$/;"	f	class:ArithmeticCondition	file:
VBRConnection	src/core/VBRConnection.java	/^   public VBRConnection(DTNHost fromNode, NetworkInterface fromInterface,$/;"	m	class:VBRConnection
VBRConnection	src/core/VBRConnection.java	/^public class VBRConnection extends Connection {$/;"	c
VM	src/core/VM.java	/^    public VM() {$/;"	m	class:VM
VM	src/core/VM.java	/^public class VM {$/;"	c
WAIT_TIME	src/movement/MovementModel.java	/^	public static final String WAIT_TIME = "waitTime";$/;"	f	class:MovementModel
WALKING_HOME_MODE	src/movement/HomeActivityMovement.java	/^	private static final int WALKING_HOME_MODE = 0;$/;"	f	class:HomeActivityMovement	file:
WALKING_TO_MEETING_SPOT_MODE	src/movement/EveningActivityMovement.java	/^	private static final int WALKING_TO_MEETING_SPOT_MODE = 0;$/;"	f	class:EveningActivityMovement	file:
WALKING_TO_OFFICE_MODE	src/movement/OfficeActivityMovement.java	/^	private static final int WALKING_TO_OFFICE_MODE = 0;$/;"	f	class:OfficeActivityMovement	file:
WARMUP_S	src/report/Report.java	/^	public static final String WARMUP_S = "warmup";$/;"	f	class:Report
WARMUP_S	src/routing/util/EnergyModel.java	/^	public static final String WARMUP_S = "energyWarmup";$/;"	f	class:EnergyModel
WINDOW_TITLE	src/gui/MainWindow.java	/^	public static final String WINDOW_TITLE = "ONE";$/;"	f	class:MainWindow
WIN_DEFAULT_HEIGHT	src/gui/MainWindow.java	/^	public static final int WIN_DEFAULT_HEIGHT = 700;$/;"	f	class:MainWindow
WIN_DEFAULT_WIDTH	src/gui/MainWindow.java	/^	public static final int WIN_DEFAULT_WIDTH = 900;$/;"	f	class:MainWindow
WIN_HEIGHT_S	src/gui/MainWindow.java	/^	public static final String WIN_HEIGHT_S = "height";$/;"	f	class:MainWindow
WIN_WIDTH_S	src/gui/MainWindow.java	/^	public static final String WIN_WIDTH_S = "width";$/;"	f	class:MainWindow
WKT	src/test/MapBasedMovementTest.java	/^	private final String WKT = "LINESTRING (1.0 1.0, 2.0 1.0, 3.0 1.0, 4.0 1.0) \\n" +$/;"	f	class:MapBasedMovementTest	file:
WKTMapReader	src/input/WKTMapReader.java	/^	public WKTMapReader(boolean bidi) {$/;"	m	class:WKTMapReader
WKTMapReader	src/input/WKTMapReader.java	/^public class WKTMapReader extends WKTReader {$/;"	c
WKTPointReaderTest	src/test/WKTPointReaderTest.java	/^public class WKTPointReaderTest extends TestCase {$/;"	c
WKTReader	src/input/WKTReader.java	/^public class WKTReader {$/;"	c
WKTReaderTest	src/test/WKTReaderTest.java	/^public class WKTReaderTest extends TestCase {$/;"	c
WORK_DAY_LENGTH_SETTING	src/movement/OfficeActivityMovement.java	/^	public static final String WORK_DAY_LENGTH_SETTING = "workDayLength";$/;"	f	class:OfficeActivityMovement
WORK_MODE	src/movement/WorkingDayMovement.java	/^	private static final int WORK_MODE = 3;$/;"	f	class:WorkingDayMovement	file:
WORLD_SIZE	src/movement/MovementModel.java	/^	public static final String WORLD_SIZE = "worldSize";$/;"	f	class:MovementModel
WaveRouter	src/routing/WaveRouter.java	/^	protected WaveRouter(WaveRouter r) {$/;"	m	class:WaveRouter
WaveRouter	src/routing/WaveRouter.java	/^	public WaveRouter(Settings s) {$/;"	m	class:WaveRouter
WaveRouter	src/routing/WaveRouter.java	/^public class WaveRouter extends ActiveRouter {$/;"	c
WorkingDayMovement	src/movement/WorkingDayMovement.java	/^	public WorkingDayMovement(Settings settings) {$/;"	m	class:WorkingDayMovement
WorkingDayMovement	src/movement/WorkingDayMovement.java	/^	public WorkingDayMovement(WorkingDayMovement proto) {$/;"	m	class:WorkingDayMovement
WorkingDayMovement	src/movement/WorkingDayMovement.java	/^public class WorkingDayMovement extends ExtendedMovementModel {$/;"	c
World	src/core/World.java	/^	public World(List<DTNHost> hosts, int sizeX, int sizeY,$/;"	m	class:World
World	src/core/World.java	/^public class World {$/;"	c
WorldTest	src/test/WorldTest.java	/^public class WorldTest extends TestCase {$/;"	c
X_COUNT_SETTING	src/report/NodeDensityReport.java	/^	public static final String X_COUNT_SETTING = "xCount";$/;"	f	class:NodeDensityReport
X_POS	src/gui/playfield/ScaleReferenceGraphic.java	/^	private final int X_POS = 20;$/;"	f	class:ScaleReferenceGraphic	file:
Y_COUNT_SETTING	src/report/NodeDensityReport.java	/^	public static final String Y_COUNT_SETTING = "yCount";$/;"	f	class:NodeDensityReport
Y_POS	src/gui/playfield/ScaleReferenceGraphic.java	/^	private final int Y_POS = 20;$/;"	f	class:ScaleReferenceGraphic	file:
ZOOM_MAX	src/gui/GUIControls.java	/^	public static final double ZOOM_MAX = 10;$/;"	f	class:GUIControls
ZOOM_MIN	src/gui/GUIControls.java	/^	public static final double ZOOM_MIN = 0.001;$/;"	f	class:GUIControls
aListeners	src/core/Application.java	/^	private List<ApplicationListener> aListeners = null;$/;"	f	class:Application	file:
abortTransfer	src/core/CBRConnection.java	/^	public void abortTransfer() {$/;"	m	class:CBRConnection
abortTransfer	src/core/Connection.java	/^	public void abortTransfer() {$/;"	m	class:Connection
abortedBytesRemaining	src/test/TestDTNHost.java	/^	public int abortedBytesRemaining;$/;"	f	class:TestDTNHost
abortedFrom	src/test/TestDTNHost.java	/^	public DTNHost abortedFrom;$/;"	f	class:TestDTNHost
abortedId	src/test/TestDTNHost.java	/^	public String abortedId;$/;"	f	class:TestDTNHost
about	src/gui/SimMenuBar.java	/^	private JMenuItem about;$/;"	f	class:SimMenuBar	file:
acceptReceiving	src/routing/util/MessageTransferAcceptPolicy.java	/^	public boolean acceptReceiving(DTNHost from, DTNHost to, Message m) {$/;"	m	class:MessageTransferAcceptPolicy
acceptSending	src/routing/util/MessageTransferAcceptPolicy.java	/^	public boolean acceptSending(DTNHost from, DTNHost to, Connection con,$/;"	m	class:MessageTransferAcceptPolicy
ackedMessageIds	src/routing/MaxPropRouter.java	/^	private Set<String> ackedMessageIds;$/;"	f	class:MaxPropRouter	file:
ackedMessageIds	src/routing/MaxPropRouterWithEstimation.java	/^	private Set<String> ackedMessageIds;$/;"	f	class:MaxPropRouterWithEstimation	file:
actionPerformed	src/gui/EventLogControlPanel.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:EventLogControlPanel
actionPerformed	src/gui/EventLogPanel.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:EventLogPanel
actionPerformed	src/gui/GUIControls.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:GUIControls
actionPerformed	src/gui/InfoPanel.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:InfoPanel
actionPerformed	src/gui/NodeChooser.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:NodeChooser
actionPerformed	src/gui/RoutingInfoWindow.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:RoutingInfoWindow
actionPerformed	src/gui/SimMenuBar.java	/^	public void actionPerformed(ActionEvent e) {$/;"	m	class:SimMenuBar
active	src/movement/ExternalPathMovement.java	/^	private List<ExternalPathMovementReader.ActiveTime> active;$/;"	f	class:ExternalPathMovement	file:
activeFile	src/movement/ExternalPathMovement.java	/^	private String activeFile;$/;"	f	class:ExternalPathMovement	file:
activePeriods	src/util/ActivenessHandler.java	/^	private int [] activePeriods;$/;"	f	class:ActivenessHandler	file:
activePeriodsOffset	src/util/ActivenessHandler.java	/^	private int activePeriodsOffset;$/;"	f	class:ActivenessHandler	file:
activeTimes	src/input/ExternalPathMovementReader.java	/^	private List<List<ActiveTime>> activeTimes = null;$/;"	f	class:ExternalPathMovementReader	file:
activeTimes	src/util/ActivenessHandler.java	/^	private Queue<TimeRange> activeTimes;$/;"	f	class:ActivenessHandler	file:
activenessJitterMax	src/core/NetworkInterface.java	/^	private int activenessJitterMax;$/;"	f	class:NetworkInterface	file:
activenessJitterValue	src/core/NetworkInterface.java	/^	private int activenessJitterValue;$/;"	f	class:NetworkInterface	file:
add	src/test/MessageChecker.java	/^	private void add(Message m, DTNHost from, DTNHost to, String type, Boolean$/;"	m	class:MessageChecker	file:
addApplication	src/routing/MessageRouter.java	/^	public void addApplication(Application app) {$/;"	m	class:MessageRouter
addApplicationListener	src/core/SimScenario.java	/^	public void addApplicationListener(ApplicationListener al) {$/;"	m	class:SimScenario
addBundle	src/core/DTN2Manager.java	/^	public static void addBundle(String id, Bundle bundle) {$/;"	m	class:DTN2Manager
addButton	src/gui/GUIControls.java	/^	private JButton addButton(String iconPath, String tooltip) {$/;"	m	class:GUIControls	file:
addCheckBox	src/gui/EventLogControlPanel.java	/^	private JCheckBox addCheckBox(boolean selected, boolean endOfRow) {$/;"	m	class:EventLogControlPanel	file:
addChildren	src/gui/RoutingInfoWindow.java	/^	private void addChildren(DefaultMutableTreeNode node, RoutingInfo info) {$/;"	m	class:RoutingInfoWindow	file:
addConditions	src/routing/util/MessageTransferAcceptPolicy.java	/^	private void addConditions(Settings s, String cPrefix, String vPrefix,$/;"	m	class:MessageTransferAcceptPolicy	file:
addConnection	src/report/ContactTimesReport.java	/^	protected void addConnection(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactTimesReport
addConnectionListener	src/core/SimScenario.java	/^	public void addConnectionListener(ConnectionListener cl){$/;"	m	class:SimScenario
addControl	src/gui/EventLogControlPanel.java	/^	public EventLogControl addControl(String name) {$/;"	m	class:EventLogControlPanel
addControl	src/gui/EventLogControlPanel.java	/^	public EventLogControl addControl(String name, boolean showOn,$/;"	m	class:EventLogControlPanel
addEntry	src/routing/schedule/ScheduleOracle.java	/^	public void addEntry(double start, int from, int to,double duration) {$/;"	m	class:ScheduleOracle
addEntry	src/routing/schedule/ScheduleOracle.java	/^	public void addEntry(double start, int from, int via, int to,$/;"	m	class:ScheduleOracle
addEveningActivityNode	src/movement/EveningActivityControlSystem.java	/^	public void addEveningActivityNode(EveningActivityMovement eveningMovement) {$/;"	m	class:EveningActivityControlSystem
addEvent	src/gui/EventLogPanel.java	/^	private void addEvent(String description, DTNHost host1,$/;"	m	class:EventLogPanel	file:
addFilter	src/gui/NodeChooser.java	/^	public void addFilter(NodeFilter f) {$/;"	m	class:NodeChooser
addHeading	src/gui/EventLogControlPanel.java	/^	public void addHeading(String name) {$/;"	m	class:EventLogControlPanel
addInfoButton	src/gui/EventLogPanel.java	/^	private void addInfoButton(JPanel panel, Object o, String clientProp) {$/;"	m	class:EventLogPanel	file:
addInterface	src/interfaces/ConnectivityGrid.java	/^		public void addInterface(NetworkInterface ni) {$/;"	m	class:ConnectivityGrid.GridCell
addInterface	src/interfaces/ConnectivityGrid.java	/^	public void addInterface(NetworkInterface ni) {$/;"	m	class:ConnectivityGrid
addInterface	src/interfaces/ConnectivityOptimizer.java	/^	abstract public void addInterface(NetworkInterface ni);$/;"	m	class:ConnectivityOptimizer
addInterfaces	src/interfaces/ConnectivityGrid.java	/^	public void addInterfaces(Collection<NetworkInterface> interfaces) {$/;"	m	class:ConnectivityGrid
addInterfaces	src/interfaces/ConnectivityOptimizer.java	/^	abstract public void addInterfaces(Collection<NetworkInterface> interfaces);$/;"	m	class:ConnectivityOptimizer
addLabel	src/gui/EventLogControlPanel.java	/^	private JLabel addLabel(String txt) {$/;"	m	class:EventLogControlPanel	file:
addLocation	src/movement/ExternalMovement.java	/^	private void addLocation(Coord loc, double time) {$/;"	m	class:ExternalMovement	file:
addMCBCs	src/routing/util/MessageTransferAcceptPolicy.java	/^	private void addMCBCs(Settings s) {$/;"	m	class:MessageTransferAcceptPolicy	file:
addMessageListener	src/core/SimScenario.java	/^	public void addMessageListener(MessageListener ml){$/;"	m	class:SimScenario
addMessageTransfer	src/gui/playfield/PlayField.java	/^	public void addMessageTransfer(DTNHost from, DTNHost to) {$/;"	m	class:PlayField
addMoreInfo	src/routing/util/RoutingInfo.java	/^	public void addMoreInfo(RoutingInfo info) {$/;"	m	class:RoutingInfo
addMovementListener	src/core/SimScenario.java	/^	public void addMovementListener(MovementListener ml){$/;"	m	class:SimScenario
addNeighbor	src/movement/map/MapNode.java	/^	public void addNeighbor(MapNode node) {$/;"	m	class:MapNode
addNode	src/movement/EveningTrip.java	/^	public boolean addNode(EveningActivityMovement eveningActivityNode) {$/;"	m	class:EveningTrip
addNodeMessageFilter	src/gui/SimMenuBar.java	/^	private JMenuItem addNodeMessageFilter;$/;"	f	class:SimMenuBar	file:
addNodeOnPath	src/core/Message.java	/^	public void addNodeOnPath(DTNHost node) {$/;"	m	class:Message
addPath	src/gui/playfield/PlayField.java	/^	public void addPath(Path path) {$/;"	m	class:PlayField
addPaths	src/input/WKTMapReader.java	/^	public void addPaths(File file, int type) throws IOException {$/;"	m	class:WKTMapReader
addPaths	src/input/WKTMapReader.java	/^	public void addPaths(Reader input, int nodeType) throws IOException {$/;"	m	class:WKTMapReader
addProperty	src/core/Message.java	/^	public void addProperty(String key, Object value) throws SimError {$/;"	m	class:Message
addProperty	src/core/ModuleCommunicationBus.java	/^	public void addProperty(String key, Object value) throws SimError {$/;"	m	class:ModuleCommunicationBus
addReport	src/ui/DTNSimUI.java	/^	protected void addReport(Report r) {$/;"	m	class:DTNSimUI
addSettings	src/core/Settings.java	/^	public static void addSettings(String propFile) throws SettingsError {$/;"	m	class:Settings
addToList	src/movement/map/MapNode.java	/^	private void addToList(MapNode node) {$/;"	m	class:MapNode	file:
addToMessages	src/routing/MessageRouter.java	/^	protected void addToMessages(Message m, boolean newMessage) {$/;"	m	class:MessageRouter
addToSendingConnections	src/routing/ActiveRouter.java	/^	protected void addToSendingConnections(Connection con) {$/;"	m	class:ActiveRouter
addType	src/movement/map/MapNode.java	/^	public void addType(int type) {$/;"	m	class:MapNode
addUpdate	src/input/ScheduledUpdatesQueue.java	/^	public void addUpdate(double simTime) {$/;"	m	class:ScheduledUpdatesQueue
addUpdateListener	src/core/SimScenario.java	/^	public void addUpdateListener(UpdateListener ul) {$/;"	m	class:SimScenario
addWarmupID	src/report/Report.java	/^	protected void addWarmupID(String id) {$/;"	m	class:Report
addWaypoint	src/movement/Path.java	/^	public void addWaypoint(Coord wp) {$/;"	m	class:Path
addWaypoint	src/movement/Path.java	/^	public void addWaypoint(Coord wp, double speed) {$/;"	m	class:Path
address	src/core/DTNHost.java	/^	private int address;$/;"	f	class:DTNHost	file:
address	src/core/NetworkInterface.java	/^	private int address; \/\/ network interface address$/;"	f	class:NetworkInterface	file:
advance	src/core/SimClock.java	/^	public void advance(double time) {$/;"	m	class:SimClock
ageDeliveryPreds	src/routing/ProphetRouter.java	/^	private void ageDeliveryPreds() {$/;"	m	class:ProphetRouter	file:
ageDeliveryPreds	src/routing/ProphetRouterWithEstimation.java	/^	private void ageDeliveryPreds() {$/;"	m	class:ProphetRouterWithEstimation	file:
ageDeliveryPreds	src/routing/ProphetV2Router.java	/^	private void ageDeliveryPreds() {$/;"	m	class:ProphetV2Router	file:
ah	src/core/NetworkInterface.java	/^	private ActivenessHandler ah;$/;"	f	class:NetworkInterface	file:
ah	src/movement/MovementModel.java	/^	private ActivenessHandler ah;$/;"	f	class:MovementModel	file:
ah	src/test/ActivenessHandlerTest.java	/^	private ActivenessHandler ah;$/;"	f	class:ActivenessHandlerTest	file:
allEventsRead	src/input/ExternalEventsQueue.java	/^	private boolean allEventsRead = false;$/;"	f	class:ExternalEventsQueue	file:
allHomes	src/movement/HomeActivityMovement.java	/^	private List<Coord> allHomes;$/;"	f	class:HomeActivityMovement	file:
allHosts	src/report/AdjacencyGraphvizReport.java	/^	private Collection<DTNHost> allHosts;$/;"	f	class:AdjacencyGraphvizReport	file:
allHosts	src/test/TestUtils.java	/^	private List<DTNHost> allHosts;$/;"	f	class:TestUtils	file:
allMembersPresent	src/movement/EveningTrip.java	/^	public boolean allMembersPresent() {$/;"	m	class:EveningTrip
allNodes	src/gui/NodeChooser.java	/^	private List<DTNHost> allNodes;$/;"	f	class:NodeChooser	file:
allOffices	src/movement/OfficeActivityMovement.java	/^	private List<Coord> allOffices;$/;"	f	class:OfficeActivityMovement	file:
allProbs	src/routing/MaxPropRouter.java	/^	private Map<Integer, MeetingProbabilitySet> allProbs;$/;"	f	class:MaxPropRouter	file:
allProbs	src/routing/MaxPropRouterWithEstimation.java	/^	private Map<Integer, MeetingProbabilitySet> allProbs;$/;"	f	class:MaxPropRouterWithEstimation	file:
allRouters	src/routing/EpidemicOracleRouter.java	/^	private static List<EpidemicOracleRouter> allRouters;$/;"	f	class:EpidemicOracleRouter	file:
allRoutes	src/movement/MapRouteMovement.java	/^	private List<MapRoute> allRoutes = null;$/;"	f	class:MapRouteMovement	file:
alpha	src/routing/MaxPropRouter.java	/^	private double alpha;$/;"	f	class:MaxPropRouter	file:
alpha	src/routing/MaxPropRouterWithEstimation.java	/^	private double alpha;$/;"	f	class:MaxPropRouterWithEstimation	file:
alpha	src/routing/maxprop/MeetingProbabilitySet.java	/^	private double alpha;$/;"	f	class:MeetingProbabilitySet	file:
appID	src/core/Application.java	/^	public String	appID	= null;$/;"	f	class:Application
appID	src/core/Message.java	/^	private String	appID;$/;"	f	class:Message	file:
appListeners	src/core/SimScenario.java	/^	private List<ApplicationListener> appListeners;$/;"	f	class:SimScenario	file:
applications	src/applications/PingApplication.java	/^package applications;$/;"	p
applications	src/routing/MessageRouter.java	/^	private HashMap<String, Collection<Application>> applications = null;$/;"	f	class:MessageRouter	file:
areDisconnected	src/report/ContactsDuringAnICTReport.java	/^	private boolean[][] areDisconnected;$/;"	f	class:ContactsDuringAnICTReport	file:
assertNrofUpdates	src/test/WorldTest.java	/^	private void assertNrofUpdates(int nrof) {$/;"	m	class:WorldTest	file:
assertValidRange	src/core/Settings.java	/^	public void assertValidRange(int range[], String sname)$/;"	m	class:Settings
auctionPeriod	src/core/DTNHost.java	/^    public static double auctionPeriod = 10.0;$/;"	f	class:DTNHost
auctionPeriod	src/core/SimScenario.java	/^    double auctionPeriod;$/;"	f	class:SimScenario
autoClear	src/gui/playfield/PlayField.java	/^	private void autoClear() {$/;"	m	class:PlayField	file:
autoClearOverlay	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem autoClearOverlay;$/;"	f	class:SimMenuBar	file:
autoClearOverlay	src/gui/playfield/PlayField.java	/^	private boolean autoClearOverlay;	\/\/ automatically clear overlay graphics$/;"	f	class:PlayField	file:
autoRefresh	src/gui/RoutingInfoWindow.java	/^	private JCheckBox autoRefresh;$/;"	f	class:RoutingInfoWindow	file:
avgSamples	src/routing/MaxPropRouter.java	/^	private int[] avgSamples;$/;"	f	class:MaxPropRouter	file:
avgSamples	src/routing/MaxPropRouterWithEstimation.java	/^	private int[] avgSamples;$/;"	f	class:MaxPropRouterWithEstimation	file:
avgTransferredBytes	src/routing/MaxPropRouter.java	/^	private int avgTransferredBytes = 0;$/;"	f	class:MaxPropRouter	file:
avgTransferredBytes	src/routing/MaxPropRouterWithEstimation.java	/^	private int avgTransferredBytes = 0;$/;"	f	class:MaxPropRouterWithEstimation	file:
away	src/test/TotalContactTimeReportTest.java	/^	private Coord away = new Coord(1000,1000);$/;"	f	class:TotalContactTimeReportTest	file:
b	src/test/ModuleCommunicationBusTest.java	/^	private ModuleCommunicationBus b;$/;"	f	class:ModuleCommunicationBusTest	file:
backAllowed	src/movement/MapBasedMovement.java	/^	protected boolean backAllowed;$/;"	f	class:MapBasedMovement
basicNodesTests	src/test/WKTReaderTest.java	/^	private void basicNodesTests(WKTMapReader reader) {$/;"	m	class:WKTReaderTest	file:
beta	src/routing/ProphetRouter.java	/^	private double beta;$/;"	f	class:ProphetRouter	file:
beta	src/routing/ProphetRouterWithEstimation.java	/^	private double beta;$/;"	f	class:ProphetRouterWithEstimation	file:
beta	src/routing/ProphetV2Router.java	/^	private double beta;$/;"	f	class:ProphetV2Router	file:
bgColor	src/gui/playfield/PlayField.java	/^	private Color bgColor = Color.WHITE;$/;"	f	class:PlayField	file:
bidirectionalPaths	src/input/WKTMapReader.java	/^	private boolean bidirectionalPaths = true;$/;"	f	class:WKTMapReader	file:
blacklistedMessages	src/routing/MessageRouter.java	/^	private HashMap<String, Object> blacklistedMessages;$/;"	f	class:MessageRouter	file:
bucketCount	src/report/JumpSizeDistributionReport.java	/^	private final int bucketCount;$/;"	f	class:JumpSizeDistributionReport	file:
bufferSize	src/routing/MessageRouter.java	/^	private long bufferSize;$/;"	f	class:MessageRouter	file:
bundle_list	src/input/DTN2Events.java	/^	private Map<String, Bundle>			bundle_list;$/;"	f	class:DTN2Events	file:
bundles	src/core/DTN2Manager.java	/^	private static Map<String, Bundle>		bundles = null;$/;"	f	class:DTN2Manager	file:
busHasStopped	src/movement/BusControlSystem.java	/^	public void busHasStopped(int busID, Coord busStop, Path nextPath) {$/;"	m	class:BusControlSystem
busStops	src/movement/BusControlSystem.java	/^	private List<Coord> busStops;$/;"	f	class:BusControlSystem	file:
busTravellerMM	src/movement/WorkingDayMovement.java	/^	private BusTravellerMovement busTravellerMM;$/;"	f	class:WorkingDayMovement	file:
busses	src/movement/BusControlSystem.java	/^	private HashMap<Integer, BusMovement> busses;$/;"	f	class:BusControlSystem	file:
bytesTransferred	src/core/Connection.java	/^	protected int bytesTransferred;$/;"	f	class:Connection
c	src/gui/EventLogControlPanel.java	/^	private GridBagConstraints c;$/;"	f	class:EventLogControlPanel	file:
c	src/test/ConnectionTest.java	/^	private CBRConnection c[];$/;"	f	class:ConnectionTest	file:
c0	src/test/AbstractRouterTest.java	/^	protected Coord c0 = new Coord(0,0);$/;"	f	class:AbstractRouterTest
c0	src/test/ExternalMovementTest.java	/^	private Coord c0 = new Coord(0,0);$/;"	f	class:ExternalMovementTest	file:
c1	src/test/MapBasedMovementTest.java	/^	private Coord c1 = new Coord(1,1);$/;"	f	class:MapBasedMovementTest	file:
c1	src/test/MapNodeTest.java	/^	private Coord c1,c2,c3,c4;$/;"	f	class:MapNodeTest	file:
c1	src/test/TotalContactTimeReportTest.java	/^	private Coord c1 = new Coord(0,0);$/;"	f	class:TotalContactTimeReportTest	file:
c2	src/test/MapBasedMovementTest.java	/^	private Coord c2 = new Coord(2,1);$/;"	f	class:MapBasedMovementTest	file:
c2	src/test/MapNodeTest.java	/^	private Coord c1,c2,c3,c4;$/;"	f	class:MapNodeTest	file:
c2	src/test/TotalContactTimeReportTest.java	/^	private Coord c2 = new Coord(1,0);$/;"	f	class:TotalContactTimeReportTest	file:
c3	src/test/MapNodeTest.java	/^	private Coord c1,c2,c3,c4;$/;"	f	class:MapNodeTest	file:
c3	src/test/TotalContactTimeReportTest.java	/^	private Coord c3 = new Coord(2,0);$/;"	f	class:TotalContactTimeReportTest	file:
c4	src/test/MapNodeTest.java	/^	private Coord c1,c2,c3,c4;$/;"	f	class:MapNodeTest	file:
c6	src/test/MapBasedMovementTest.java	/^	private Coord c6 = new Coord(3,1);$/;"	f	class:MapBasedMovementTest	file:
cListeners	src/core/NetworkInterface.java	/^	private List<ConnectionListener> cListeners = null; \/\/ list of listeners$/;"	f	class:NetworkInterface	file:
c_host	src/input/DTN2Events.java	/^		private String					c_host;$/;"	f	class:DTN2Events.ParserHandler	file:
c_port	src/input/DTN2Events.java	/^		private int						c_port;$/;"	f	class:DTN2Events.ParserHandler	file:
cachedMap	src/movement/MapBasedMovement.java	/^	private static SimMap cachedMap = null;$/;"	f	class:MapBasedMovement	file:
cachedMapFiles	src/movement/MapBasedMovement.java	/^	private static List<String> cachedMapFiles = null;$/;"	f	class:MapBasedMovement	file:
calcThreshold	src/routing/MaxPropRouter.java	/^	public int calcThreshold() {$/;"	m	class:MaxPropRouter
calcThreshold	src/routing/MaxPropRouterWithEstimation.java	/^	public int calcThreshold() {$/;"	m	class:MaxPropRouterWithEstimation
calculateEndTarget	src/movement/LinearMovement.java	/^	private Coord calculateEndTarget(LinearMovement proto, Coord initLoc) {$/;"	m	class:LinearMovement	file:
calculateInitLocation	src/movement/LinearFormation.java	/^	private Coord calculateInitLocation(LinearFormation proto) {$/;"	m	class:LinearFormation	file:
calculateLocation	src/movement/LinearMovement.java	/^	private Coord calculateLocation(LinearMovement proto, boolean isEven) {$/;"	m	class:LinearMovement	file:
canStartTransfer	src/routing/ActiveRouter.java	/^	protected boolean canStartTransfer() {$/;"	m	class:ActiveRouter
cancelSim	src/core/World.java	/^	public void cancelSim() {$/;"	m	class:World
carMM	src/movement/WorkingDayMovement.java	/^	private CarMovement carMM;$/;"	f	class:WorkingDayMovement	file:
cbtd	src/movement/BusTravellerMovement.java	/^	private ContinueBusTripDecider cbtd;$/;"	f	class:BusTravellerMovement	file:
cellFromCoord	src/interfaces/ConnectivityGrid.java	/^	private GridCell cellFromCoord(Coord c) {$/;"	m	class:ConnectivityGrid	file:
cellSize	src/interfaces/ConnectivityGrid.java	/^	private int cellSize;$/;"	f	class:ConnectivityGrid	file:
cellSizeMultiplier	src/interfaces/ConnectivityGrid.java	/^	private static int cellSizeMultiplier;$/;"	f	class:ConnectivityGrid	file:
cells	src/interfaces/ConnectivityGrid.java	/^	private GridCell[][] cells;$/;"	f	class:ConnectivityGrid	file:
centerViewAt	src/gui/DTNSimGUI.java	/^    public void centerViewAt(Coord loc) {$/;"	m	class:DTNSimGUI
changeZoom	src/gui/GUIControls.java	/^	public void changeZoom(int delta) {$/;"	m	class:GUIControls
changedConnection	src/routing/ActiveRouter.java	/^	public void changedConnection(Connection con) {$/;"	m	class:ActiveRouter
changedConnection	src/routing/EpidemicOracleRouter.java	/^	public void changedConnection(Connection con) {$/;"	m	class:EpidemicOracleRouter
changedConnection	src/routing/MaxPropRouter.java	/^	public void changedConnection(Connection con) {$/;"	m	class:MaxPropRouter
changedConnection	src/routing/MaxPropRouterWithEstimation.java	/^	public void changedConnection(Connection con) {$/;"	m	class:MaxPropRouterWithEstimation
changedConnection	src/routing/MessageRouter.java	/^	public abstract void changedConnection(Connection con);$/;"	m	class:MessageRouter
changedConnection	src/routing/PassiveRouter.java	/^	public void changedConnection(Connection con) {$/;"	m	class:PassiveRouter
changedConnection	src/routing/ProphetRouter.java	/^	public void changedConnection(Connection con) {$/;"	m	class:ProphetRouter
changedConnection	src/routing/ProphetRouterWithEstimation.java	/^	public void changedConnection(Connection con) {$/;"	m	class:ProphetRouterWithEstimation
changedConnection	src/routing/ProphetV2Router.java	/^	public void changedConnection(Connection con) {$/;"	m	class:ProphetV2Router
checkCache	src/movement/MapBasedMovement.java	/^	private SimMap checkCache(Settings settings) {$/;"	m	class:MapBasedMovement	file:
checkCoordValidity	src/movement/MapBasedMovement.java	/^	private void checkCoordValidity(List<MapNode> nodes) {$/;"	m	class:MapBasedMovement	file:
checkCreates	src/test/AbstractRouterTest.java	/^	protected void checkCreates(int nrof) {$/;"	m	class:AbstractRouterTest
checkDelivered	src/test/AbstractRouterTest.java	/^	protected void checkDelivered(DTNHost from, DTNHost to, String msgId,$/;"	m	class:AbstractRouterTest
checkDirExistence	src/report/Report.java	/^	private void checkDirExistence(String outFileName) {$/;"	m	class:Report	file:
checkEeq	src/test/ExternalEventsQueueTest.java	/^	private void checkEeq(ExternalEventsQueue eeq, int preloadVal) {$/;"	m	class:ExternalEventsQueueTest	file:
checkHopCountPolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private boolean checkHopCountPolicy(Message m, ArithmeticCondition ac) {$/;"	m	class:MessageTransferAcceptPolicy	file:
checkMapConnectedness	src/movement/MapBasedMovement.java	/^	private void checkMapConnectedness(List<MapNode> nodes) {$/;"	m	class:MapBasedMovement	file:
checkMcbConditions	src/routing/util/MessageTransferAcceptPolicy.java	/^	private boolean checkMcbConditions(ModuleCommunicationBus mcb,$/;"	m	class:MessageTransferAcceptPolicy	file:
checkMinAndMaxSetting	src/movement/MovementModel.java	/^	private static void checkMinAndMaxSetting(String name,$/;"	m	class:MovementModel	file:
checkPath	src/test/DijkstraPathFinderTest.java	/^	private void checkPath(List<MapNode> path, MapNode ... nodes) {$/;"	m	class:DijkstraPathFinderTest	file:
checkPathNeed	src/movement/ExternalMovement.java	/^	private static void checkPathNeed() {$/;"	m	class:ExternalMovement	file:
checkRangeValidity	src/util/Range.java	/^	private void checkRangeValidity(double min, double max) {$/;"	m	class:Range	file:
checkReceiving	src/routing/ActiveRouter.java	/^	protected int checkReceiving(Message m, DTNHost from) {$/;"	m	class:ActiveRouter
checkReceiving	src/routing/EpidemicOracleRouter.java	/^	protected int checkReceiving(Message m) {$/;"	m	class:EpidemicOracleRouter
checkReceiving	src/routing/FirstContactRouter.java	/^	protected int checkReceiving(Message m, DTNHost from) {$/;"	m	class:FirstContactRouter
checkReceiving	src/routing/LifeRouter.java	/^	protected int checkReceiving(Message m, DTNHost from) {$/;"	m	class:LifeRouter
checkReceiving	src/routing/WaveRouter.java	/^	protected int checkReceiving(Message m, DTNHost from) {$/;"	m	class:WaveRouter
checkSimplePolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private boolean checkSimplePolicy(DTNHost host, Range [] policy,$/;"	m	class:MessageTransferAcceptPolicy	file:
checkTransferStart	src/test/AbstractRouterTest.java	/^	protected void checkTransferStart(DTNHost from, DTNHost to, String msgId) {$/;"	m	class:AbstractRouterTest
checkTuples	src/test/ExternalMovementReaderTest.java	/^	private void checkTuples(List<Tuple<String, Coord>> list, String[] ids,$/;"	m	class:ExternalMovementReaderTest	file:
checkValues	src/test/ContactTimesReportTest.java	/^	private void checkValues(String[] ctValues, String[] ictValues)$/;"	m	class:ContactTimesReportTest	file:
checkValues	src/test/TotalContactTimeReportTest.java	/^	private void checkValues(String[] values) throws Exception {$/;"	m	class:TotalContactTimeReportTest	file:
chooser	src/gui/SimMenuBar.java	/^	private NodeChooser chooser;$/;"	f	class:SimMenuBar	file:
chooserPanel	src/gui/NodeChooser.java	/^	private JPanel chooserPanel;$/;"	f	class:NodeChooser	file:
clearFilters	src/gui/NodeChooser.java	/^	public void clearFilters() {$/;"	m	class:NodeChooser
clearMsgOnFly	src/core/Connection.java	/^	protected void clearMsgOnFly() {$/;"	m	class:Connection
clearNodeFilters	src/gui/SimMenuBar.java	/^	private JMenuItem clearNodeFilters;$/;"	f	class:SimMenuBar	file:
clearOverlay	src/gui/SimMenuBar.java	/^	private JMenuItem clearOverlay;$/;"	f	class:SimMenuBar	file:
clearOverlays	src/gui/playfield/PlayField.java	/^	public void clearOverlays() {$/;"	m	class:PlayField
clock	src/core/SimClock.java	/^	private static SimClock clock = null;$/;"	f	class:SimClock	file:
clock	src/test/AbstractRouterTest.java	/^	protected SimClock clock;$/;"	f	class:AbstractRouterTest
clock	src/test/ActivenessHandlerTest.java	/^	private SimClock clock;$/;"	f	class:ActivenessHandlerTest	file:
clock	src/test/ConnectionTest.java	/^	private SimClock clock = SimClock.getInstance();$/;"	f	class:ConnectionTest	file:
clock	src/test/ContactTimesReportTest.java	/^	private SimClock clock;$/;"	f	class:ContactTimesReportTest	file:
clock	src/test/DistanceDelayReportTest.java	/^	private SimClock clock;$/;"	f	class:DistanceDelayReportTest	file:
clock	src/test/ExternalMovementTest.java	/^	private SimClock clock;$/;"	f	class:ExternalMovementTest	file:
clock	src/test/TotalContactTimeReportTest.java	/^	private SimClock clock;$/;"	f	class:TotalContactTimeReportTest	file:
clockTime	src/core/SimClock.java	/^	private static double clockTime = 0.0;$/;"	f	class:SimClock	file:
clone	src/core/Coord.java	/^	public Coord clone() {$/;"	m	class:Coord
close	src/input/BinaryEventsReader.java	/^	public void close() {$/;"	m	class:BinaryEventsReader
close	src/input/ExternalEventsReader.java	/^	public void close();$/;"	m	interface:ExternalEventsReader
close	src/input/StandardEventsReader.java	/^	public void close() {$/;"	m	class:StandardEventsReader
closeSim	src/gui/DTNSimGUI.java	/^	public void closeSim() {$/;"	m	class:DTNSimGUI
cols	src/interfaces/ConnectivityGrid.java	/^	private int cols;$/;"	f	class:ConnectivityGrid	file:
cols	src/movement/GridLocation.java	/^	private int cols;$/;"	f	class:GridLocation	file:
comBus	src/core/DTNHost.java	/^	private ModuleCommunicationBus comBus;$/;"	f	class:DTNHost	file:
comBus	src/movement/MovementModel.java	/^	protected ModuleCommunicationBus comBus;$/;"	f	class:MovementModel
comBus	src/routing/util/EnergyModel.java	/^	private ModuleCommunicationBus comBus;$/;"	f	class:EnergyModel	file:
comBus	src/test/TestUtils.java	/^	private ModuleCommunicationBus comBus;$/;"	f	class:TestUtils	file:
comingBack	src/movement/map/MapRoute.java	/^	private boolean comingBack;$/;"	f	class:MapRoute	file:
compare	src/movement/map/DijkstraPathFinder.java	/^		public int compare(MapNode node1, MapNode node2) {$/;"	m	class:DijkstraPathFinder.DistanceComparator
compare	src/routing/MaxPropRouter.java	/^		public int compare(Message msg1, Message msg2) {$/;"	m	class:MaxPropRouter.MaxPropComparator
compare	src/routing/MaxPropRouter.java	/^		public int compare(Tuple<Message, Connection> tuple1,$/;"	m	class:MaxPropRouter.MaxPropTupleComparator
compare	src/routing/MaxPropRouterWithEstimation.java	/^		public int compare(Message msg1, Message msg2) {$/;"	m	class:MaxPropRouterWithEstimation.MaxPropComparator
compare	src/routing/MaxPropRouterWithEstimation.java	/^		public int compare(Tuple<Message, Connection> tuple1,$/;"	m	class:MaxPropRouterWithEstimation.MaxPropTupleComparator
compare	src/routing/ProphetRouter.java	/^		public int compare(Tuple<Message, Connection> tuple1,$/;"	m	class:ProphetRouter.TupleComparator
compare	src/routing/ProphetRouterWithEstimation.java	/^		public int compare(Tuple<Message, Connection> tuple1,$/;"	m	class:ProphetRouterWithEstimation.TupleComparator
compare	src/routing/ProphetV2Router.java	/^		public int compare(Tuple<Message, Connection> tuple1,$/;"	m	class:ProphetV2Router.TupleComparator
compare	src/routing/maxprop/MaxPropDijkstra.java	/^		public int compare(Integer node1, Integer node2) {$/;"	m	class:MaxPropDijkstra.DistanceComparator
compare	src/routing/schedule/ScheduleDijkstra.java	/^		public int compare(Integer node1, Integer node2) {$/;"	m	class:ScheduleDijkstra.DurationComparator
compareByQueueMode	src/routing/MessageRouter.java	/^	protected int compareByQueueMode(Message m1, Message m2) {$/;"	m	class:MessageRouter
comparePaths	src/test/ScheduleDijkstraTest.java	/^	private void comparePaths(int realPath[], List<ScheduleEntry> path) {$/;"	m	class:ScheduleDijkstraTest	file:
compareTo	src/core/Coord.java	/^	public int compareTo(Coord other) {$/;"	m	class:Coord
compareTo	src/core/DTNHost.java	/^	public int compareTo(DTNHost h) {$/;"	m	class:DTNHost
compareTo	src/core/Message.java	/^	public int compareTo(Message m) {$/;"	m	class:Message
compareTo	src/input/ExternalEvent.java	/^	public int compareTo(ExternalEvent other) {$/;"	m	class:ExternalEvent
compareTo	src/movement/map/MapNode.java	/^	public int compareTo(MapNode o) {$/;"	m	class:MapNode
compareTo	src/report/AdjacencyGraphvizReport.java	/^		public int compareTo(Object o) {$/;"	m	class:AdjacencyGraphvizReport.ConnectionInfo
completionTime	src/core/VM.java	/^    private double completionTime;$/;"	f	class:VM	file:
con	src/test/ConnectionTest.java	/^	private void con(DTNHost from, DTNHost to) {$/;"	m	class:ConnectionTest	file:
conColor	src/gui/playfield/NodeGraphic.java	/^	private static Color conColor = Color.BLACK;$/;"	f	class:NodeGraphic	file:
conCount	src/test/ConnectionTest.java	/^	private int conCount;$/;"	f	class:ConnectionTest	file:
conDownCheck	src/gui/EventLogPanel.java	/^	private EventLogControl conDownCheck;$/;"	f	class:EventLogPanel	file:
conListeners	src/test/TestUtils.java	/^	private List<ConnectionListener> conListeners;$/;"	f	class:TestUtils	file:
conUpCheck	src/gui/EventLogPanel.java	/^	private EventLogControl conUpCheck;$/;"	f	class:EventLogPanel	file:
connect	src/core/DTNHost.java	/^	public void connect(DTNHost h) {$/;"	m	class:DTNHost
connect	src/core/NetworkInterface.java	/^	protected void connect(Connection con, NetworkInterface anotherInterface) {$/;"	m	class:NetworkInterface
connect	src/core/NetworkInterface.java	/^	public abstract void connect(NetworkInterface anotherInterface);$/;"	m	class:NetworkInterface
connect	src/interfaces/DistanceCapacityInterface.java	/^	public void connect(NetworkInterface anotherInterface) {$/;"	m	class:DistanceCapacityInterface
connect	src/interfaces/InterferenceLimitedInterface.java	/^	public void connect(NetworkInterface anotherInterface) {$/;"	m	class:InterferenceLimitedInterface
connect	src/interfaces/SimpleBroadcastInterface.java	/^	public void connect(NetworkInterface anotherInterface) {$/;"	m	class:SimpleBroadcastInterface
connect	src/test/TestDTNHost.java	/^	public void connect(DTNHost anotherHost) {$/;"	m	class:TestDTNHost
connect	src/test/TestInterface.java	/^	public void connect(NetworkInterface anotherInterface) {$/;"	m	class:TestInterface
connected	src/input/DTN2Events.java	/^		public void connected() {$/;"	m	class:DTN2Events.ParserHandler
connectionDown	src/core/DTNHost.java	/^	public void connectionDown(Connection con) {$/;"	m	class:DTNHost
connectionEnd	src/report/ContactTimesReport.java	/^		public void connectionEnd() {$/;"	m	class:ContactTimesReport.ConnectionInfo
connectionListeners	src/core/SimScenario.java	/^	private List<ConnectionListener> connectionListeners;$/;"	f	class:SimScenario	file:
connectionString	src/report/ConnectivityDtnsim2Report.java	/^	private String connectionString(DTNHost h1, DTNHost h2) {$/;"	m	class:ConnectivityDtnsim2Report	file:
connectionString	src/report/ConnectivityONEReport.java	/^	private String connectionString(DTNHost h1, DTNHost h2) {$/;"	m	class:ConnectivityONEReport	file:
connectionUp	src/core/DTNHost.java	/^	public void connectionUp(Connection con) {$/;"	m	class:DTNHost
connections	src/core/NetworkInterface.java	/^	protected List<Connection> connections; \/\/ connected hosts$/;"	f	class:NetworkInterface
connections	src/report/ContactTimesReport.java	/^	protected HashMap<ConnectionInfo, ConnectionInfo> connections;$/;"	f	class:ContactTimesReport
cons	src/report/AdjacencyGraphvizReport.java	/^	private HashMap<String, ConnectionInfo> cons;$/;"	f	class:AdjacencyGraphvizReport	file:
console	src/input/DTN2Events.java	/^		private DTNConsoleConnection	console;$/;"	f	class:DTN2Events.ParserHandler	file:
contactCount	src/report/ContactsDuringAnICTReport.java	/^	private int[][] contactCount;$/;"	f	class:ContactsDuringAnICTReport	file:
contactCounts	src/report/ContactsPerHourReport.java	/^	private LinkedList<Integer> contactCounts;$/;"	f	class:ContactsPerHourReport	file:
contactsDuringIC	src/report/ContactsDuringAnICTReport.java	/^	private LinkedList<Integer> contactsDuringIC;$/;"	f	class:ContactsDuringAnICTReport	file:
contains	src/core/Settings.java	/^	public boolean contains(String name) {$/;"	m	class:Settings
containsProperty	src/core/ModuleCommunicationBus.java	/^	public boolean containsProperty(String key) {$/;"	m	class:ModuleCommunicationBus
continueTrip	src/movement/BusTravellerMovement.java	/^		public boolean continueTrip() {$/;"	m	class:BusTravellerMovement.ContinueBusTripDecider
controlSystem	src/movement/BusMovement.java	/^	private BusControlSystem controlSystem;$/;"	f	class:BusMovement	file:
controlSystem	src/movement/BusTravellerMovement.java	/^	private BusControlSystem controlSystem;$/;"	f	class:BusTravellerMovement	file:
controlSystems	src/movement/EveningActivityControlSystem.java	/^		controlSystems;$/;"	f	class:EveningActivityControlSystem	file:
controls	src/gui/EventLogPanel.java	/^	private EventLogControlPanel controls;$/;"	f	class:EventLogPanel	file:
convertToInt	src/core/Settings.java	/^	private int convertToInt(double doubleValue, String name) {$/;"	m	class:Settings	file:
convertToInteger	src/input/StandardEventsReader.java	/^	private int convertToInteger(String str){$/;"	m	class:StandardEventsReader	file:
convertToInts	src/core/Settings.java	/^	private int[] convertToInts(double [] doubleValues, String name) {$/;"	m	class:Settings	file:
coords	src/gui/playfield/PathGraphic.java	/^	private List<Coord> coords;$/;"	f	class:PathGraphic	file:
coords	src/movement/Path.java	/^	private List<Coord> coords;$/;"	f	class:Path	file:
coords	src/test/ExternalMovementReaderTest.java	/^	private static final Coord [][] coords =$/;"	f	class:ExternalMovementReaderTest	file:
copyFrom	src/core/Message.java	/^	protected void copyFrom(Message m) {$/;"	m	class:Message
core	src/core/Application.java	/^package core;$/;"	p
core	src/core/ApplicationListener.java	/^package core;$/;"	p
core	src/core/ArithmeticCondition.java	/^package core;$/;"	p
core	src/core/CBRConnection.java	/^package core;$/;"	p
core	src/core/Connection.java	/^package core;$/;"	p
core	src/core/ConnectionListener.java	/^package core;$/;"	p
core	src/core/Constants.java	/^package core;$/;"	p
core	src/core/Coord.java	/^package core;$/;"	p
core	src/core/DTN2Manager.java	/^package core;$/;"	p
core	src/core/DTNHost.java	/^package core;$/;"	p
core	src/core/DTNSim.java	/^package core;$/;"	p
core	src/core/Debug.java	/^package core;$/;"	p
core	src/core/Message.java	/^package core;$/;"	p
core	src/core/MessageListener.java	/^package core;$/;"	p
core	src/core/ModuleCommunicationBus.java	/^package core;$/;"	p
core	src/core/ModuleCommunicationListener.java	/^package core;$/;"	p
core	src/core/MovementListener.java	/^package core;$/;"	p
core	src/core/NetworkInterface.java	/^package core;$/;"	p
core	src/core/Settings.java	/^package core;$/;"	p
core	src/core/SettingsError.java	/^package core;$/;"	p
core	src/core/SimClock.java	/^package core;$/;"	p
core	src/core/SimError.java	/^package core;$/;"	p
core	src/core/SimScenario.java	/^package core;$/;"	p
core	src/core/UpdateListener.java	/^package core;$/;"	p
core	src/core/VBRConnection.java	/^package core;$/;"	p
core	src/core/VM.java	/^package core;$/;"	p
core	src/core/World.java	/^package core;$/;"	p
costsForMessages	src/routing/MaxPropRouter.java	/^	private Map<Integer, Double> costsForMessages;$/;"	f	class:MaxPropRouter	file:
costsForMessages	src/routing/MaxPropRouterWithEstimation.java	/^	private Map<Integer, Double> costsForMessages;$/;"	f	class:MaxPropRouterWithEstimation	file:
count	addPoints.py	/^				count = count + 1$/;"	v
count	addPoints.py	/^			count = 0$/;"	v
countRange	src/routing/LifeRouter.java	/^	private int countRange[];$/;"	f	class:LifeRouter	file:
createCheckItem	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem createCheckItem(Container c,String txt,$/;"	m	class:SimMenuBar	file:
createConnection	src/core/NetworkInterface.java	/^	public abstract void createConnection(NetworkInterface anotherInterface);$/;"	m	class:NetworkInterface
createConnection	src/interfaces/DistanceCapacityInterface.java	/^	public void createConnection(NetworkInterface anotherInterface) {$/;"	m	class:DistanceCapacityInterface
createConnection	src/interfaces/InterferenceLimitedInterface.java	/^	public void createConnection(NetworkInterface anotherInterface) {$/;"	m	class:InterferenceLimitedInterface
createConnection	src/interfaces/SimpleBroadcastInterface.java	/^	public void createConnection(NetworkInterface anotherInterface) {$/;"	m	class:SimpleBroadcastInterface
createConnection	src/test/TestInterface.java	/^	public void createConnection(NetworkInterface anotherInterface) {$/;"	m	class:TestInterface
createControls	src/gui/EventLogPanel.java	/^	private EventLogControlPanel createControls() {$/;"	m	class:EventLogPanel	file:
createDirs	src/report/Report.java	/^	private boolean createDirs(File directory) {$/;"	m	class:Report	file:
createHost	src/test/TestUtils.java	/^	public DTNHost createHost() {$/;"	m	class:TestUtils
createHost	src/test/TestUtils.java	/^	public DTNHost createHost(Coord loc) {$/;"	m	class:TestUtils
createHost	src/test/TestUtils.java	/^	public DTNHost createHost(Coord loc, String name) {$/;"	m	class:TestUtils
createHost	src/test/TestUtils.java	/^	public DTNHost createHost(MovementModel mmProto, String name) {$/;"	m	class:TestUtils
createHosts	src/core/SimScenario.java	/^	protected void createHosts() {$/;"	m	class:SimScenario
createHosts	src/test/WorldTest.java	/^		protected void createHosts() {$/;"	m	class:WorldTest.TestScenario
createImageIcon	src/gui/GUIControls.java	/^	private ImageIcon createImageIcon(String path) {$/;"	m	class:GUIControls	file:
createIntializedObject	src/core/Settings.java	/^	public Object createIntializedObject(String className) {$/;"	m	class:Settings
createMenuItem	src/gui/SimMenuBar.java	/^	private JMenuItem createMenuItem(Container c, String txt) {$/;"	m	class:SimMenuBar	file:
createNewMessage	src/core/DTNHost.java	/^	public void createNewMessage(Message m) {$/;"	m	class:DTNHost
createNewMessage	src/routing/ActiveRouter.java	/^	public boolean createNewMessage(Message m) {$/;"	m	class:ActiveRouter
createNewMessage	src/routing/EpidemicOracleRouter.java	/^	public boolean createNewMessage(Message m) {$/;"	m	class:EpidemicOracleRouter
createNewMessage	src/routing/MessageRouter.java	/^	public boolean createNewMessage(Message m) {$/;"	m	class:MessageRouter
createNewMessage	src/routing/SprayAndWaitRouter.java	/^	public boolean createNewMessage(Message msg) {$/;"	m	class:SprayAndWaitRouter
createObject	src/core/Settings.java	/^	public Object createObject(String className) {$/;"	m	class:Settings
createOrUpdateNode	src/input/WKTMapReader.java	/^	private MapNode createOrUpdateNode(Coord c, MapNode previous) {$/;"	m	class:WKTMapReader	file:
createOutput	src/report/Report.java	/^	private void createOutput(String outFileName) {$/;"	m	class:Report	file:
createSnapshot	src/report/MessageAvailabilityReport.java	/^	protected void createSnapshot(List<DTNHost> hosts) {$/;"	m	class:MessageAvailabilityReport
createSnapshot	src/report/MessageCopyCountReport.java	/^	protected void createSnapshot(List<DTNHost> hosts) {$/;"	m	class:MessageCopyCountReport
createSnapshot	src/report/MessageLocationReport.java	/^	protected void createSnapshot(List<DTNHost> hosts) {$/;"	m	class:MessageLocationReport
createSnapshot	src/report/SnapshotReport.java	/^	protected void createSnapshot(List<DTNHost> hosts) {$/;"	m	class:SnapshotReport
createSuffixedOutput	src/report/Report.java	/^	private void createSuffixedOutput(String outFileName) {$/;"	m	class:Report	file:
createTimeStamp	src/report/ConnectivityDtnsim2Report.java	/^	private String createTimeStamp() {$/;"	m	class:ConnectivityDtnsim2Report	file:
createTimeStamp	src/report/ConnectivityONEReport.java	/^	private String createTimeStamp() {$/;"	m	class:ConnectivityONEReport	file:
createTopology	src/test/DijkstraPathFinderTest.java	/^	private void createTopology() {$/;"	m	class:DijkstraPathFinderTest	file:
created	src/report/MessageDeliveryReport.java	/^	private int created;$/;"	f	class:MessageDeliveryReport	file:
creationInfos	src/report/DistanceDelayReport.java	/^	private HashMap<String, InfoTuple> creationInfos;$/;"	f	class:DistanceDelayReport	file:
creationTimes	src/report/MessageStatsReport.java	/^	private Map<String, Double> creationTimes;$/;"	f	class:MessageStatsReport	file:
ctReader	src/test/ContactTimesReportTest.java	/^	private BufferedReader ctReader;$/;"	f	class:ContactTimesReportTest	file:
ctReader	src/test/TotalContactTimeReportTest.java	/^	private BufferedReader ctReader;$/;"	f	class:TotalContactTimeReportTest	file:
ctr	src/test/TotalContactTimeReportTest.java	/^	private TotalContactTimeReport ctr;$/;"	f	class:TotalContactTimeReportTest	file:
curPath	src/movement/ExternalPathMovement.java	/^	private int curPath=0;$/;"	f	class:ExternalPathMovement	file:
curRange	src/util/ActivenessHandler.java	/^	private TimeRange curRange = null;$/;"	f	class:ActivenessHandler	file:
curTransform	src/gui/playfield/PlayField.java	/^	private AffineTransform curTransform;$/;"	f	class:PlayField	file:
currentEnergy	src/routing/util/EnergyModel.java	/^	private double currentEnergy;$/;"	f	class:EnergyModel	file:
currentHour	src/report/ContactsPerHourReport.java	/^	private int currentHour;$/;"	f	class:ContactsPerHourReport	file:
currentHourCount	src/report/ContactsPerHourReport.java	/^	private int currentHourCount;$/;"	f	class:ContactsPerHourReport	file:
currentMovementModel	src/movement/ExtendedMovementModel.java	/^	private SwitchableMovement currentMovementModel;$/;"	f	class:ExtendedMovementModel	file:
currentTransmitSpeed	src/interfaces/InterferenceLimitedInterface.java	/^	protected int currentTransmitSpeed;$/;"	f	class:InterferenceLimitedInterface
currentspeed	src/core/VBRConnection.java	/^	private int currentspeed = 0;$/;"	f	class:VBRConnection	file:
custodyFraction	src/routing/WaveRouter.java	/^	private double custodyFraction;$/;"	f	class:WaveRouter	file:
custodyMessages	src/routing/WaveRouter.java	/^	private Map<String, Double> custodyMessages;$/;"	f	class:WaveRouter	file:
d	src/test/ScheduleDijkstraTest.java	/^	ScheduleDijkstra d;$/;"	f	class:ScheduleDijkstraTest
data	addPoints.py	/^	data = F.readlines()$/;"	v
debug	toolkit/Common.pm	/^sub debug {$/;"	s
debugLevel	src/core/Debug.java	/^	private static int debugLevel = 0;$/;"	f	class:Debug	file:
delays	src/report/MessageDelayReport.java	/^	private List<Double> delays;$/;"	f	class:MessageDelayReport	file:
deleteAckedMessages	src/routing/MaxPropRouter.java	/^	private void deleteAckedMessages() {$/;"	m	class:MaxPropRouter	file:
deleteAckedMessages	src/routing/MaxPropRouterWithEstimation.java	/^	private void deleteAckedMessages() {$/;"	m	class:MaxPropRouterWithEstimation	file:
deleteDelivered	src/routing/ActiveRouter.java	/^	protected boolean deleteDelivered;$/;"	f	class:ActiveRouter
deleteMessage	src/core/DTNHost.java	/^	public void deleteMessage(String id, boolean drop) {$/;"	m	class:DTNHost
deleteMessage	src/routing/MessageRouter.java	/^	public void deleteMessage(String id, boolean drop) {$/;"	m	class:MessageRouter
deliverMessage	src/test/AbstractRouterTest.java	/^	protected void deliverMessage(DTNHost from, DTNHost to, String msgId,$/;"	m	class:AbstractRouterTest
delivered	src/report/MessageDeliveryReport.java	/^	private int delivered;$/;"	f	class:MessageDeliveryReport	file:
delivered	src/test/MessageChecker.java	/^		private Boolean delivered;$/;"	f	class:MessageChecker.MsgCheckerEvent	file:
deliveredMessages	src/report/MessageGraphvizReport.java	/^	private Vector<Message> deliveredMessages;$/;"	f	class:MessageGraphvizReport	file:
deliveredMessages	src/routing/MessageRouter.java	/^	private HashMap<String, Message> deliveredMessages;$/;"	f	class:MessageRouter	file:
delta	src/routing/schedule/ScheduleEntry.java	/^	private double delta;$/;"	f	class:ScheduleEntry	file:
deskLocation	src/movement/OfficeActivityMovement.java	/^	private Coord deskLocation;$/;"	f	class:OfficeActivityMovement	file:
destMax	src/applications/PingApplication.java	/^	private int		destMax=1;$/;"	f	class:PingApplication	file:
destMin	src/applications/PingApplication.java	/^	private int		destMin=0;$/;"	f	class:PingApplication	file:
destination	src/core/DTNHost.java	/^	private Coord destination;	\/\/ where is it going$/;"	f	class:DTNHost	file:
destination	src/movement/EveningTrip.java	/^	private Coord destination;$/;"	f	class:EveningTrip	file:
destroyConnection	src/core/NetworkInterface.java	/^	public void destroyConnection(NetworkInterface anotherInterface) {$/;"	m	class:NetworkInterface
dijkstra	src/routing/MaxPropRouter.java	/^	private MaxPropDijkstra dijkstra;$/;"	f	class:MaxPropRouter	file:
dijkstra	src/routing/MaxPropRouterWithEstimation.java	/^	private MaxPropDijkstra dijkstra;$/;"	f	class:MaxPropRouterWithEstimation	file:
disc	src/test/TotalContactTimeReportTest.java	/^	private void disc(DTNHost host) {$/;"	m	class:TotalContactTimeReportTest	file:
disconnect	src/core/NetworkInterface.java	/^	protected void disconnect(Connection con,$/;"	m	class:NetworkInterface
disconnect	src/test/AbstractRouterTest.java	/^	protected static void disconnect(DTNHost node) {$/;"	m	class:AbstractRouterTest
disconnectLocation	src/test/AbstractRouterTest.java	/^	protected static final Coord disconnectLocation = new Coord(900000,900000);$/;"	f	class:AbstractRouterTest
distance	src/core/Coord.java	/^	public double distance(Coord other) {$/;"	m	class:Coord
distance	src/movement/HomeActivityMovement.java	/^	private int distance;$/;"	f	class:HomeActivityMovement	file:
distance	src/movement/OfficeActivityMovement.java	/^	private int distance;$/;"	f	class:OfficeActivityMovement	file:
distance	src/report/RadiusOfGyrationReport.java	/^	private static double distance($/;"	m	class:RadiusOfGyrationReport	file:
distance	writePoints.py	/^                distance = int(sys.argv[3])$/;"	v
distances	src/movement/map/DijkstraPathFinder.java	/^	private DistanceMap distances;$/;"	f	class:DijkstraPathFinder	file:
distancesFromStart	src/routing/maxprop/MaxPropDijkstra.java	/^	private DistanceMap distancesFromStart;$/;"	f	class:MaxPropDijkstra	file:
divisionHeight	src/report/NodeDensityReport.java	/^	private final double divisionHeight;$/;"	f	class:NodeDensityReport	file:
divisionWidth	src/report/NodeDensityReport.java	/^	private final double divisionWidth;$/;"	f	class:NodeDensityReport	file:
doEveningActivityProb	src/movement/WorkingDayMovement.java	/^	private double doEveningActivityProb;$/;"	f	class:WorkingDayMovement	file:
doRelay	src/test/ProphetRouterTest.java	/^	private void doRelay() {$/;"	m	class:ProphetRouterTest	file:
done	src/input/WKTReader.java	/^	private boolean done;$/;"	f	class:WKTReader	file:
done	src/report/AdjacencyGraphvizReport.java	/^	public void done() {$/;"	m	class:AdjacencyGraphvizReport
done	src/report/ContactTimesReport.java	/^	public void done() {$/;"	m	class:ContactTimesReport
done	src/report/ContactsDuringAnICTReport.java	/^	public void done() {$/;"	m	class:ContactsDuringAnICTReport
done	src/report/ContactsPerHourReport.java	/^	public void done() {$/;"	m	class:ContactsPerHourReport
done	src/report/CreatedMessagesReport.java	/^	public void done() {$/;"	m	class:CreatedMessagesReport
done	src/report/DeliveredMessagesReport.java	/^	public void done() {$/;"	m	class:DeliveredMessagesReport
done	src/report/DistanceDelayReport.java	/^	public void done() {$/;"	m	class:DistanceDelayReport
done	src/report/EncountersVSUniqueEncountersReport.java	/^	public void done() {$/;"	m	class:EncountersVSUniqueEncountersReport
done	src/report/JumpSizeDistributionReport.java	/^	public final void done() {$/;"	m	class:JumpSizeDistributionReport
done	src/report/MessageDelayReport.java	/^	public void done() {$/;"	m	class:MessageDelayReport
done	src/report/MessageDeliveryReport.java	/^	public void done() {$/;"	m	class:MessageDeliveryReport
done	src/report/MessageGraphvizReport.java	/^	public void done() {$/;"	m	class:MessageGraphvizReport
done	src/report/MessageReport.java	/^	public void done() {$/;"	m	class:MessageReport
done	src/report/MessageStatsReport.java	/^	public void done() {$/;"	m	class:MessageStatsReport
done	src/report/NodeDensityReport.java	/^	public void done() {$/;"	m	class:NodeDensityReport
done	src/report/PingAppReporter.java	/^	public void done() {$/;"	m	class:PingAppReporter
done	src/report/RadiusOfGyrationReport.java	/^	public final void done() {$/;"	m	class:RadiusOfGyrationReport
done	src/report/Report.java	/^	public void done() {$/;"	m	class:Report
done	src/report/TotalEncountersReport.java	/^	public void done() {$/;"	m	class:TotalEncountersReport
done	src/report/UniqueEncountersReport.java	/^	public void done() {$/;"	m	class:UniqueEncountersReport
done	src/test/TotalContactTimeReportTest.java	/^	private void done() throws Exception {$/;"	m	class:TotalContactTimeReportTest	file:
done	src/ui/DTNSimUI.java	/^	public void done() {$/;"	m	class:DTNSimUI
doneTiming	src/core/Debug.java	/^	public static void doneTiming() {$/;"	m	class:Debug
draw	src/gui/playfield/MapGraphic.java	/^	public void draw(Graphics2D g2) {$/;"	m	class:MapGraphic
draw	src/gui/playfield/MessageGraphic.java	/^	public void draw(Graphics2D g2) {$/;"	m	class:MessageGraphic
draw	src/gui/playfield/NodeGraphic.java	/^	public void draw(Graphics2D g2) {$/;"	m	class:NodeGraphic
draw	src/gui/playfield/PathGraphic.java	/^	public void draw(Graphics2D g2) {$/;"	m	class:PathGraphic
draw	src/gui/playfield/PlayFieldGraphic.java	/^	public abstract void draw(Graphics2D g2);$/;"	m	class:PlayFieldGraphic
draw	src/gui/playfield/ScaleReferenceGraphic.java	/^	public void draw(Graphics2D g2) {$/;"	m	class:ScaleReferenceGraphic
drawBar	src/gui/playfield/NodeGraphic.java	/^	private void drawBar(Graphics2D g2, Coord loc, int nrof, int col) {$/;"	m	class:NodeGraphic	file:
drawBuffer	src/gui/playfield/NodeGraphic.java	/^	private static boolean drawBuffer;$/;"	f	class:NodeGraphic	file:
drawConnections	src/gui/playfield/NodeGraphic.java	/^	private static boolean drawConnections;$/;"	f	class:NodeGraphic	file:
drawCoverage	src/gui/playfield/NodeGraphic.java	/^	private static boolean drawCoverage;$/;"	f	class:NodeGraphic	file:
drawHost	src/gui/playfield/NodeGraphic.java	/^	private void drawHost(Graphics2D g2) {$/;"	m	class:NodeGraphic	file:
drawHostAddress	src/input/MessageEventGenerator.java	/^	protected int drawHostAddress(int hostRange[]) {$/;"	m	class:MessageEventGenerator
drawMessageSize	src/input/MessageEventGenerator.java	/^	protected int drawMessageSize() {$/;"	m	class:MessageEventGenerator
drawMessages	src/gui/playfield/NodeGraphic.java	/^	private void drawMessages(Graphics2D g2) {$/;"	m	class:NodeGraphic	file:
drawNextEventTimeDiff	src/input/MessageEventGenerator.java	/^	protected int drawNextEventTimeDiff() {$/;"	m	class:MessageEventGenerator
drawNodeName	src/gui/playfield/NodeGraphic.java	/^	private static boolean drawNodeName;$/;"	f	class:NodeGraphic	file:
drawToAddress	src/input/MessageEventGenerator.java	/^	protected int drawToAddress(int hostRange[], int from) {$/;"	m	class:MessageEventGenerator
drop	src/input/MessageDeleteEvent.java	/^	private boolean drop;$/;"	f	class:MessageDeleteEvent	file:
dropExpiredMessages	src/routing/ActiveRouter.java	/^	protected void dropExpiredMessages() {$/;"	m	class:ActiveRouter
dropped	src/test/MessageChecker.java	/^		private Boolean dropped;$/;"	f	class:MessageChecker.MsgCheckerEvent	file:
duration	src/routing/schedule/ScheduleEntry.java	/^	private double duration;$/;"	f	class:ScheduleEntry	file:
e	src/core/SimError.java	/^	private Exception e;$/;"	f	class:SimError	file:
eQueues	src/test/WorldTest.java	/^	private List<EventQueue> eQueues;$/;"	f	class:WorldTest	file:
eeq	src/test/ExternalEventsQueueTest.java	/^	private ExternalEventsQueue eeq;$/;"	f	class:ExternalEventsQueueTest	file:
enableBgImage	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem enableBgImage;$/;"	f	class:SimMenuBar	file:
enableMapGraphic	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem enableMapGraphic;$/;"	f	class:SimMenuBar	file:
encounters	src/report/TotalEncountersReport.java	/^	private int[] encounters;$/;"	f	class:TotalEncountersReport	file:
encounters	src/routing/MaxPropRouterWithEstimation.java	/^	private Map<DTNHost, Integer> encounters;$/;"	f	class:MaxPropRouterWithEstimation	file:
end	src/input/ExternalPathMovementReader.java	/^		public double end;$/;"	f	class:ExternalPathMovementReader.ActiveTime
end	src/util/ActivenessHandler.java	/^		private double end;$/;"	f	class:ActivenessHandler.TimeRange	file:
endBusStop	src/movement/BusTravellerMovement.java	/^	private Coord endBusStop;$/;"	f	class:BusTravellerMovement	file:
endLoc	src/movement/LinearFormation.java	/^	private Coord endLoc; \/** The start location of the line *\/$/;"	f	class:LinearFormation	file:
endLoc	src/movement/LinearMovement.java	/^	private Coord endLoc; \/** The start location of the line *\/$/;"	f	class:LinearMovement	file:
endTime	src/core/SimScenario.java	/^	private double endTime;$/;"	f	class:SimScenario	file:
endTime	src/report/ContactTimesReport.java	/^		private double endTime;$/;"	f	class:ContactTimesReport.ConnectionInfo	file:
energy	src/routing/ActiveRouter.java	/^	private EnergyModel energy;$/;"	f	class:ActiveRouter	file:
enqueMsg	src/input/DTN2Events.java	/^	private void enqueMsg(int from, int to, Bundle bundle) {$/;"	m	class:DTN2Events	file:
ensurePositiveValue	src/core/NetworkInterface.java	/^	protected void ensurePositiveValue(double value, String settingName) {$/;"	m	class:NetworkInterface
ensurePositiveValue	src/core/Settings.java	/^	public void ensurePositiveValue(double value, String settingName) {$/;"	m	class:Settings
enterBus	src/movement/BusTravellerMovement.java	/^	public void enterBus(Path nextPath) {$/;"	m	class:BusTravellerMovement
eqHandler	src/core/SimScenario.java	/^	private EventQueueHandler eqHandler;$/;"	f	class:SimScenario	file:
equals	src/core/Coord.java	/^	public boolean equals(Coord c) {$/;"	m	class:Coord
equals	src/core/Coord.java	/^	public boolean equals(Object o) {$/;"	m	class:Coord
equals	src/core/DTNHost.java	/^	public boolean equals(DTNHost otherHost) {$/;"	m	class:DTNHost
equals	src/report/AdjacencyGraphvizReport.java	/^		public boolean equals(Object o) {$/;"	m	class:AdjacencyGraphvizReport.ConnectionInfo
equals	src/report/ContactTimesReport.java	/^		public boolean equals(Object other) {$/;"	m	class:ContactTimesReport.ConnectionInfo
error	src/input/DTN2Events.java	/^		public boolean error(String reason, Exception exception,$/;"	m	class:DTN2Events.ParserHandler
eveningActivityMovement	src/movement/WorkingDayMovement.java	/^	private EveningActivityMovement eveningActivityMovement;$/;"	f	class:WorkingDayMovement	file:
eveningActivityNodes	src/movement/EveningActivityControlSystem.java	/^	private HashMap<Integer, EveningActivityMovement> eveningActivityNodes;$/;"	f	class:EveningActivityControlSystem	file:
eveningActivityNodes	src/movement/EveningTrip.java	/^	private EveningActivityMovement[] eveningActivityNodes;$/;"	f	class:EveningTrip	file:
eveningActivityNodesInBuffer	src/movement/EveningTrip.java	/^	private int eveningActivityNodesInBuffer;$/;"	f	class:EveningTrip	file:
eventLogPanel	src/gui/DTNSimGUI.java	/^	private EventLogPanel eventLogPanel;$/;"	f	class:DTNSimGUI	file:
eventPanes	src/gui/EventLogPanel.java	/^	private Vector<JPanel> eventPanes;$/;"	f	class:EventLogPanel	file:
eventQueues	src/core/World.java	/^	private List<EventQueue> eventQueues;$/;"	f	class:World	file:
events	src/core/DTN2Manager.java	/^	private static DTN2Events				events = null;$/;"	f	class:DTN2Manager	file:
events	src/input/DTN2Events.java	/^		private DTN2Events				events;$/;"	f	class:DTN2Events.ParserHandler	file:
events	src/input/DTN2Events.java	/^	private Queue<ExternalEvent>	events;$/;"	f	class:DTN2Events	file:
eventsFile	src/input/ExternalEventsQueue.java	/^	private File eventsFile;$/;"	f	class:ExternalEventsQueue	file:
eventsLeft	src/input/BinaryEventsReader.java	/^	private int eventsLeft;$/;"	f	class:BinaryEventsReader	file:
eventsLeftInBuffer	src/input/ExternalEventsQueue.java	/^	public int eventsLeftInBuffer() {$/;"	m	class:ExternalEventsQueue
example	toolkit/getStats.pl	/^example:$/;"	l
example	toolkit/messageLocationAnimator.pl	/^example:$/;"	l
exchangeDeliverableMessages	src/routing/ActiveRouter.java	/^	protected Connection exchangeDeliverableMessages() {$/;"	m	class:ActiveRouter
execTimes	src/core/DTNHost.java	/^    public static List<Double> execTimes;$/;"	f	class:DTNHost
farAway	src/test/AbstractRouterTest.java	/^	protected Coord farAway = new Coord(100000,100000);$/;"	f	class:AbstractRouterTest
ffwButton	src/gui/GUIControls.java	/^	private JButton ffwButton;$/;"	f	class:GUIControls	file:
field	src/gui/DTNSimGUI.java	/^	private PlayField field;$/;"	f	class:DTNSimGUI	file:
field	src/gui/SimMenuBar.java	/^	private PlayField field;$/;"	f	class:SimMenuBar	file:
filename	addPoints.py	/^	filename = "Manchester_test"$/;"	v
filename	addPoints.py	/^	filename = sys.argv[3]$/;"	v
filename	writePoints.py	/^            filename = sys.argv[2]$/;"	v
filterNode	src/gui/nodefilter/NodeFilter.java	/^	public boolean filterNode(DTNHost node);$/;"	m	interface:NodeFilter
filterNode	src/gui/nodefilter/NodeMessageFilter.java	/^	public boolean filterNode(DTNHost node) {$/;"	m	class:NodeMessageFilter
filters	src/gui/NodeChooser.java	/^	private Vector<NodeFilter> filters;$/;"	f	class:NodeChooser	file:
finalizeTransfer	src/core/Connection.java	/^	public void finalizeTransfer() {$/;"	m	class:Connection
firstStopIndex	src/movement/MapRouteMovement.java	/^	private int firstStopIndex = -1;$/;"	f	class:MapRouteMovement	file:
fix	src/report/MovementNs2Report.java	/^	private String fix(double val) {$/;"	m	class:MovementNs2Report	file:
fixFile	src/test/PointsOfInterestTest.java	/^	private String fixFile(String fileName) {$/;"	m	class:PointsOfInterestTest	file:
focusClosestNode	src/gui/playfield/PlayField.java	/^	private void focusClosestNode(int x, int y) {$/;"	m	class:PlayField	file:
focusOnClick	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem focusOnClick;$/;"	f	class:SimMenuBar	file:
focusOnClick	src/gui/playfield/PlayField.java	/^	private boolean focusOnClick;$/;"	f	class:PlayField	file:
font	src/gui/EventLogPanel.java	/^	private Font font;	\/\/ font used in log entries$/;"	f	class:EventLogPanel	file:
forceConnection	src/core/DTNHost.java	/^	public void forceConnection(DTNHost anotherHost, String interfaceId,$/;"	m	class:DTNHost
format	src/report/Report.java	/^	protected String format(double value) {$/;"	m	class:Report
from	src/core/Message.java	/^	private DTNHost from;$/;"	f	class:Message	file:
from	src/gui/playfield/MessageGraphic.java	/^	private DTNHost from;$/;"	f	class:MessageGraphic	file:
from	src/movement/CarMovement.java	/^	private Coord from;$/;"	f	class:CarMovement	file:
from	src/routing/schedule/ScheduleEntry.java	/^	private int from;$/;"	f	class:ScheduleEntry	file:
from	src/test/MessageChecker.java	/^		private DTNHost from;$/;"	f	class:MessageChecker.MsgCheckerEvent	file:
from	src/test/MessageTest.java	/^	private DTNHost from;$/;"	f	class:MessageTest	file:
from1	src/routing/MaxPropRouter.java	/^		private DTNHost from1;$/;"	f	class:MaxPropRouter.MaxPropComparator	file:
from1	src/routing/MaxPropRouterWithEstimation.java	/^		private DTNHost from1;$/;"	f	class:MaxPropRouterWithEstimation.MaxPropComparator	file:
from2	src/routing/MaxPropRouter.java	/^		private DTNHost from2;$/;"	f	class:MaxPropRouter.MaxPropComparator	file:
from2	src/routing/MaxPropRouterWithEstimation.java	/^		private DTNHost from2;$/;"	f	class:MaxPropRouterWithEstimation.MaxPropComparator	file:
fromAddr	src/input/ConnectionEvent.java	/^	protected int fromAddr;$/;"	f	class:ConnectionEvent
fromAddr	src/input/MessageEvent.java	/^	protected int fromAddr;$/;"	f	class:MessageEvent
fromIds	src/input/OneFromEachMessageGenerator.java	/^	private List<Integer> fromIds;$/;"	f	class:OneFromEachMessageGenerator	file:
fromInterface	src/core/Connection.java	/^	protected NetworkInterface fromInterface;$/;"	f	class:Connection
fromNode	src/core/Connection.java	/^	protected DTNHost fromNode;$/;"	f	class:Connection
fromReceivePolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private Range[] fromReceivePolicy = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
fromSendPolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private Range[] fromSendPolicy = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
gamma	src/routing/ProphetRouter.java	/^	private double gamma;$/;"	f	class:ProphetRouter	file:
gamma	src/routing/ProphetRouterWithEstimation.java	/^	private double gamma;$/;"	f	class:ProphetRouterWithEstimation	file:
gamma	src/routing/ProphetV2Router.java	/^	private double gamma;$/;"	f	class:ProphetV2Router	file:
generateConnections	src/test/AdjacencyGraphvizReportTest.java	/^	private void generateConnections() {$/;"	m	class:AdjacencyGraphvizReportTest	file:
generateConnections	src/test/ContactTimesReportTest.java	/^	private void generateConnections(TestUtils utils) {$/;"	m	class:ContactTimesReportTest	file:
generateMessages	src/test/MessageGraphvizReportTest.java	/^	private void generateMessages() {$/;"	m	class:MessageGraphvizReportTest	file:
generateSpeed	src/movement/MovementModel.java	/^	protected double generateSpeed() {$/;"	m	class:MovementModel
generateWaitTime	src/movement/BusTravellerMovement.java	/^	protected double generateWaitTime() {$/;"	m	class:BusTravellerMovement
generateWaitTime	src/movement/EveningActivityMovement.java	/^	protected double generateWaitTime() {$/;"	m	class:EveningActivityMovement
generateWaitTime	src/movement/ExtendedMovementModel.java	/^	protected double generateWaitTime() {$/;"	m	class:ExtendedMovementModel
generateWaitTime	src/movement/HomeActivityMovement.java	/^	protected double generateWaitTime() {$/;"	m	class:HomeActivityMovement
generateWaitTime	src/movement/MovementModel.java	/^	protected double generateWaitTime() {$/;"	m	class:MovementModel
generateWaitTime	src/movement/OfficeActivityMovement.java	/^	protected double generateWaitTime() {$/;"	m	class:OfficeActivityMovement
generate_points	writePoints.py	/^def generate_points(coordinates, distance):$/;"	f
geometricCenter	src/report/RadiusOfGyrationReport.java	/^	private static double[] geometricCenter($/;"	m	class:RadiusOfGyrationReport	file:
get	src/movement/map/DijkstraPathFinder.java	/^		public double get(MapNode node) {$/;"	m	class:DijkstraPathFinder.DistanceMap
get	src/routing/maxprop/MaxPropDijkstra.java	/^		public double get(Integer node) {$/;"	m	class:MaxPropDijkstra.DistanceMap
get	src/routing/schedule/ScheduleDijkstra.java	/^		public double get(Integer node) {$/;"	m	class:ScheduleDijkstra.TimeMap
getActive	src/input/ExternalPathMovementReader.java	/^	public List<ActiveTime> getActive(int ID) {$/;"	m	class:ExternalPathMovementReader
getAddress	src/core/DTNHost.java	/^	public int getAddress() {$/;"	m	class:DTNHost
getAllHosts	src/test/TestUtils.java	/^	public List<DTNHost> getAllHosts() {$/;"	m	class:TestUtils
getAllInterfaces	src/interfaces/ConnectivityGrid.java	/^	public Collection<NetworkInterface> getAllInterfaces() {$/;"	m	class:ConnectivityGrid
getAllInterfaces	src/interfaces/ConnectivityOptimizer.java	/^	abstract public Collection<NetworkInterface> getAllInterfaces();$/;"	m	class:ConnectivityOptimizer
getAllProbs	src/routing/maxprop/MeetingProbabilitySet.java	/^	public Map<Integer, Double> getAllProbs() {$/;"	m	class:MeetingProbabilitySet
getAppID	src/core/Application.java	/^	public String getAppID() {$/;"	m	class:Application
getAppID	src/core/Message.java	/^	public String getAppID() {$/;"	m	class:Message
getAppListeners	src/core/Application.java	/^	public List<ApplicationListener> getAppListeners(){$/;"	m	class:Application
getApplicationListeners	src/core/SimScenario.java	/^	public List<ApplicationListener> getApplicationListeners() {$/;"	m	class:SimScenario
getApplications	src/routing/MessageRouter.java	/^	public Collection<Application> getApplications(String ID) {$/;"	m	class:MessageRouter
getAverage	src/report/Report.java	/^	public String getAverage(List<Double> values) {$/;"	m	class:Report
getAverageDensities	src/report/NodeDensityReport.java	/^	private static double[][] getAverageDensities($/;"	m	class:NodeDensityReport	file:
getBoolean	src/core/Settings.java	/^	public boolean getBoolean(String name) {$/;"	m	class:Settings
getBoolean	src/core/Settings.java	/^	public boolean getBoolean(String name, boolean defaultValue) {$/;"	m	class:Settings
getBottomParams	src/movement/RandomDirection.java	/^    private double[] getBottomParams( final double x0, final double y0,$/;"	m	class:RandomDirection	file:
getBufferOccupancy	src/core/DTNHost.java	/^	public double getBufferOccupancy() {$/;"	m	class:DTNHost
getBufferSize	src/routing/MessageRouter.java	/^	public long getBufferSize() {$/;"	m	class:MessageRouter
getBundle	src/core/DTN2Manager.java	/^	public static Bundle getBundle(String id) {$/;"	m	class:DTN2Manager
getBusControlSystem	src/movement/BusControlSystem.java	/^	public static BusControlSystem getBusControlSystem(int systemID) {$/;"	m	class:BusControlSystem
getBusStops	src/movement/BusControlSystem.java	/^	public List<Coord> getBusStops() {$/;"	m	class:BusControlSystem
getCenterViewCoord	src/gui/DTNSimGUI.java	/^    public Coord getCenterViewCoord() {$/;"	m	class:DTNSimGUI
getClass	src/core/Settings.java	/^	private Class<?> getClass(String name) {$/;"	m	class:Settings	file:
getClosestCoordinate	src/movement/BusTravellerMovement.java	/^	private static Coord getClosestCoordinate(List<Coord> allCoords,$/;"	m	class:BusTravellerMovement	file:
getComBus	src/core/DTNHost.java	/^	public ModuleCommunicationBus getComBus() {$/;"	m	class:DTNHost
getComBus	src/movement/MovementModel.java	/^	public ModuleCommunicationBus getComBus() {$/;"	m	class:MovementModel
getCompletionTime	src/core/VM.java	/^    public double getCompletionTime()$/;"	m	class:VM
getCondition	src/core/Settings.java	/^	public ArithmeticCondition getCondition(String name) {$/;"	m	class:Settings
getConnected	src/routing/schedule/ScheduleOracle.java	/^	public List<ScheduleEntry> getConnected(int from, double time) {$/;"	m	class:ScheduleOracle
getConnectionTime	src/report/ContactTimesReport.java	/^		public double getConnectionTime() {$/;"	m	class:ContactTimesReport.ConnectionInfo
getConnections	src/core/DTNHost.java	/^	public List<Connection> getConnections() {$/;"	m	class:DTNHost
getConnections	src/core/NetworkInterface.java	/^	public List<Connection> getConnections() {$/;"	m	class:NetworkInterface
getConnections	src/routing/ActiveRouter.java	/^	protected List<Connection> getConnections() {$/;"	m	class:ActiveRouter
getControls	src/gui/EventLogPanel.java	/^	public EventLogControlPanel getControls() {$/;"	m	class:EventLogPanel
getCoords	src/movement/Path.java	/^	public List<Coord> getCoords() {$/;"	m	class:Path
getCost	src/routing/MaxPropRouter.java	/^	public double getCost(DTNHost from, DTNHost to) {$/;"	m	class:MaxPropRouter
getCost	src/routing/MaxPropRouterWithEstimation.java	/^	public double getCost(DTNHost from, DTNHost to) {$/;"	m	class:MaxPropRouterWithEstimation
getCosts	src/routing/maxprop/MaxPropDijkstra.java	/^	public Map<Integer, Double> getCosts(Integer from, Set<Integer> to) {$/;"	m	class:MaxPropDijkstra
getCreationTime	src/core/Message.java	/^	public double getCreationTime() {$/;"	m	class:Message
getCsvDoubles	src/core/Settings.java	/^	public double[] getCsvDoubles(String name) {$/;"	m	class:Settings
getCsvDoubles	src/core/Settings.java	/^	public double[] getCsvDoubles(String name, int expectedCount) {$/;"	m	class:Settings
getCsvInts	src/core/Settings.java	/^	public int[] getCsvInts(String name) {$/;"	m	class:Settings
getCsvInts	src/core/Settings.java	/^	public int[] getCsvInts(String name, int expectedCount) {$/;"	m	class:Settings
getCsvRanges	src/core/Settings.java	/^	public Range[] getCsvRanges(String name) {$/;"	m	class:Settings
getCsvSetting	src/core/Settings.java	/^	public String[] getCsvSetting(String name) {$/;"	m	class:Settings
getCsvSetting	src/core/Settings.java	/^	public String[] getCsvSetting(String name, int expectedCount) {$/;"	m	class:Settings
getCurrentMovementModel	src/movement/ExtendedMovementModel.java	/^	public SwitchableMovement getCurrentMovementModel() {$/;"	m	class:ExtendedMovementModel
getDeliveryPreds	src/routing/ProphetRouter.java	/^	private Map<DTNHost, Double> getDeliveryPreds() {$/;"	m	class:ProphetRouter	file:
getDeliveryPreds	src/routing/ProphetRouterWithEstimation.java	/^	private Map<DTNHost, Double> getDeliveryPreds() {$/;"	m	class:ProphetRouterWithEstimation	file:
getDeliveryPreds	src/routing/ProphetV2Router.java	/^	private Map<DTNHost, Double> getDeliveryPreds() {$/;"	m	class:ProphetV2Router	file:
getDelta	src/routing/schedule/ScheduleEntry.java	/^	public double getDelta() {$/;"	m	class:ScheduleEntry
getDestMax	src/applications/PingApplication.java	/^	public int getDestMax() {$/;"	m	class:PingApplication
getDestMin	src/applications/PingApplication.java	/^	public int getDestMin() {$/;"	m	class:PingApplication
getDestination	src/movement/EveningTrip.java	/^	public Coord getDestination() {$/;"	m	class:EveningTrip
getDestinationTime	src/routing/schedule/ScheduleEntry.java	/^	public double getDestinationTime() {$/;"	m	class:ScheduleEntry
getDistance	src/movement/map/DijkstraPathFinder.java	/^	private double getDistance(MapNode from, MapNode to) {$/;"	m	class:DijkstraPathFinder	file:
getDistance	src/routing/maxprop/MaxPropDijkstra.java	/^	private double getDistance(Integer from, Integer to) {$/;"	m	class:MaxPropDijkstra	file:
getDouble	src/core/ModuleCommunicationBus.java	/^	public double getDouble(String key, double naValue) throws SimError {$/;"	m	class:ModuleCommunicationBus
getDouble	src/core/Settings.java	/^	public double getDouble(String name) {$/;"	m	class:Settings
getDouble	src/core/Settings.java	/^	public double getDouble(String name, double defaultValue) {$/;"	m	class:Settings
getDouble	src/util/ParetoRNG.java	/^	public double getDouble() {$/;"	m	class:ParetoRNG
getDuration	src/routing/schedule/ScheduleEntry.java	/^	public double getDuration() {$/;"	m	class:ScheduleEntry
getEncTimeFor	src/routing/ProphetV2Router.java	/^	public double getEncTimeFor(DTNHost host) {$/;"	m	class:ProphetV2Router
getEncounters	src/report/TotalEncountersReport.java	/^	public int[] getEncounters() {$/;"	m	class:TotalEncountersReport
getEndTime	src/core/SimScenario.java	/^	public double getEndTime() {$/;"	m	class:SimScenario
getEnergy	src/routing/util/EnergyModel.java	/^	public double getEnergy() {$/;"	m	class:EnergyModel
getEntries	src/routing/schedule/ScheduleOracle.java	/^	public List<ScheduleEntry> getEntries() {$/;"	m	class:ScheduleOracle
getEveningActivityControlSystem	src/movement/EveningActivityControlSystem.java	/^	public static EveningActivityControlSystem getEveningActivityControlSystem($/;"	m	class:EveningActivityControlSystem
getEveningInstructions	src/movement/EveningActivityControlSystem.java	/^	public EveningTrip getEveningInstructions(int eveningActivityNodeID) {$/;"	m	class:EveningActivityControlSystem
getEventQueues	src/input/EventQueueHandler.java	/^	public List<EventQueue> getEventQueues() {$/;"	m	class:EventQueueHandler
getEvents	src/core/DTN2Manager.java	/^	public static DTN2Events getEvents() {$/;"	m	class:DTN2Manager
getException	src/core/SimError.java	/^	public Exception getException() {$/;"	m	class:SimError
getExternalEvents	src/core/SimScenario.java	/^	public List<EventQueue> getExternalEvents() {$/;"	m	class:SimScenario
getExternalEvents	src/test/WorldTest.java	/^		public List<EventQueue> getExternalEvents() {$/;"	m	class:WorldTest.TestScenario
getFilterString	src/gui/SimMenuBar.java	/^	private String getFilterString(String message) {$/;"	m	class:SimMenuBar	file:
getFormattedTime	src/core/SimClock.java	/^	public static String getFormattedTime(int decimals) {$/;"	m	class:SimClock
getFreeBufferSize	src/routing/MessageRouter.java	/^	public long getFreeBufferSize() {$/;"	m	class:MessageRouter
getFrom	src/core/Message.java	/^	public DTNHost getFrom() {$/;"	m	class:Message
getFrom	src/routing/schedule/ScheduleEntry.java	/^	public int getFrom() {$/;"	m	class:ScheduleEntry
getFullPropertyName	src/core/Settings.java	/^	private String getFullPropertyName(String name, boolean secondary) {$/;"	m	class:Settings	file:
getFullPropertyName	src/core/Settings.java	/^	public String getFullPropertyName(String setting) {$/;"	m	class:Settings
getGraphicsPosition	src/gui/playfield/PlayField.java	/^	public Coord getGraphicsPosition(Coord loc) {$/;"	m	class:PlayField
getHomeLocation	src/movement/HomeActivityMovement.java	/^	public Coord getHomeLocation() {$/;"	m	class:HomeActivityMovement
getHomeLocation	src/movement/WorkingDayMovement.java	/^	public Coord getHomeLocation() {$/;"	m	class:WorkingDayMovement
getHopCount	src/core/Message.java	/^	public int getHopCount() {$/;"	m	class:Message
getHops	src/core/Message.java	/^	public List<DTNHost> getHops() {$/;"	m	class:Message
getHost	src/core/NetworkInterface.java	/^	public DTNHost getHost() {$/;"	m	class:NetworkInterface
getHost	src/movement/MovementModel.java	/^	public DTNHost getHost() {$/;"	m	class:MovementModel
getHost	src/routing/MessageRouter.java	/^	protected DTNHost getHost() {$/;"	m	class:MessageRouter
getHostAddress	src/input/StandardEventsReader.java	/^	private int getHostAddress(String hostId) {$/;"	m	class:StandardEventsReader	file:
getHosts	src/core/DTN2Manager.java	/^	public static Collection<EIDHost> getHosts(String EID) {$/;"	m	class:DTN2Manager
getHosts	src/core/SimScenario.java	/^	public List<DTNHost> getHosts() {$/;"	m	class:SimScenario
getHosts	src/core/World.java	/^	public List<DTNHost> getHosts() {$/;"	m	class:World
getHosts	src/test/WorldTest.java	/^		public List<DTNHost> getHosts() {$/;"	m	class:WorldTest.TestScenario
getID	src/input/MessageEventGenerator.java	/^	protected String getID(){$/;"	m	class:MessageEventGenerator
getID	src/movement/BusMovement.java	/^	public int getID() {$/;"	m	class:BusMovement
getID	src/movement/BusTravellerMovement.java	/^	public int getID() {$/;"	m	class:BusTravellerMovement
getID	src/movement/EveningActivityMovement.java	/^	public int getID() {$/;"	m	class:EveningActivityMovement
getId	src/core/Message.java	/^	public String getId() {$/;"	m	class:Message
getInfoPanel	src/gui/DTNSimGUI.java	/^    public InfoPanel getInfoPanel() {$/;"	m	class:DTNSimGUI
getInitialLocation	src/movement/BusMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:BusMovement
getInitialLocation	src/movement/BusTravellerMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:BusTravellerMovement
getInitialLocation	src/movement/EveningActivityMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:EveningActivityMovement
getInitialLocation	src/movement/ExternalMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:ExternalMovement
getInitialLocation	src/movement/ExternalPathMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:ExternalPathMovement
getInitialLocation	src/movement/GridLocation.java	/^	public Coord getInitialLocation() {$/;"	m	class:GridLocation
getInitialLocation	src/movement/HomeActivityMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:HomeActivityMovement
getInitialLocation	src/movement/LinearFormation.java	/^	public Coord getInitialLocation() {$/;"	m	class:LinearFormation
getInitialLocation	src/movement/LinearMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:LinearMovement
getInitialLocation	src/movement/MapBasedMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:MapBasedMovement
getInitialLocation	src/movement/MapRouteMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:MapRouteMovement
getInitialLocation	src/movement/MovementModel.java	/^	public abstract Coord getInitialLocation();$/;"	m	class:MovementModel
getInitialLocation	src/movement/OfficeActivityMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:OfficeActivityMovement
getInitialLocation	src/movement/RandomDirection.java	/^    public Coord getInitialLocation() {$/;"	m	class:RandomDirection
getInitialLocation	src/movement/RandomWalk.java	/^	public Coord getInitialLocation() {$/;"	m	class:RandomWalk
getInitialLocation	src/movement/RandomWaypoint.java	/^	public Coord getInitialLocation() {$/;"	m	class:RandomWaypoint
getInitialLocation	src/movement/StationaryMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:StationaryMovement
getInitialLocation	src/movement/WorkingDayMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:WorkingDayMovement
getInitialLocation	src/test/StationaryMovement.java	/^	public Coord getInitialLocation() {$/;"	m	class:StationaryMovement
getInstance	src/core/SimClock.java	/^	public static SimClock getInstance() {$/;"	m	class:SimClock
getInstance	src/core/SimScenario.java	/^	public static SimScenario getInstance() {$/;"	m	class:SimScenario
getInstance	src/input/ExternalPathMovementReader.java	/^	public static ExternalPathMovementReader getInstance(String traceFilePath,$/;"	m	class:ExternalPathMovementReader
getInt	src/core/ModuleCommunicationBus.java	/^	public int getInt(String key, int naValue) throws SimError {$/;"	m	class:ModuleCommunicationBus
getInt	src/core/Settings.java	/^	public int getInt(String name) {$/;"	m	class:Settings
getInt	src/core/Settings.java	/^	public int getInt(String name, int defaultValue) {$/;"	m	class:Settings
getIntAverage	src/report/Report.java	/^	public String getIntAverage(List<Integer> values) {$/;"	m	class:Report
getIntMedian	src/report/Report.java	/^	public int getIntMedian(List<Integer> values) {$/;"	m	class:Report
getIntTime	src/core/SimClock.java	/^	public static int getIntTime() {$/;"	m	class:SimClock
getInterface	src/core/DTNHost.java	/^	protected NetworkInterface getInterface(String interfacetype) {$/;"	m	class:DTNHost
getInterface	src/core/DTNHost.java	/^	public NetworkInterface getInterface(int interfaceNo) {$/;"	m	class:DTNHost
getInterfaceType	src/core/NetworkInterface.java	/^	public String getInterfaceType() {$/;"	m	class:NetworkInterface
getInterfaces	src/core/DTNHost.java	/^	public List<NetworkInterface> getInterfaces() {$/;"	m	class:DTNHost
getInterfaces	src/interfaces/ConnectivityGrid.java	/^		public ArrayList<NetworkInterface> getInterfaces() {$/;"	m	class:ConnectivityGrid.GridCell
getInterval	src/applications/PingApplication.java	/^	public double getInterval() {$/;"	m	class:PingApplication
getKey	src/util/Tuple.java	/^	public K getKey() {$/;"	m	class:Tuple
getLastDropped	src/test/MessageChecker.java	/^	public Boolean getLastDropped() {$/;"	m	class:MessageChecker
getLastFirstDelivery	src/test/MessageChecker.java	/^	public Boolean getLastFirstDelivery() {$/;"	m	class:MessageChecker
getLastFrom	src/test/MessageChecker.java	/^	public DTNHost getLastFrom() {$/;"	m	class:MessageChecker
getLastLocation	src/movement/BusTravellerMovement.java	/^	public Coord getLastLocation() {$/;"	m	class:BusTravellerMovement
getLastLocation	src/movement/EveningActivityMovement.java	/^	public Coord getLastLocation() {$/;"	m	class:EveningActivityMovement
getLastLocation	src/movement/HomeActivityMovement.java	/^	public Coord getLastLocation() {$/;"	m	class:HomeActivityMovement
getLastLocation	src/movement/MapBasedMovement.java	/^	public Coord getLastLocation() {$/;"	m	class:MapBasedMovement
getLastLocation	src/movement/MapRouteMovement.java	/^	public Coord getLastLocation() {$/;"	m	class:MapRouteMovement
getLastLocation	src/movement/OfficeActivityMovement.java	/^	public Coord getLastLocation() {$/;"	m	class:OfficeActivityMovement
getLastLocation	src/movement/RandomWalk.java	/^	public Coord getLastLocation() {$/;"	m	class:RandomWalk
getLastLocation	src/movement/SwitchableMovement.java	/^	public Coord getLastLocation();$/;"	m	interface:SwitchableMovement
getLastMsg	src/test/MessageChecker.java	/^	public Message getLastMsg() {$/;"	m	class:MessageChecker
getLastPing	src/applications/PingApplication.java	/^	public double getLastPing() {$/;"	m	class:PingApplication
getLastTimeStamp	src/input/ExternalMovementReader.java	/^	public double getLastTimeStamp() {$/;"	m	class:ExternalMovementReader
getLastTo	src/test/MessageChecker.java	/^	public DTNHost getLastTo() {$/;"	m	class:MessageChecker
getLastType	src/test/MessageChecker.java	/^	public String getLastType() {$/;"	m	class:MessageChecker
getLastUpdateTime	src/routing/maxprop/MeetingProbabilitySet.java	/^	public double getLastUpdateTime() {$/;"	m	class:MeetingProbabilitySet
getLeftParams	src/movement/RandomDirection.java	/^    private double[] getLeftParams( final double x0, final double y0,$/;"	m	class:RandomDirection	file:
getLoc1	src/report/DistanceDelayReport.java	/^		public Coord getLoc1() {$/;"	m	class:DistanceDelayReport.InfoTuple
getLoc2	src/report/DistanceDelayReport.java	/^		public Coord getLoc2() {$/;"	m	class:DistanceDelayReport.InfoTuple
getLocation	src/core/DTNHost.java	/^	public Coord getLocation() {$/;"	m	class:DTNHost
getLocation	src/core/NetworkInterface.java	/^	public Coord getLocation() {$/;"	m	class:NetworkInterface
getLocation	src/movement/BusTravellerMovement.java	/^	public Coord getLocation() {$/;"	m	class:BusTravellerMovement
getLocation	src/movement/EveningTrip.java	/^	public Coord getLocation() {$/;"	m	class:EveningTrip
getLocation	src/movement/map/MapNode.java	/^	public Coord getLocation() {$/;"	m	class:MapNode
getLong	src/core/Settings.java	/^	public long getLong(String name) {$/;"	m	class:Settings
getMap	src/core/SimScenario.java	/^	public SimMap getMap() {$/;"	m	class:SimScenario
getMap	src/input/WKTMapReader.java	/^	public SimMap getMap() {$/;"	m	class:WKTMapReader
getMap	src/movement/BusControlSystem.java	/^	public SimMap getMap() {$/;"	m	class:BusControlSystem
getMap	src/movement/MapBasedMovement.java	/^	public SimMap getMap() {$/;"	m	class:MapBasedMovement
getMaxBound	src/movement/map/SimMap.java	/^	public Coord getMaxBound() {$/;"	m	class:SimMap
getMaxGroupSize	src/movement/EveningActivityMovement.java	/^	public int getMaxGroupSize() {$/;"	m	class:EveningActivityMovement
getMaxHostRange	src/core/SimScenario.java	/^	public double getMaxHostRange() {$/;"	m	class:SimScenario
getMaxHostRange	src/test/WorldTest.java	/^		public double getMaxHostRange() {$/;"	m	class:WorldTest.TestScenario
getMaxTime	src/input/ExternalMovementReader.java	/^	public double getMaxTime() {$/;"	m	class:ExternalMovementReader
getMaxTime	src/input/ExternalPathMovementReader.java	/^	public double getMaxTime() {$/;"	m	class:ExternalPathMovementReader
getMaxX	src/input/ExternalMovementReader.java	/^	public double getMaxX() {$/;"	m	class:ExternalMovementReader
getMaxX	src/input/ExternalPathMovementReader.java	/^	public double getMaxX() {$/;"	m	class:ExternalPathMovementReader
getMaxX	src/movement/ClusterMovement.java	/^	public int getMaxX() {$/;"	m	class:ClusterMovement
getMaxX	src/movement/ExternalMovement.java	/^	public int getMaxX() {$/;"	m	class:ExternalMovement
getMaxX	src/movement/LinearMovement.java	/^	public int getMaxX() {$/;"	m	class:LinearMovement
getMaxX	src/movement/MovementModel.java	/^	public int getMaxX() {$/;"	m	class:MovementModel
getMaxY	src/input/ExternalMovementReader.java	/^	public double getMaxY() {$/;"	m	class:ExternalMovementReader
getMaxY	src/input/ExternalPathMovementReader.java	/^	public double getMaxY() {$/;"	m	class:ExternalPathMovementReader
getMaxY	src/movement/ClusterMovement.java	/^	public int getMaxY() {$/;"	m	class:ClusterMovement
getMaxY	src/movement/ExternalMovement.java	/^	public int getMaxY() {$/;"	m	class:ExternalMovement
getMaxY	src/movement/LinearMovement.java	/^	public int getMaxY() {$/;"	m	class:LinearMovement
getMaxY	src/movement/MovementModel.java	/^	public int getMaxY() {$/;"	m	class:MovementModel
getMedian	src/report/Report.java	/^	public String getMedian(List<Double> values) {$/;"	m	class:Report
getMeetingSpotForID	src/movement/EveningActivityControlSystem.java	/^	public Coord getMeetingSpotForID(int id) {$/;"	m	class:EveningActivityControlSystem
getMessage	src/core/Connection.java	/^	public Message getMessage() {$/;"	m	class:Connection
getMessage	src/routing/MessageRouter.java	/^	protected Message getMessage(String id) {$/;"	m	class:MessageRouter
getMessageCollection	src/core/DTNHost.java	/^	public Collection<Message> getMessageCollection() {$/;"	m	class:DTNHost
getMessageCollection	src/routing/MessageRouter.java	/^	public Collection<Message> getMessageCollection() {$/;"	m	class:MessageRouter
getMessagesForConnected	src/routing/ActiveRouter.java	/^	protected List<Tuple<Message, Connection>> getMessagesForConnected() {$/;"	m	class:ActiveRouter
getMessagesWithCopiesLeft	src/routing/SprayAndWaitRouter.java	/^	protected List<Message> getMessagesWithCopiesLeft() {$/;"	m	class:SprayAndWaitRouter
getMinBound	src/movement/map/SimMap.java	/^	public Coord getMinBound() {$/;"	m	class:SimMap
getMinGroupSize	src/movement/EveningActivityMovement.java	/^	public int getMinGroupSize() {$/;"	m	class:EveningActivityMovement
getMinTime	src/input/ExternalMovementReader.java	/^	public double getMinTime() {$/;"	m	class:ExternalMovementReader
getMinTime	src/input/ExternalPathMovementReader.java	/^	public double getMinTime() {$/;"	m	class:ExternalPathMovementReader
getMinX	src/input/ExternalMovementReader.java	/^	public double getMinX() {$/;"	m	class:ExternalMovementReader
getMinX	src/input/ExternalPathMovementReader.java	/^	public double getMinX() {$/;"	m	class:ExternalPathMovementReader
getMinY	src/input/ExternalMovementReader.java	/^	public double getMinY() {$/;"	m	class:ExternalMovementReader
getMinY	src/input/ExternalPathMovementReader.java	/^	public double getMinY() {$/;"	m	class:ExternalPathMovementReader
getMoreInfo	src/routing/util/RoutingInfo.java	/^	public List<RoutingInfo> getMoreInfo() {$/;"	m	class:RoutingInfo
getMovementModel	src/core/DTNHost.java	/^    public MovementModel getMovementModel() {$/;"	m	class:DTNHost
getMultiplier	src/core/Settings.java	/^	private int getMultiplier(String value) {$/;"	m	class:Settings	file:
getName	src/core/SimScenario.java	/^	public String getName() {$/;"	m	class:SimScenario
getNameSpace	src/core/Settings.java	/^	public String getNameSpace() {$/;"	m	class:Settings
getNearInterfaces	src/interfaces/ConnectivityGrid.java	/^	public Collection<NetworkInterface> getNearInterfaces($/;"	m	class:ConnectivityGrid
getNearInterfaces	src/interfaces/ConnectivityOptimizer.java	/^	abstract public Collection<NetworkInterface> getNearInterfaces($/;"	m	class:ConnectivityOptimizer
getNeighborCells	src/interfaces/ConnectivityGrid.java	/^	private GridCell[] getNeighborCells(int row, int col) {$/;"	m	class:ConnectivityGrid	file:
getNeighborCellsByCoord	src/interfaces/ConnectivityGrid.java	/^	private GridCell[] getNeighborCellsByCoord(Coord c) {$/;"	m	class:ConnectivityGrid	file:
getNeighbors	src/movement/map/MapNode.java	/^	public List<MapNode> getNeighbors() {$/;"	m	class:MapNode
getNextAddress	src/core/DTNHost.java	/^	private synchronized static int getNextAddress() {$/;"	m	class:DTNHost	file:
getNextMessageToRemove	src/routing/ActiveRouter.java	/^	protected Message getNextMessageToRemove(boolean excludeMsgBeingSent) {$/;"	m	class:ActiveRouter
getNextMessageToRemove	src/routing/MaxPropRouter.java	/^	protected Message getNextMessageToRemove(boolean excludeMsgBeingSent) {$/;"	m	class:MaxPropRouter
getNextMessageToRemove	src/routing/MaxPropRouterWithEstimation.java	/^	protected Message getNextMessageToRemove(boolean excludeMsgBeingSent) {$/;"	m	class:MaxPropRouterWithEstimation
getNextMessageToRemove	src/routing/WaveRouter.java	/^	protected Message getNextMessageToRemove(boolean excludeMsgBeingSent) {$/;"	m	class:WaveRouter
getNextWaypoint	src/movement/Path.java	/^	public Coord getNextWaypoint() {$/;"	m	class:Path
getNodeByAddress	src/core/World.java	/^	public DTNHost getNodeByAddress(int address) {$/;"	m	class:World
getNodeByCoord	src/movement/map/SimMap.java	/^	public MapNode getNodeByCoord(Coord c) {$/;"	m	class:SimMap
getNodeRelationships	src/report/UniqueEncountersReport.java	/^	public int[][] getNodeRelationships() {$/;"	m	class:UniqueEncountersReport
getNodes	src/input/WKTMapReader.java	/^	public Collection<MapNode> getNodes() {$/;"	m	class:WKTMapReader
getNodes	src/movement/map/SimMap.java	/^	public List<MapNode> getNodes() {$/;"	m	class:SimMap
getNodesHash	src/input/WKTMapReader.java	/^	public Map<Coord, MapNode> getNodesHash() {$/;"	m	class:WKTMapReader
getNrofMessages	src/core/DTNHost.java	/^	public int getNrofMessages() {$/;"	m	class:DTNHost
getNrofMessages	src/routing/MessageRouter.java	/^	public int getNrofMessages() {$/;"	m	class:MessageRouter
getNrofStops	src/movement/map/MapRoute.java	/^	public int getNrofStops() {$/;"	m	class:MapRoute
getOfficeLocation	src/movement/OfficeActivityMovement.java	/^	public Coord getOfficeLocation() {$/;"	m	class:OfficeActivityMovement
getOfficeLocation	src/movement/WorkingDayMovement.java	/^	public Coord getOfficeLocation() {$/;"	m	class:WorkingDayMovement
getOffset	src/movement/map/SimMap.java	/^	public Coord getOffset() {$/;"	m	class:SimMap
getOkMapNodeTypes	src/movement/MapBasedMovement.java	/^	protected int[] getOkMapNodeTypes() {$/;"	m	class:MapBasedMovement
getOtherInterface	src/core/Connection.java	/^	public NetworkInterface getOtherInterface(NetworkInterface i) {$/;"	m	class:Connection
getOtherNode	src/core/Connection.java	/^	public DTNHost getOtherNode(DTNHost node) {$/;"	m	class:Connection
getParentFrame	src/gui/DTNSimGUI.java	/^    public MainWindow getParentFrame() {$/;"	m	class:DTNSimGUI
getParser	src/core/DTN2Manager.java	/^	public static CLAParser getParser(DTNHost host) {$/;"	m	class:DTN2Manager
getParserHandler	src/input/DTN2Events.java	/^	public DTN2Events.ParserHandler getParserHandler(int hostID,$/;"	m	class:DTN2Events
getPath	src/core/DTNHost.java	/^	public Path getPath() {$/;"	m	class:DTNHost
getPath	src/movement/BusMovement.java	/^	public Path getPath() {$/;"	m	class:BusMovement
getPath	src/movement/BusTravellerMovement.java	/^	public Path getPath() {$/;"	m	class:BusTravellerMovement
getPath	src/movement/CarMovement.java	/^	public Path getPath() {$/;"	m	class:CarMovement
getPath	src/movement/EveningActivityMovement.java	/^	public Path getPath() {$/;"	m	class:EveningActivityMovement
getPath	src/movement/EveningTrip.java	/^	public Path getPath() {$/;"	m	class:EveningTrip
getPath	src/movement/ExtendedMovementModel.java	/^	public Path getPath() {$/;"	m	class:ExtendedMovementModel
getPath	src/movement/ExternalMovement.java	/^	public Path getPath() {$/;"	m	class:ExternalMovement
getPath	src/movement/ExternalPathMovement.java	/^	public Path getPath() {$/;"	m	class:ExternalPathMovement
getPath	src/movement/GridLocation.java	/^	public Path getPath() {$/;"	m	class:GridLocation
getPath	src/movement/HomeActivityMovement.java	/^	public Path getPath() {$/;"	m	class:HomeActivityMovement
getPath	src/movement/LinearFormation.java	/^	public Path getPath() {$/;"	m	class:LinearFormation
getPath	src/movement/LinearMovement.java	/^	public Path getPath() {$/;"	m	class:LinearMovement
getPath	src/movement/MapBasedMovement.java	/^	public Path getPath() {$/;"	m	class:MapBasedMovement
getPath	src/movement/MapRouteMovement.java	/^	public Path getPath() {$/;"	m	class:MapRouteMovement
getPath	src/movement/MovementModel.java	/^	public abstract Path getPath();$/;"	m	class:MovementModel
getPath	src/movement/OfficeActivityMovement.java	/^	public Path getPath() {$/;"	m	class:OfficeActivityMovement
getPath	src/movement/RandomDirection.java	/^    public Path getPath() {$/;"	m	class:RandomDirection
getPath	src/movement/RandomWalk.java	/^	public Path getPath() {$/;"	m	class:RandomWalk
getPath	src/movement/RandomWaypoint.java	/^	public Path getPath() {$/;"	m	class:RandomWaypoint
getPath	src/movement/ShortestPathMapBasedMovement.java	/^	public Path getPath() {$/;"	m	class:ShortestPathMapBasedMovement
getPath	src/movement/StationaryMovement.java	/^	public Path getPath() {$/;"	m	class:StationaryMovement
getPath	src/test/DijkstraPathFinderTest.java	/^	private List<MapNode> getPath(MapNode from, MapNode to) {$/;"	m	class:DijkstraPathFinderTest	file:
getPath	src/test/StationaryMovement.java	/^	public Path getPath() {$/;"	m	class:StationaryMovement
getPathCalledOnce	src/movement/ExtendedMovementModel.java	/^	private boolean getPathCalledOnce;$/;"	f	class:ExtendedMovementModel	file:
getPathString	src/report/DeliveredMessagesReport.java	/^	private String getPathString(Message m) {$/;"	m	class:DeliveredMessagesReport	file:
getPaths	src/input/ExternalPathMovementReader.java	/^	public List<List<ExternalPathMovementReader.Entry>> getPaths(int ID) {$/;"	m	class:ExternalPathMovementReader
getPeerMessageCount	src/routing/LifeRouter.java	/^	private int getPeerMessageCount(Message m) {$/;"	m	class:LifeRouter	file:
getPercs	toolkit/messageAvailabilityAnalyzer2.pl	/^sub getPercs {$/;"	s
getPercs	toolkit/messageCopyCountAnalyzer.pl	/^sub getPercs {$/;"	s
getPingSize	src/applications/PingApplication.java	/^	public int getPingSize() {$/;"	m	class:PingApplication
getPlayFieldScroll	src/gui/MainWindow.java	/^    public JScrollPane getPlayFieldScroll() {$/;"	m	class:MainWindow
getPongSize	src/applications/PingApplication.java	/^	public int getPongSize() {$/;"	m	class:PingApplication
getPredFor	src/routing/ProphetRouter.java	/^	public double getPredFor(DTNHost host) {$/;"	m	class:ProphetRouter
getPredFor	src/routing/ProphetRouterWithEstimation.java	/^	public double getPredFor(DTNHost host) {$/;"	m	class:ProphetRouterWithEstimation
getPredFor	src/routing/ProphetV2Router.java	/^	public double getPredFor(DTNHost host) {$/;"	m	class:ProphetV2Router
getProbFor	src/routing/maxprop/MeetingProbabilitySet.java	/^	public double getProbFor(Integer index) {$/;"	m	class:MeetingProbabilitySet
getProperty	src/core/Message.java	/^	public Object getProperty(String key) {$/;"	m	class:Message
getProperty	src/core/ModuleCommunicationBus.java	/^	public Object getProperty(String key) {$/;"	m	class:ModuleCommunicationBus
getPropertyNamesString	src/core/Settings.java	/^	private String getPropertyNamesString(String name) {$/;"	m	class:Settings	file:
getRandomCoorinateInsideOffice	src/movement/OfficeActivityMovement.java	/^	public Coord getRandomCoorinateInsideOffice() {$/;"	m	class:OfficeActivityMovement
getRandomWaypoint	src/movement/RandomDirection.java	/^    private Coord getRandomWaypoint( double x0, double y0 ) {$/;"	m	class:RandomDirection	file:
getReceiveTime	src/core/Message.java	/^	public double getReceiveTime() {$/;"	m	class:Message
getRemainingByteCount	src/core/CBRConnection.java	/^	public int getRemainingByteCount() {$/;"	m	class:CBRConnection
getRemainingByteCount	src/core/Connection.java	/^	public abstract int getRemainingByteCount();$/;"	m	class:Connection
getRemainingByteCount	src/core/VBRConnection.java	/^    public int getRemainingByteCount() {$/;"	m	class:VBRConnection
getReporter	src/core/DTN2Manager.java	/^	public static DTN2Reporter getReporter() {$/;"	m	class:DTN2Manager
getRequest	src/core/Message.java	/^	public Message getRequest() {$/;"	m	class:Message
getResponseSize	src/core/Message.java	/^	public int getResponseSize() {$/;"	m	class:Message
getRightParams	src/movement/RandomDirection.java	/^    private double[] getRightParams( final double x0, final double y0,$/;"	m	class:RandomDirection	file:
getRouter	src/core/DTNHost.java	/^	public MessageRouter getRouter() {$/;"	m	class:DTNHost
getRoutingInfo	src/core/DTNHost.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:DTNHost
getRoutingInfo	src/routing/ActiveRouter.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:ActiveRouter
getRoutingInfo	src/routing/MaxPropRouter.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:MaxPropRouter
getRoutingInfo	src/routing/MaxPropRouterWithEstimation.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:MaxPropRouterWithEstimation
getRoutingInfo	src/routing/MessageRouter.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:MessageRouter
getRoutingInfo	src/routing/ProphetRouter.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:ProphetRouter
getRoutingInfo	src/routing/ProphetRouterWithEstimation.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:ProphetRouterWithEstimation
getRoutingInfo	src/routing/ProphetV2Router.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:ProphetV2Router
getRoutingInfo	src/routing/WaveRouter.java	/^	public RoutingInfo getRoutingInfo() {$/;"	m	class:WaveRouter
getScale	src/gui/playfield/PlayFieldGraphic.java	/^	public static double getScale() {$/;"	m	class:PlayFieldGraphic
getScenarioName	src/report/Report.java	/^	protected String getScenarioName() {$/;"	m	class:Report
getSecondaryNameSpace	src/core/Settings.java	/^	public String getSecondaryNameSpace() {$/;"	m	class:Settings
getSeed	src/applications/PingApplication.java	/^	public int getSeed() {$/;"	m	class:PingApplication
getSetting	src/core/Settings.java	/^	public String getSetting(String name) {$/;"	m	class:Settings
getSetting	src/core/Settings.java	/^	public String getSetting(String name, String defaultValue) {$/;"	m	class:Settings
getSettings	src/report/Report.java	/^	protected Settings getSettings() {$/;"	m	class:Report
getShoppingLocation	src/movement/EveningActivityMovement.java	/^	public Coord getShoppingLocation() {$/;"	m	class:EveningActivityMovement
getShoppingLocation	src/movement/WorkingDayMovement.java	/^	public Coord getShoppingLocation() {$/;"	m	class:WorkingDayMovement
getShoppingLocationAndGetReady	src/movement/EveningActivityMovement.java	/^	public Coord getShoppingLocationAndGetReady() {$/;"	m	class:EveningActivityMovement
getShortestPath	src/movement/map/DijkstraPathFinder.java	/^	public List<MapNode> getShortestPath(MapNode from, MapNode to) {$/;"	m	class:DijkstraPathFinder
getShortestPath	src/routing/schedule/ScheduleDijkstra.java	/^	public List<ScheduleEntry> getShortestPath(Integer from, Integer to,$/;"	m	class:ScheduleDijkstra
getSimTime	src/report/Report.java	/^	protected double getSimTime() {$/;"	m	class:Report
getSize	src/core/Message.java	/^	public int getSize() {$/;"	m	class:Message
getSizeX	src/core/World.java	/^	public int getSizeX() {$/;"	m	class:World
getSizeY	src/core/World.java	/^	public int getSizeY() {$/;"	m	class:World
getSpeed	src/core/CBRConnection.java	/^	public double getSpeed() {$/;"	m	class:CBRConnection
getSpeed	src/core/Connection.java	/^	public abstract double getSpeed();$/;"	m	class:Connection
getSpeed	src/core/VBRConnection.java	/^	public double getSpeed() {$/;"	m	class:VBRConnection
getSpeed	src/movement/Path.java	/^	public double getSpeed() {$/;"	m	class:Path
getSpeeds	src/movement/Path.java	/^	public List<Double> getSpeeds() {$/;"	m	class:Path
getState	src/movement/BusTravellerMovement.java	/^	public int getState() {$/;"	m	class:BusTravellerMovement
getStops	src/movement/MapRouteMovement.java	/^	public List<MapNode> getStops() {$/;"	m	class:MapRouteMovement
getStops	src/movement/map/MapRoute.java	/^	public List<MapNode> getStops() {$/;"	m	class:MapRoute
getTime	src/core/SimClock.java	/^	public static double getTime() {$/;"	m	class:SimClock
getTime	src/input/ExternalEvent.java	/^	public double getTime() {$/;"	m	class:ExternalEvent
getTime	src/report/DistanceDelayReport.java	/^		public double getTime() {$/;"	m	class:DistanceDelayReport.InfoTuple
getTime	src/routing/schedule/ScheduleEntry.java	/^	public double getTime() {$/;"	m	class:ScheduleEntry
getTo	src/core/Message.java	/^	public DTNHost getTo() {$/;"	m	class:Message
getTo	src/routing/schedule/ScheduleEntry.java	/^	public int getTo() {$/;"	m	class:ScheduleEntry
getTopParams	src/movement/RandomDirection.java	/^    private double[] getTopParams( final double x0, final double y0,$/;"	m	class:RandomDirection	file:
getTotalBytesTransferred	src/core/Connection.java	/^	public int getTotalBytesTransferred() {$/;"	m	class:Connection
getTransferDoneTime	src/core/CBRConnection.java	/^	public double getTransferDoneTime() {$/;"	m	class:CBRConnection
getTransmitRange	src/core/NetworkInterface.java	/^	public double getTransmitRange() {$/;"	m	class:NetworkInterface
getTransmitRange	src/test/TestInterface.java	/^	public double getTransmitRange() {$/;"	m	class:TestInterface
getTransmitSpeed	src/core/NetworkInterface.java	/^	public int getTransmitSpeed(NetworkInterface ni) {$/;"	m	class:NetworkInterface
getTransmitSpeed	src/interfaces/DistanceCapacityInterface.java	/^	public int getTransmitSpeed(NetworkInterface ni) {$/;"	m	class:DistanceCapacityInterface
getTransmitSpeed	src/interfaces/InterferenceLimitedInterface.java	/^	public int getTransmitSpeed(NetworkInterface ni) {$/;"	m	class:InterferenceLimitedInterface
getTransmitSpeed	src/test/TestInterface.java	/^	public int getTransmitSpeed() {$/;"	m	class:TestInterface
getTravelFraction	src/movement/ModifiedRandomDirection.java	/^    protected double getTravelFraction() {$/;"	m	class:ModifiedRandomDirection
getTravelFraction	src/movement/RandomDirection.java	/^    protected double getTravelFraction() {$/;"	m	class:RandomDirection
getTtl	src/core/Message.java	/^	public int getTtl() {$/;"	m	class:Message
getUniqueId	src/core/Message.java	/^	public int getUniqueId() {$/;"	m	class:Message
getUpdateInterval	src/core/SimScenario.java	/^	public double getUpdateInterval() {$/;"	m	class:SimScenario
getUpdateInterval	src/gui/GUIControls.java	/^	public double getUpdateInterval() {$/;"	m	class:GUIControls
getUpdateInterval	src/test/WorldTest.java	/^		public double getUpdateInterval() {$/;"	m	class:WorldTest.TestScenario
getUpdateListeners	src/core/SimScenario.java	/^	public List<UpdateListener> getUpdateListeners() {$/;"	m	class:SimScenario
getUpdateListeners	src/test/WorldTest.java	/^		public List<UpdateListener> getUpdateListeners() {$/;"	m	class:WorldTest.TestScenario
getUsageCount	src/routing/schedule/ScheduleEntry.java	/^	public int getUsageCount() {$/;"	m	class:ScheduleEntry
getValue	src/util/Tuple.java	/^	public V getValue() {$/;"	m	class:Tuple
getVariance	src/report/Report.java	/^	public String getVariance(List<Double> values) {$/;"	m	class:Report
getVia	src/routing/schedule/ScheduleEntry.java	/^	public int getVia() {$/;"	m	class:ScheduleEntry
getWaitTimeAtEnd	src/movement/EveningTrip.java	/^	public double getWaitTimeAtEnd() {$/;"	m	class:EveningTrip
getWorld	src/core/SimScenario.java	/^	public World getWorld() {$/;"	m	class:SimScenario
getWorldPosition	src/gui/playfield/PlayField.java	/^	public Coord getWorldPosition(Coord loc) {$/;"	m	class:PlayField
getWorldSizeX	src/core/SimScenario.java	/^	public int getWorldSizeX() {$/;"	m	class:SimScenario
getWorldSizeX	src/test/WorldTest.java	/^		public int getWorldSizeX() {$/;"	m	class:WorldTest.TestScenario
getWorldSizeY	src/core/SimScenario.java	/^	public int getWorldSizeY() {$/;"	m	class:SimScenario
getWorldSizeY	src/test/WorldTest.java	/^		public int getWorldSizeY() {$/;"	m	class:WorldTest.TestScenario
getX	src/core/Coord.java	/^	public double getX() {$/;"	m	class:Coord
getY	src/core/Coord.java	/^	public double getY() {$/;"	m	class:Coord
getnrofServices	src/core/DTNHost.java	/^    public static int getnrofServices() {$/;"	m	class:DTNHost
ginterfaces	src/interfaces/ConnectivityGrid.java	/^	private HashMap<NetworkInterface, GridCell> ginterfaces;$/;"	f	class:ConnectivityGrid	file:
gn	addPoints.py	/^				gn = gn + 1 $/;"	v
gn	addPoints.py	/^			gn = (int)(groups)$/;"	v
gnuplot	src/report/NodeDensityReport.java	/^	private final boolean gnuplot;$/;"	f	class:NodeDensityReport	file:
gnuplotFileExtension	src/report/NodeDensityReport.java	/^	private final String gnuplotFileExtension;$/;"	f	class:NodeDensityReport	file:
gnuplotTerminal	src/report/NodeDensityReport.java	/^	private final String gnuplotTerminal;$/;"	f	class:NodeDensityReport	file:
gotEvent	src/core/ApplicationListener.java	/^	public void gotEvent(String event, Object params, Application app,$/;"	m	interface:ApplicationListener
gotEvent	src/report/PingAppReporter.java	/^	public void gotEvent(String event, Object params, Application app,$/;"	m	class:PingAppReporter
granularity	src/report/ContactTimesReport.java	/^	protected double granularity;$/;"	f	class:ContactTimesReport
granularity	src/report/MessageLocationReport.java	/^	protected final int granularity;$/;"	f	class:MessageLocationReport
granularity	src/report/SnapshotReport.java	/^	protected final int granularity;$/;"	f	class:SnapshotReport
gridobjects	src/interfaces/ConnectivityGrid.java	/^	static HashMap<Integer,ConnectivityGrid> gridobjects;$/;"	f	class:ConnectivityGrid
group	addPoints.py	/^				group = "Group" + (str)(gn) + "."$/;"	v
groupChooser	src/gui/NodeChooser.java	/^	private JComboBox groupChooser;$/;"	f	class:NodeChooser	file:
groupId	src/test/TestUtils.java	/^	private String groupId = "h";$/;"	f	class:TestUtils	file:
groups	addPoints.py	/^			groups = d$/;"	v
groups	addPoints.py	/^			groups = groups.split()$/;"	v
groups	addPoints.py	/^			groups = groups[2]$/;"	v
gui	src/gui/DTNSimGUI.java	/^package gui;$/;"	p
gui	src/gui/EventLogControl.java	/^package gui;$/;"	p
gui	src/gui/EventLogControlPanel.java	/^package gui;$/;"	p
gui	src/gui/EventLogPanel.java	/^	private DTNSimGUI gui;$/;"	f	class:EventLogPanel	file:
gui	src/gui/EventLogPanel.java	/^package gui;$/;"	p
gui	src/gui/GUIControls.java	/^	private DTNSimGUI gui;$/;"	f	class:GUIControls	file:
gui	src/gui/GUIControls.java	/^package gui;$/;"	p
gui	src/gui/InfoPanel.java	/^	private DTNSimGUI gui;$/;"	f	class:InfoPanel	file:
gui	src/gui/InfoPanel.java	/^package gui;$/;"	p
gui	src/gui/MainWindow.java	/^package gui;$/;"	p
gui	src/gui/NodeChooser.java	/^	private DTNSimGUI gui;$/;"	f	class:NodeChooser	file:
gui	src/gui/NodeChooser.java	/^package gui;$/;"	p
gui	src/gui/RoutingInfoWindow.java	/^package gui;$/;"	p
gui	src/gui/SimMenuBar.java	/^package gui;$/;"	p
gui	src/gui/playfield/PlayField.java	/^	private DTNSimGUI gui;$/;"	f	class:PlayField	file:
gui.nodefilter	src/gui/nodefilter/NodeFilter.java	/^package gui.nodefilter;$/;"	p
gui.nodefilter	src/gui/nodefilter/NodeMessageFilter.java	/^package gui.nodefilter;$/;"	p
gui.playfield	src/gui/playfield/MapGraphic.java	/^package gui.playfield;$/;"	p
gui.playfield	src/gui/playfield/MessageGraphic.java	/^package gui.playfield;$/;"	p
gui.playfield	src/gui/playfield/NodeGraphic.java	/^package gui.playfield;$/;"	p
gui.playfield	src/gui/playfield/PathGraphic.java	/^package gui.playfield;$/;"	p
gui.playfield	src/gui/playfield/PlayField.java	/^package gui.playfield;$/;"	p
gui.playfield	src/gui/playfield/PlayFieldGraphic.java	/^package gui.playfield;$/;"	p
gui.playfield	src/gui/playfield/ScaleReferenceGraphic.java	/^package gui.playfield;$/;"	p
guiControls	src/gui/DTNSimGUI.java	/^	private GUIControls guiControls;$/;"	f	class:DTNSimGUI	file:
guiUpdateChooser	src/gui/GUIControls.java	/^	private JComboBox guiUpdateChooser;$/;"	f	class:GUIControls	file:
guiUpdateInterval	src/gui/GUIControls.java	/^	private double guiUpdateInterval;$/;"	f	class:GUIControls	file:
h	src/test/ConnectionTest.java	/^	private TestDTNHost h[];$/;"	f	class:ConnectionTest	file:
h0	src/test/AbstractRouterTest.java	/^	protected DTNHost h0;$/;"	f	class:AbstractRouterTest
h1	src/report/AdjacencyGraphvizReport.java	/^		private DTNHost h1;$/;"	f	class:AdjacencyGraphvizReport.ConnectionInfo	file:
h1	src/report/ContactTimesReport.java	/^		private DTNHost h1;$/;"	f	class:ContactTimesReport.ConnectionInfo	file:
h1	src/test/AbstractRouterTest.java	/^	protected DTNHost h1;$/;"	f	class:AbstractRouterTest
h1	src/test/ExternalMovementTest.java	/^	private DTNHost h1;$/;"	f	class:ExternalMovementTest	file:
h1	src/test/TotalContactTimeReportTest.java	/^	private DTNHost h1, h2, h3;$/;"	f	class:TotalContactTimeReportTest	file:
h2	src/report/AdjacencyGraphvizReport.java	/^		private DTNHost h2;$/;"	f	class:AdjacencyGraphvizReport.ConnectionInfo	file:
h2	src/report/ContactTimesReport.java	/^		private DTNHost h2;$/;"	f	class:ContactTimesReport.ConnectionInfo	file:
h2	src/test/AbstractRouterTest.java	/^	protected DTNHost h2;$/;"	f	class:AbstractRouterTest
h2	src/test/ExternalMovementTest.java	/^	private DTNHost h2;$/;"	f	class:ExternalMovementTest	file:
h2	src/test/TotalContactTimeReportTest.java	/^	private DTNHost h1, h2, h3;$/;"	f	class:TotalContactTimeReportTest	file:
h3	src/test/AbstractRouterTest.java	/^	protected DTNHost h3;$/;"	f	class:AbstractRouterTest
h3	src/test/ExternalMovementTest.java	/^	private DTNHost h3;$/;"	f	class:ExternalMovementTest	file:
h3	src/test/TotalContactTimeReportTest.java	/^	private DTNHost h1, h2, h3;$/;"	f	class:TotalContactTimeReportTest	file:
h4	src/test/AbstractRouterTest.java	/^	protected DTNHost h4;$/;"	f	class:AbstractRouterTest
h5	src/test/AbstractRouterTest.java	/^	protected DTNHost h5;$/;"	f	class:AbstractRouterTest
h6	src/test/AbstractRouterTest.java	/^	protected DTNHost h6;$/;"	f	class:AbstractRouterTest
handle	src/applications/PingApplication.java	/^	public Message handle(Message msg, DTNHost host) {$/;"	m	class:PingApplication
handle	src/core/Application.java	/^	public abstract Message handle(Message msg, DTNHost host);$/;"	m	class:Application
hasEnergy	src/routing/ActiveRouter.java	/^	public boolean hasEnergy() {$/;"	m	class:ActiveRouter
hasMessage	src/routing/MessageRouter.java	/^	public boolean hasMessage(String id) {$/;"	m	class:MessageRouter
hasNext	src/movement/Path.java	/^	public boolean hasNext() {$/;"	m	class:Path
hashCode	src/core/Coord.java	/^	public int hashCode() {$/;"	m	class:Coord
hashCode	src/report/AdjacencyGraphvizReport.java	/^		public int hashCode() {$/;"	m	class:AdjacencyGraphvizReport.ConnectionInfo
hashCode	src/report/ContactTimesReport.java	/^		public int hashCode() {$/;"	m	class:ContactTimesReport.ConnectionInfo
headingFont	src/gui/EventLogControlPanel.java	/^	private Font headingFont = new Font("sans",Font.BOLD,11);$/;"	f	class:EventLogControlPanel	file:
highlightedNodeColor	src/gui/playfield/NodeGraphic.java	/^	private static Color highlightedNodeColor = Color.MAGENTA;$/;"	f	class:NodeGraphic	file:
highlightedNodes	src/gui/playfield/NodeGraphic.java	/^	private static List<DTNHost> highlightedNodes;$/;"	f	class:NodeGraphic	file:
hitTestBottom	src/movement/RandomDirection.java	/^    private boolean hitTestBottom( final double[] t,$/;"	m	class:RandomDirection	file:
hitTestLeft	src/movement/RandomDirection.java	/^    private boolean hitTestLeft( final double[] t,$/;"	m	class:RandomDirection	file:
hitTestRight	src/movement/RandomDirection.java	/^    private boolean hitTestRight( final double[] t, double areaHeight ) {$/;"	m	class:RandomDirection	file:
hitTestTop	src/movement/RandomDirection.java	/^    private boolean hitTestTop( final double[] t, final double areaWidth ) {$/;"	m	class:RandomDirection	file:
homeLocation	src/movement/HomeActivityMovement.java	/^	private Coord homeLocation;$/;"	f	class:HomeActivityMovement	file:
homeMM	src/movement/WorkingDayMovement.java	/^	private HomeActivityMovement homeMM;$/;"	f	class:WorkingDayMovement	file:
hopCountReceivePolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private ArithmeticCondition hopCountReceivePolicy = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
hopCountSendPolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private ArithmeticCondition hopCountSendPolicy = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
hopCounts	src/report/MessageStatsReport.java	/^	private List<Integer> hopCounts;$/;"	f	class:MessageStatsReport	file:
horizontalCount	src/report/NodeDensityReport.java	/^	private final int horizontalCount;$/;"	f	class:NodeDensityReport	file:
host	src/core/DTN2Manager.java	/^		public DTNHost	host;$/;"	f	class:DTN2Manager.EIDHost
host	src/core/NetworkInterface.java	/^	protected DTNHost host = null;$/;"	f	class:NetworkInterface
host	src/core/VM.java	/^    private DTNHost host;$/;"	f	class:VM	file:
host	src/gui/RoutingInfoWindow.java	/^	private DTNHost host;$/;"	f	class:RoutingInfoWindow	file:
host	src/movement/MovementModel.java	/^	protected DTNHost host;$/;"	f	class:MovementModel
host	src/routing/MessageRouter.java	/^	private DTNHost host;$/;"	f	class:MessageRouter	file:
hostColor	src/gui/playfield/NodeGraphic.java	/^	private static Color hostColor = Color.BLUE;$/;"	f	class:NodeGraphic	file:
hostNameColor	src/gui/playfield/NodeGraphic.java	/^	private static Color hostNameColor = Color.BLUE;$/;"	f	class:NodeGraphic	file:
hostRange	src/input/MessageEventGenerator.java	/^	protected int[] hostRange = {0, 0};$/;"	f	class:MessageEventGenerator
host_id	src/core/DTN2Manager.java	/^		public int		host_id;$/;"	f	class:DTN2Manager.EIDHost
host_id	src/input/DTN2Events.java	/^		private int						host_id;$/;"	f	class:DTN2Events.ParserHandler	file:
hosts	src/core/SimScenario.java	/^	protected List<DTNHost> hosts;$/;"	f	class:SimScenario
hosts	src/core/World.java	/^	private List<DTNHost> hosts;$/;"	f	class:World	file:
hostsConnected	src/core/ConnectionListener.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2);$/;"	m	interface:ConnectionListener
hostsConnected	src/gui/EventLogPanel.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:EventLogPanel
hostsConnected	src/report/AdjacencyGraphvizReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:AdjacencyGraphvizReport
hostsConnected	src/report/ConnectivityDtnsim2Report.java	/^	public void hostsConnected(DTNHost h1, DTNHost h2) {$/;"	m	class:ConnectivityDtnsim2Report
hostsConnected	src/report/ConnectivityONEReport.java	/^	public void hostsConnected(DTNHost h1, DTNHost h2) {$/;"	m	class:ConnectivityONEReport
hostsConnected	src/report/ContactTimesReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactTimesReport
hostsConnected	src/report/ContactsDuringAnICTReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactsDuringAnICTReport
hostsConnected	src/report/ContactsPerHourReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactsPerHourReport
hostsConnected	src/report/EncountersVSUniqueEncountersReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:EncountersVSUniqueEncountersReport
hostsConnected	src/report/EventLogReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:EventLogReport
hostsConnected	src/report/InterContactTimesReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:InterContactTimesReport
hostsConnected	src/report/TotalEncountersReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:TotalEncountersReport
hostsConnected	src/report/UniqueEncountersReport.java	/^	public void hostsConnected(DTNHost host1, DTNHost host2) {$/;"	m	class:UniqueEncountersReport
hostsDisconnected	src/core/ConnectionListener.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2);$/;"	m	interface:ConnectionListener
hostsDisconnected	src/gui/EventLogPanel.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:EventLogPanel
hostsDisconnected	src/report/AdjacencyGraphvizReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {}$/;"	m	class:AdjacencyGraphvizReport
hostsDisconnected	src/report/ConnectivityDtnsim2Report.java	/^	public void hostsDisconnected(DTNHost h1, DTNHost h2) {$/;"	m	class:ConnectivityDtnsim2Report
hostsDisconnected	src/report/ConnectivityONEReport.java	/^	public void hostsDisconnected(DTNHost h1, DTNHost h2) {$/;"	m	class:ConnectivityONEReport
hostsDisconnected	src/report/ContactTimesReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactTimesReport
hostsDisconnected	src/report/ContactsDuringAnICTReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactsDuringAnICTReport
hostsDisconnected	src/report/ContactsPerHourReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactsPerHourReport
hostsDisconnected	src/report/EncountersVSUniqueEncountersReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:EncountersVSUniqueEncountersReport
hostsDisconnected	src/report/EventLogReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:EventLogReport
hostsDisconnected	src/report/InterContactTimesReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:InterContactTimesReport
hostsDisconnected	src/report/TotalContactTimeReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {$/;"	m	class:TotalContactTimeReport
hostsDisconnected	src/report/TotalEncountersReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {}$/;"	m	class:TotalEncountersReport
hostsDisconnected	src/report/UniqueEncountersReport.java	/^	public void hostsDisconnected(DTNHost host1, DTNHost host2) {}$/;"	m	class:UniqueEncountersReport
hostsSet	src/test/MaxPropDijkstraTest.java	/^	private Set<DTNHost> hostsSet;$/;"	f	class:MaxPropDijkstraTest	file:
ictReader	src/test/ContactTimesReportTest.java	/^	private BufferedReader ictReader;$/;"	f	class:ContactTimesReportTest	file:
id	src/core/Message.java	/^	private String id;$/;"	f	class:Message	file:
id	src/input/MessageEvent.java	/^	protected String id;$/;"	f	class:MessageEvent
id	src/input/MessageEventGenerator.java	/^	private int id = 0;$/;"	f	class:MessageEventGenerator	file:
id	src/movement/BusMovement.java	/^	private int id;$/;"	f	class:BusMovement	file:
id	src/movement/BusTravellerMovement.java	/^	private int id;$/;"	f	class:BusTravellerMovement	file:
id	src/movement/EveningActivityMovement.java	/^	private int id;$/;"	f	class:EveningActivityMovement	file:
idMapping	src/movement/ExternalMovement.java	/^	private static Map<String, ExternalMovement> idMapping;$/;"	f	class:ExternalMovement	file:
idPrefix	src/input/MessageEventGenerator.java	/^	protected String idPrefix;$/;"	f	class:MessageEventGenerator
ids	src/test/ExternalMovementReaderTest.java	/^	private static final String [] ids = {"1","2","3"};$/;"	f	class:ExternalMovementReaderTest	file:
imageTransform	src/gui/playfield/PlayField.java	/^	private AffineTransform imageTransform;$/;"	f	class:PlayField	file:
immunityTime	src/routing/WaveRouter.java	/^	private double immunityTime;$/;"	f	class:WaveRouter	file:
in	src/input/BinaryEventsReader.java	/^	private ObjectInputStream in;$/;"	f	class:BinaryEventsReader	file:
in	src/test/ActivenessHandlerTest.java	/^	private double in = 3.0;$/;"	f	class:ActivenessHandlerTest	file:
incContactForAllDisconnectedNodes	src/report/ContactsDuringAnICTReport.java	/^	private void incContactForAllDisconnectedNodes(DTNHost host) {$/;"	m	class:ContactsDuringAnICTReport	file:
incState	src/movement/BusTravellerMovement.java	/^		private void incState() {$/;"	m	class:BusTravellerMovement.ContinueBusTripDecider	file:
incomingBundle	src/input/DTN2Events.java	/^		public BundleTransferReceipt incomingBundle(String location,$/;"	m	class:DTN2Events.ParserHandler
incomingMessages	src/routing/MessageRouter.java	/^	private HashMap<String, Message> incomingMessages;$/;"	f	class:MessageRouter	file:
increaseTimeCount	src/report/ContactTimesReport.java	/^	protected void increaseTimeCount(double time) {$/;"	m	class:ContactTimesReport
increaseUsageCount	src/routing/schedule/ScheduleEntry.java	/^	public void increaseUsageCount() {$/;"	m	class:ScheduleEntry
index	src/movement/map/MapRoute.java	/^	private int index; \/\/ index of the previous returned map node$/;"	f	class:MapRoute	file:
index	src/test/ConnectionTest.java	/^	private int index;$/;"	f	class:ConnectionTest	file:
info	src/gui/InfoPanel.java	/^	private JLabel info;$/;"	f	class:InfoPanel	file:
infoButton	src/gui/InfoPanel.java	/^	private JButton infoButton;$/;"	f	class:InfoPanel	file:
infoPanel	src/gui/DTNSimGUI.java	/^	private InfoPanel infoPanel;$/;"	f	class:DTNSimGUI	file:
init	src/core/Settings.java	/^	public static void init(String propFile) throws SettingsError {$/;"	m	class:Settings
init	src/gui/NodeChooser.java	/^	private void init() {$/;"	m	class:NodeChooser	file:
init	src/gui/SimMenuBar.java	/^	private void init() {$/;"	m	class:SimMenuBar	file:
init	src/input/ExternalEventsQueue.java	/^	private void init(String eeFilePath) {$/;"	m	class:ExternalEventsQueue	file:
init	src/input/WKTReader.java	/^	protected void init(Reader input) {$/;"	m	class:WKTReader
init	src/movement/ExternalPathMovement.java	/^	private void init() {$/;"	m	class:ExternalPathMovement	file:
init	src/report/AdjacencyGraphvizReport.java	/^	protected void init() {$/;"	m	class:AdjacencyGraphvizReport
init	src/report/ContactTimesReport.java	/^	protected void init() {$/;"	m	class:ContactTimesReport
init	src/report/ContactsDuringAnICTReport.java	/^	protected void init() {$/;"	m	class:ContactsDuringAnICTReport
init	src/report/ContactsPerHourReport.java	/^	public void init() {$/;"	m	class:ContactsPerHourReport
init	src/report/CreatedMessagesReport.java	/^	public void init() {$/;"	m	class:CreatedMessagesReport
init	src/report/DeliveredMessagesReport.java	/^	public void init() {$/;"	m	class:DeliveredMessagesReport
init	src/report/DistanceDelayReport.java	/^	protected void init() {$/;"	m	class:DistanceDelayReport
init	src/report/MessageDelayReport.java	/^	public void init() {$/;"	m	class:MessageDelayReport
init	src/report/MessageDeliveryReport.java	/^	public void init() {$/;"	m	class:MessageDeliveryReport
init	src/report/MessageGraphvizReport.java	/^	protected void init() {$/;"	m	class:MessageGraphvizReport
init	src/report/MessageReport.java	/^	public void init() {$/;"	m	class:MessageReport
init	src/report/MessageStatsReport.java	/^	protected void init() {$/;"	m	class:MessageStatsReport
init	src/report/Report.java	/^	protected void init() {$/;"	m	class:Report
init	src/report/TotalContactTimeReport.java	/^	public void init() {$/;"	m	class:TotalContactTimeReport
init	src/routing/ActiveRouter.java	/^	public void init(DTNHost host, List<MessageListener> mListeners) {$/;"	m	class:ActiveRouter
init	src/routing/MessageRouter.java	/^	public void init(DTNHost host, List<MessageListener> mListeners) {$/;"	m	class:MessageRouter
init	src/test/TestSettings.java	/^	public static void init(String propFile) throws SettingsError {$/;"	m	class:TestSettings
initEncTimes	src/routing/ProphetV2Router.java	/^	private void initEncTimes() {$/;"	m	class:ProphetV2Router	file:
initEnergy	src/routing/util/EnergyModel.java	/^	private final double[] initEnergy;$/;"	f	class:EnergyModel	file:
initFromStream	src/core/Settings.java	/^	public static void initFromStream(final InputStream settingsStream)$/;"	m	class:Settings
initGUI	src/gui/DTNSimGUI.java	/^	private void initGUI() {$/;"	m	class:DTNSimGUI	file:
initLoc	src/movement/LinearMovement.java	/^	private Coord initLoc;$/;"	f	class:LinearMovement	file:
initLocType	src/movement/LinearMovement.java	/^	private int initLocType;$/;"	f	class:LinearMovement	file:
initLocations	src/movement/ExternalMovement.java	/^	private static List<Tuple<String, Coord>> initLocations;$/;"	f	class:ExternalMovement	file:
initMeetings	src/routing/MaxPropRouterWithEstimation.java	/^	private void initMeetings() {$/;"	m	class:MaxPropRouterWithEstimation	file:
initMeetings	src/routing/ProphetRouterWithEstimation.java	/^	private void initMeetings() {$/;"	m	class:ProphetRouterWithEstimation	file:
initMinMax	toolkit/transimsParser.pl	/^sub initMinMax {$/;"	s
initModel	src/ui/DTNSimUI.java	/^	private void initModel() {$/;"	m	class:DTNSimUI	file:
initPanel	src/gui/GUIControls.java	/^	private void initPanel() {$/;"	m	class:GUIControls	file:
initPreds	src/routing/ProphetRouter.java	/^	private void initPreds() {$/;"	m	class:ProphetRouter	file:
initPreds	src/routing/ProphetRouterWithEstimation.java	/^	private void initPreds() {$/;"	m	class:ProphetRouterWithEstimation	file:
initPreds	src/routing/ProphetV2Router.java	/^	private void initPreds() {$/;"	m	class:ProphetV2Router	file:
initSettings	src/core/DTNSim.java	/^	private static void initSettings(String[] confFiles, int firstIndex) {$/;"	m	class:DTNSim	file:
initSettings	src/core/World.java	/^	private void initSettings() {$/;"	m	class:World	file:
initTime	src/movement/ExternalMovement.java	/^	private static double initTime;$/;"	f	class:ExternalMovement	file:
initTtl	src/core/Message.java	/^	private int initTtl;$/;"	f	class:Message	file:
initWith	src/movement/map/DijkstraPathFinder.java	/^	private void initWith(MapNode node) {$/;"	m	class:DijkstraPathFinder	file:
initWith	src/routing/maxprop/MaxPropDijkstra.java	/^	private void initWith(Integer firstHop) {$/;"	m	class:MaxPropDijkstra	file:
initWith	src/routing/schedule/ScheduleDijkstra.java	/^	private void initWith(Integer node, double time) {$/;"	m	class:ScheduleDijkstra	file:
initialLocation	src/core/MovementListener.java	/^	public void initialLocation(DTNHost host, Coord location);$/;"	m	interface:MovementListener
initialLocation	src/report/MovementListenerTestReport.java	/^	public void initialLocation(DTNHost host, Coord location) {$/;"	m	class:MovementListenerTestReport
initialLocation	src/report/MovementNs2Report.java	/^	public void initialLocation(DTNHost host, Coord location) {$/;"	m	class:MovementNs2Report
initialLocation	src/test/MovementListenerTest.java	/^		public void initialLocation($/;"	m	class:MovementListenerTest.MovementReport
initialNrofCopies	src/routing/SprayAndWaitRouter.java	/^	protected int initialNrofCopies;$/;"	f	class:SprayAndWaitRouter
input	src/input/BinaryEventsReader.java	/^package input;$/;"	p
input	src/input/ConnectionEvent.java	/^package input;$/;"	p
input	src/input/DTN2Events.java	/^package input;$/;"	p
input	src/input/EventQueue.java	/^package input;$/;"	p
input	src/input/EventQueueHandler.java	/^package input;$/;"	p
input	src/input/ExternalEvent.java	/^package input;$/;"	p
input	src/input/ExternalEventsQueue.java	/^package input;$/;"	p
input	src/input/ExternalEventsReader.java	/^package input;$/;"	p
input	src/input/ExternalMovementReader.java	/^package input;$/;"	p
input	src/input/ExternalPathMovementReader.java	/^package input;$/;"	p
input	src/input/MessageBurstGenerator.java	/^package input;$/;"	p
input	src/input/MessageCreateEvent.java	/^package input;$/;"	p
input	src/input/MessageDeleteEvent.java	/^package input;$/;"	p
input	src/input/MessageEvent.java	/^package input;$/;"	p
input	src/input/MessageEventGenerator.java	/^package input;$/;"	p
input	src/input/MessageRelayEvent.java	/^package input;$/;"	p
input	src/input/OneFromEachMessageGenerator.java	/^package input;$/;"	p
input	src/input/OneToEachMessageGenerator.java	/^package input;$/;"	p
input	src/input/ScheduledUpdatesQueue.java	/^package input;$/;"	p
input	src/input/StandardEventsReader.java	/^package input;$/;"	p
input	src/input/WKTMapReader.java	/^package input;$/;"	p
input	src/input/WKTReader.java	/^package input;$/;"	p
inputFileName	src/movement/ExternalMovement.java	/^	private static String inputFileName;$/;"	f	class:ExternalMovement	file:
instantiateService	src/core/VM.java	/^    public void instantiateService(int service) {$/;"	m	class:VM
interfaceId	src/input/ConnectionEvent.java	/^	protected String interfaceId;$/;"	f	class:ConnectionEvent
interfaces	src/interfaces/ConnectivityGrid.java	/^		private ArrayList<NetworkInterface> interfaces;$/;"	f	class:ConnectivityGrid.GridCell	file:
interfaces	src/interfaces/ConnectivityGrid.java	/^package interfaces;$/;"	p
interfaces	src/interfaces/ConnectivityOptimizer.java	/^package interfaces;$/;"	p
interfaces	src/interfaces/DistanceCapacityInterface.java	/^package interfaces;$/;"	p
interfaces	src/interfaces/InterferenceLimitedInterface.java	/^package interfaces;$/;"	p
interfaces	src/interfaces/SimpleBroadcastInterface.java	/^package interfaces;$/;"	p
interfacetype	src/core/NetworkInterface.java	/^	protected String interfacetype;$/;"	f	class:NetworkInterface
interval	src/applications/PingApplication.java	/^	private double	interval = 500;$/;"	f	class:PingApplication	file:
interval	src/report/BufferOccupancyReport.java	/^	private int interval;$/;"	f	class:BufferOccupancyReport	file:
interval	src/report/SamplingReport.java	/^	protected final double interval;$/;"	f	class:SamplingReport
intialLocation	src/movement/ExternalMovement.java	/^	private Coord intialLocation;$/;"	f	class:ExternalMovement	file:
invScale	src/gui/playfield/PlayFieldGraphic.java	/^	public static double invScale(double value) {$/;"	m	class:PlayFieldGraphic
isActive	src/core/NetworkInterface.java	/^	public boolean isActive() {$/;"	m	class:NetworkInterface
isActive	src/movement/ExternalMovement.java	/^	private boolean isActive;$/;"	f	class:ExternalMovement	file:
isActive	src/movement/ExternalMovement.java	/^	public boolean isActive() {$/;"	m	class:ExternalMovement
isActive	src/movement/ExternalPathMovement.java	/^	public boolean isActive() {$/;"	m	class:ExternalPathMovement
isActive	src/movement/MovementModel.java	/^	public boolean isActive() {$/;"	m	class:MovementModel
isActive	src/test/StationaryMovement.java	/^	public boolean isActive() {$/;"	m	class:StationaryMovement
isActive	src/util/ActivenessHandler.java	/^	public boolean isActive() {$/;"	m	class:ActivenessHandler
isActive	src/util/ActivenessHandler.java	/^	public boolean isActive(int offset) {$/;"	m	class:ActivenessHandler
isBinary	src/routing/SprayAndWaitRouter.java	/^	protected boolean isBinary;$/;"	f	class:SprayAndWaitRouter
isBinaryEeFile	src/input/BinaryEventsReader.java	/^	public static boolean isBinaryEeFile(File file) {$/;"	m	class:BinaryEventsReader
isBlacklistedMessage	src/routing/MessageRouter.java	/^	protected boolean isBlacklistedMessage(String id) {$/;"	m	class:MessageRouter
isCancelled	src/core/World.java	/^	private boolean isCancelled;$/;"	f	class:World	file:
isConnected	src/core/NetworkInterface.java	/^	protected boolean isConnected(NetworkInterface netinterface) {$/;"	m	class:NetworkInterface
isDeliveredMessage	src/routing/MessageRouter.java	/^	protected boolean isDeliveredMessage(Message m) {$/;"	m	class:MessageRouter
isDone	src/input/WKTReader.java	/^	protected boolean isDone() {$/;"	m	class:WKTReader
isFfw	src/gui/GUIControls.java	/^	private boolean isFfw;$/;"	f	class:GUIControls	file:
isFfw	src/gui/GUIControls.java	/^	public boolean isFfw() {$/;"	m	class:GUIControls
isFull	src/movement/EveningTrip.java	/^	public boolean isFull() {$/;"	m	class:EveningTrip
isHighlighted	src/gui/playfield/NodeGraphic.java	/^	private boolean isHighlighted() {$/;"	m	class:NodeGraphic	file:
isInRange	src/util/ActivenessHandler.java	/^		public boolean isInRange(double time) {$/;"	m	class:ActivenessHandler.TimeRange
isInRange	src/util/Range.java	/^	public boolean isInRange(double value) {$/;"	m	class:Range
isIncomingMessage	src/routing/MessageRouter.java	/^	protected boolean isIncomingMessage(String id) {$/;"	m	class:MessageRouter
isInitiator	src/core/Connection.java	/^	public boolean isInitiator(DTNHost node) {$/;"	m	class:Connection
isKnownType	src/input/WKTReader.java	/^	protected boolean isKnownType(String type) {$/;"	m	class:WKTReader
isMessageTransferred	src/core/CBRConnection.java	/^	public boolean isMessageTransferred() {$/;"	m	class:CBRConnection
isMessageTransferred	src/core/Connection.java	/^	public abstract boolean isMessageTransferred();$/;"	m	class:Connection
isMessageTransferred	src/core/VBRConnection.java	/^	public boolean isMessageTransferred() {$/;"	m	class:VBRConnection
isMirrored	src/movement/map/SimMap.java	/^	private boolean isMirrored;$/;"	f	class:SimMap	file:
isMirrored	src/movement/map/SimMap.java	/^	public boolean isMirrored() {$/;"	m	class:SimMap
isMovementActive	src/core/DTNHost.java	/^	public boolean isMovementActive() {$/;"	m	class:DTNHost
isOut	src/util/ActivenessHandler.java	/^		public boolean isOut(double time) {$/;"	m	class:ActivenessHandler.TimeRange
isPartOf	src/test/PointsOfInterestTest.java	/^	private boolean isPartOf(Coord c, Coord[] set) {$/;"	m	class:PointsOfInterestTest	file:
isPassive	src/applications/PingApplication.java	/^	public boolean isPassive() {$/;"	m	class:PingApplication
isPaused	src/gui/GUIControls.java	/^	public boolean isPaused() {$/;"	m	class:GUIControls
isRadioActive	src/core/DTNHost.java	/^	public boolean isRadioActive() {$/;"	m	class:DTNHost
isReady	src/movement/BusTravellerMovement.java	/^	public boolean isReady() {$/;"	m	class:BusTravellerMovement
isReady	src/movement/CarMovement.java	/^	public boolean isReady() {$/;"	m	class:CarMovement
isReady	src/movement/EveningActivityMovement.java	/^	public boolean isReady() {$/;"	m	class:EveningActivityMovement
isReady	src/movement/HomeActivityMovement.java	/^	public boolean isReady() {$/;"	m	class:HomeActivityMovement
isReady	src/movement/MapBasedMovement.java	/^	public boolean isReady() {$/;"	m	class:MapBasedMovement
isReady	src/movement/OfficeActivityMovement.java	/^	public boolean isReady() {$/;"	m	class:OfficeActivityMovement
isReady	src/movement/RandomWalk.java	/^	public boolean isReady() {$/;"	m	class:RandomWalk
isReady	src/movement/SwitchableMovement.java	/^	public boolean isReady();$/;"	m	interface:SwitchableMovement
isReadyForTransfer	src/core/Connection.java	/^	public boolean isReadyForTransfer() {$/;"	m	class:Connection
isReadyToShop	src/movement/EveningActivityMovement.java	/^	public boolean isReadyToShop() {$/;"	m	class:EveningActivityMovement
isReg	src/input/DTN2Events.java	/^	private boolean isReg(Bundle bundle) {$/;"	m	class:DTN2Events	file:
isResponse	src/core/Message.java	/^	public boolean isResponse() {$/;"	m	class:Message
isScanning	src/core/NetworkInterface.java	/^	public boolean isScanning() {$/;"	m	class:NetworkInterface
isSending	src/routing/ActiveRouter.java	/^	public boolean isSending(String msgId) {$/;"	m	class:ActiveRouter
isTracked	src/report/MessageLocationReport.java	/^	protected boolean isTracked(Message m) {$/;"	m	class:MessageLocationReport
isTransferring	src/core/Connection.java	/^	public boolean isTransferring() {$/;"	m	class:Connection
isTransferring	src/core/NetworkInterface.java	/^	public boolean isTransferring() {$/;"	m	class:NetworkInterface
isTransferring	src/interfaces/InterferenceLimitedInterface.java	/^	public boolean isTransferring() {$/;"	m	class:InterferenceLimitedInterface
isTransferring	src/routing/ActiveRouter.java	/^	public boolean isTransferring() {$/;"	m	class:ActiveRouter
isTrueFor	src/core/ArithmeticCondition.java	/^	public boolean isTrueFor(double value) {$/;"	m	class:ArithmeticCondition
isType	src/movement/map/MapNode.java	/^	public boolean isType(int type) {$/;"	m	class:MapNode
isType	src/movement/map/MapNode.java	/^	public boolean isType(int[] types) {$/;"	m	class:MapNode
isUp	src/core/Connection.java	/^	private boolean isUp;$/;"	f	class:Connection	file:
isUp	src/core/Connection.java	/^	public boolean isUp() {$/;"	m	class:Connection
isUp	src/input/ConnectionEvent.java	/^	protected boolean isUp;$/;"	f	class:ConnectionEvent
isWarmup	src/report/Report.java	/^	protected boolean isWarmup() {$/;"	m	class:Report
isWarmupID	src/report/Report.java	/^	protected boolean isWarmupID(String id) {$/;"	m	class:Report
isWithinRange	src/core/NetworkInterface.java	/^	protected boolean isWithinRange(NetworkInterface anotherInterface) {$/;"	m	class:NetworkInterface
is_idle	src/core/VM.java	/^    public boolean is_idle(){$/;"	m	class:VM
is_stationary	src/core/DTNHost.java	/^    public boolean is_stationary;$/;"	f	class:DTNHost
k	src/util/ParetoRNG.java	/^	private double k; \/\/ coefficient$/;"	f	class:ParetoRNG	file:
key	src/util/Tuple.java	/^	private K key;$/;"	f	class:Tuple	file:
lastAgeUpdate	src/routing/ProphetRouter.java	/^	private double lastAgeUpdate;$/;"	f	class:ProphetRouter	file:
lastAgeUpdate	src/routing/ProphetRouterWithEstimation.java	/^	private double lastAgeUpdate;$/;"	f	class:ProphetRouterWithEstimation	file:
lastAgeUpdate	src/routing/ProphetV2Router.java	/^	private double lastAgeUpdate;$/;"	f	class:ProphetV2Router	file:
lastAuctionPeriod	src/core/DTNHost.java	/^    public static double lastAuctionPeriod = 0.0;$/;"	f	class:DTNHost
lastCostFrom	src/routing/MaxPropRouter.java	/^	private DTNHost lastCostFrom;$/;"	f	class:MaxPropRouter	file:
lastCostFrom	src/routing/MaxPropRouterWithEstimation.java	/^	private DTNHost lastCostFrom;$/;"	f	class:MaxPropRouterWithEstimation	file:
lastDropped	src/test/MessageChecker.java	/^	private Boolean lastDropped;$/;"	f	class:MessageChecker	file:
lastEncouterTime	src/routing/ProphetV2Router.java	/^	private Map<DTNHost, Double> lastEncouterTime;$/;"	f	class:ProphetV2Router	file:
lastFirstDelivery	src/test/MessageChecker.java	/^	private Boolean lastFirstDelivery;$/;"	f	class:MessageChecker	file:
lastFrom	src/test/MessageChecker.java	/^	private DTNHost lastFrom;$/;"	f	class:MessageChecker	file:
lastIndex	src/movement/LinearFormation.java	/^	private int lastIndex; \/** index of the previous node *\/$/;"	f	class:LinearFormation	file:
lastIndex	src/movement/LinearMovement.java	/^	private int lastIndex; \/** index of the previous node *\/$/;"	f	class:LinearMovement	file:
lastLine	src/input/ExternalMovementReader.java	/^	private String lastLine;$/;"	f	class:ExternalMovementReader	file:
lastMapNode	src/movement/MapBasedMovement.java	/^	protected MapNode lastMapNode;$/;"	f	class:MapBasedMovement
lastMsg	src/test/MessageChecker.java	/^	private Message lastMsg;$/;"	f	class:MessageChecker	file:
lastOutputSuffix	src/report/Report.java	/^	private int lastOutputSuffix;$/;"	f	class:Report	file:
lastPing	src/applications/PingApplication.java	/^	private double	lastPing = 0;$/;"	f	class:PingApplication	file:
lastPreloadTime	src/movement/ExternalMovement.java	/^	private static double lastPreloadTime;$/;"	f	class:ExternalMovement	file:
lastRecord	src/report/BufferOccupancyReport.java	/^	private double lastRecord = Double.MIN_VALUE;$/;"	f	class:BufferOccupancyReport	file:
lastRecord	src/report/SamplingReport.java	/^	private double lastRecord = Double.MIN_VALUE;$/;"	f	class:SamplingReport	file:
lastReportTime	src/report/Report.java	/^	private double lastReportTime;$/;"	f	class:Report	file:
lastReportedTime	src/report/TotalContactTimeReport.java	/^	private double lastReportedTime;$/;"	f	class:TotalContactTimeReport	file:
lastScanTime	src/core/NetworkInterface.java	/^	private double lastScanTime;$/;"	f	class:NetworkInterface	file:
lastSimTime	src/gui/GUIControls.java	/^	private double lastSimTime;$/;"	f	class:GUIControls	file:
lastTimeStamp	src/input/ExternalMovementReader.java	/^	private double lastTimeStamp = -1;$/;"	f	class:ExternalMovementReader	file:
lastTo	src/test/MessageChecker.java	/^	private DTNHost lastTo;$/;"	f	class:MessageChecker	file:
lastTtlCheck	src/routing/ActiveRouter.java	/^	private double lastTtlCheck;$/;"	f	class:ActiveRouter	file:
lastType	src/test/MessageChecker.java	/^	private String lastType;$/;"	f	class:MessageChecker	file:
lastUpdate	src/core/VBRConnection.java	/^	private double lastUpdate = 0;$/;"	f	class:VBRConnection	file:
lastUpdate	src/gui/GUIControls.java	/^	private long lastUpdate;$/;"	f	class:GUIControls	file:
lastUpdate	src/report/MessageLocationReport.java	/^	protected double lastUpdate;$/;"	f	class:MessageLocationReport
lastUpdate	src/report/SnapshotReport.java	/^	protected double lastUpdate;$/;"	f	class:SnapshotReport
lastUpdate	src/routing/util/EnergyModel.java	/^	private double lastUpdate;$/;"	f	class:EnergyModel	file:
lastUpdate	src/test/TestDTNHost.java	/^	public double lastUpdate = 0;$/;"	f	class:TestDTNHost
lastUpdate	src/ui/DTNSimUI.java	/^	protected double lastUpdate;$/;"	f	class:DTNSimUI
lastUpdateRt	src/ui/DTNSimTextUI.java	/^	private long lastUpdateRt;	\/\/ real time of last ui update$/;"	f	class:DTNSimTextUI	file:
lastUpdateTime	src/routing/maxprop/MeetingProbabilitySet.java	/^	private double lastUpdateTime;$/;"	f	class:MeetingProbabilitySet	file:
lastWaypoint	src/movement/EveningActivityMovement.java	/^	private Coord lastWaypoint;$/;"	f	class:EveningActivityMovement	file:
lastWaypoint	src/movement/HomeActivityMovement.java	/^	private Coord lastWaypoint;$/;"	f	class:HomeActivityMovement	file:
lastWaypoint	src/movement/OfficeActivityMovement.java	/^	private Coord lastWaypoint;$/;"	f	class:OfficeActivityMovement	file:
lastWaypoint	src/movement/RandomDirection.java	/^    private Coord lastWaypoint;$/;"	f	class:RandomDirection	file:
lastWaypoint	src/movement/RandomWalk.java	/^	private Coord lastWaypoint;$/;"	f	class:RandomWalk	file:
lastWaypoint	src/movement/RandomWaypoint.java	/^	private Coord lastWaypoint;$/;"	f	class:RandomWaypoint	file:
lastWrite	src/report/TotalContactTimeReport.java	/^	private double lastWrite;$/;"	f	class:TotalContactTimeReport	file:
latencies	src/report/MessageStatsReport.java	/^	private List<Double> latencies;$/;"	f	class:MessageStatsReport	file:
latestBusStop	src/movement/BusTravellerMovement.java	/^	private Coord latestBusStop;$/;"	f	class:BusTravellerMovement	file:
latestLocation	src/movement/ExternalMovement.java	/^	private Coord latestLocation;$/;"	f	class:ExternalMovement	file:
latestPath	src/movement/ExternalMovement.java	/^	private Path latestPath;$/;"	f	class:ExternalMovement	file:
latestPathStartTime	src/movement/ExternalMovement.java	/^	private double latestPathStartTime;$/;"	f	class:ExternalMovement	file:
layout	src/gui/EventLogControlPanel.java	/^	private GridBagLayout layout;$/;"	f	class:EventLogControlPanel	file:
layout	src/gui/EventLogPanel.java	/^	private GridLayout layout;$/;"	f	class:EventLogPanel	file:
li	addPoints.py	/^				li = li.split()$/;"	v
lines	addPoints.py	/^				lines = SF.readlines()$/;"	v
lines	addPoints.py	/^			lines =[]$/;"	v
listeners	src/core/ModuleCommunicationBus.java	/^	private HashMap<String, List<ModuleCommunicationListener>> listeners;$/;"	f	class:ModuleCommunicationBus	file:
loadObject	src/core/Settings.java	/^	private Object loadObject(String className, Class<?>[] argsClass,$/;"	m	class:Settings	file:
loc	src/movement/GridLocation.java	/^	private Coord loc;$/;"	f	class:GridLocation	file:
loc	src/movement/LinearFormation.java	/^	private Coord loc;$/;"	f	class:LinearFormation	file:
loc	src/movement/StationaryMovement.java	/^	private Coord loc; \/** The location of the nodes *\/$/;"	f	class:StationaryMovement	file:
loc	src/test/StationaryMovement.java	/^	private Coord loc;$/;"	f	class:StationaryMovement	file:
loc1	src/report/DistanceDelayReport.java	/^		private Coord loc1;$/;"	f	class:DistanceDelayReport.InfoTuple	file:
loc2	src/report/DistanceDelayReport.java	/^		private Coord loc2;$/;"	f	class:DistanceDelayReport.InfoTuple	file:
location	src/core/DTNHost.java	/^	private Coord location; 	\/\/ where is the host$/;"	f	class:DTNHost	file:
location	src/movement/BusTravellerMovement.java	/^	private Coord location;$/;"	f	class:BusTravellerMovement	file:
location	src/movement/EveningTrip.java	/^	private Coord location;$/;"	f	class:EveningTrip	file:
location	src/movement/map/MapNode.java	/^	private Coord location;$/;"	f	class:MapNode	file:
logControls	src/gui/EventLogControlPanel.java	/^	private Vector<EventLogControl> logControls;$/;"	f	class:EventLogControlPanel	file:
m	src/test/ConnectionTest.java	/^	private Message m[];$/;"	f	class:ConnectionTest	file:
mListeners	src/routing/MessageRouter.java	/^	private List<MessageListener> mListeners;$/;"	f	class:MessageRouter	file:
main	src/core/DTNSim.java	/^	public static void main(String[] args) {$/;"	m	class:DTNSim
main	src/gui/DTNSimGUI.java	/^	private MainWindow main;$/;"	f	class:DTNSimGUI	file:
makeMessageRouter	src/test/DTNHostTest.java	/^  private static MessageRouter makeMessageRouter() {$/;"	m	class:DTNHostTest	file:
makeMovementModel	src/test/DTNHostTest.java	/^  private static MovementModel makeMovementModel() {$/;"	m	class:DTNHostTest	file:
makeRoomForMessage	src/routing/ActiveRouter.java	/^	protected boolean makeRoomForMessage(int size){$/;"	m	class:ActiveRouter
makeRoomForNewMessage	src/routing/ActiveRouter.java	/^	protected void makeRoomForNewMessage(int size) {$/;"	m	class:ActiveRouter
map	src/movement/MapBasedMovement.java	/^	private SimMap map = null;$/;"	f	class:MapBasedMovement	file:
map	src/movement/map/DijkstraPathFinder.java	/^		private HashMap<MapNode, Double> map;$/;"	f	class:DijkstraPathFinder.DistanceMap	file:
map	src/movement/map/PointsOfInterest.java	/^	private SimMap map;$/;"	f	class:PointsOfInterest	file:
map	src/routing/maxprop/MaxPropDijkstra.java	/^		private HashMap<Integer, Double> map;$/;"	f	class:MaxPropDijkstra.DistanceMap	file:
map	src/routing/schedule/ScheduleDijkstra.java	/^		private HashMap<Integer, Double> map;$/;"	f	class:ScheduleDijkstra.TimeMap	file:
map	src/test/MapBasedMovementTest.java	/^	private SimMap map;$/;"	f	class:MapBasedMovementTest	file:
map	src/test/MapNodeTest.java	/^	private SimMap map;$/;"	f	class:MapNodeTest	file:
mapGraphic	src/gui/playfield/PlayField.java	/^	private MapGraphic mapGraphic;$/;"	f	class:PlayField	file:
mapping	src/test/MaxPropDijkstraTest.java	/^	private Map<Integer, MeetingProbabilitySet> mapping;$/;"	f	class:MaxPropDijkstraTest	file:
math	writePoints.py	/^import math$/;"	i
max	src/util/Range.java	/^	private double max;$/;"	f	class:Range	file:
maxBound	src/movement/map/SimMap.java	/^	private Coord maxBound;$/;"	f	class:SimMap	file:
maxDistance	src/movement/RandomWalk.java	/^	private double maxDistance;$/;"	f	class:RandomWalk	file:
maxGroupSize	src/movement/EveningActivityMovement.java	/^	private int maxGroupSize;$/;"	f	class:EveningActivityMovement	file:
maxHostRange	src/core/SimScenario.java	/^	private double maxHostRange;$/;"	f	class:SimScenario	file:
maxID	src/input/ExternalPathMovementReader.java	/^	private int	maxID;$/;"	f	class:ExternalPathMovementReader	file:
maxJump	src/report/JumpSizeDistributionReport.java	/^	private static double maxJump($/;"	m	class:JumpSizeDistributionReport	file:
maxNrofEvents	src/gui/EventLogPanel.java	/^	private int maxNrofEvents;$/;"	f	class:EventLogPanel	file:
maxPathLength	src/movement/MapBasedMovement.java	/^	protected int maxPathLength = 100;$/;"	f	class:MapBasedMovement
maxSetSize	src/routing/maxprop/MeetingProbabilitySet.java	/^    private int maxSetSize;$/;"	f	class:MeetingProbabilitySet	file:
maxSpeed	src/movement/MovementModel.java	/^	protected double maxSpeed;$/;"	f	class:MovementModel
maxTime	src/input/ExternalMovementReader.java	/^	private double maxTime;$/;"	f	class:ExternalMovementReader	file:
maxTime	src/input/ExternalPathMovementReader.java	/^	private double maxTime;$/;"	f	class:ExternalPathMovementReader	file:
maxValue	src/util/ParetoRNG.java	/^	private double maxValue;$/;"	f	class:ParetoRNG	file:
maxWaitTime	src/movement/MovementModel.java	/^	protected double maxWaitTime;$/;"	f	class:MovementModel
maxX	src/input/ExternalMovementReader.java	/^	private double maxX;$/;"	f	class:ExternalMovementReader	file:
maxX	src/input/ExternalPathMovementReader.java	/^	private double maxX;$/;"	f	class:ExternalPathMovementReader	file:
maxX	src/movement/MovementModel.java	/^	private int maxX;$/;"	f	class:MovementModel	file:
maxY	src/input/ExternalMovementReader.java	/^	private double maxY;$/;"	f	class:ExternalMovementReader	file:
maxY	src/input/ExternalPathMovementReader.java	/^	private double maxY;$/;"	f	class:ExternalPathMovementReader	file:
maxY	src/movement/MovementModel.java	/^	private int maxY;$/;"	f	class:MovementModel	file:
mbm	src/test/MapBasedMovementTest.java	/^	private MapBasedMovement mbm;$/;"	f	class:MapBasedMovementTest	file:
mc	src/test/AbstractRouterTest.java	/^	protected MessageChecker mc;$/;"	f	class:AbstractRouterTest
mcl	src/test/ModuleCommunicationBusTest.java	/^	private ModuleCommunicationListener mcl;$/;"	f	class:ModuleCommunicationBusTest	file:
meanENC	src/routing/MaxPropRouterWithEstimation.java	/^	private double meanENC;$/;"	f	class:MaxPropRouterWithEstimation	file:
meanIET	src/routing/MaxPropRouterWithEstimation.java	/^	private double meanIET;$/;"	f	class:MaxPropRouterWithEstimation	file:
meanIET	src/routing/ProphetRouterWithEstimation.java	/^	private double meanIET;$/;"	f	class:ProphetRouterWithEstimation	file:
meetingSpots	src/movement/EveningActivityControlSystem.java	/^	private List<Coord> meetingSpots;$/;"	f	class:EveningActivityControlSystem	file:
meetings	src/routing/MaxPropRouterWithEstimation.java	/^	private Map<DTNHost, Double> meetings;$/;"	f	class:MaxPropRouterWithEstimation	file:
meetings	src/routing/ProphetRouterWithEstimation.java	/^	private Map<DTNHost, Double> meetings;$/;"	f	class:ProphetRouterWithEstimation	file:
messageAborted	src/core/DTNHost.java	/^	public void messageAborted(String id, DTNHost from, int bytesRemaining) {$/;"	m	class:DTNHost
messageAborted	src/routing/MessageRouter.java	/^	public void messageAborted(String id, DTNHost from, int bytesRemaining) {$/;"	m	class:MessageRouter
messageAborted	src/test/TestDTNHost.java	/^	public void messageAborted(String id, DTNHost from, int bytesRemaining) {$/;"	m	class:TestDTNHost
messageDeleted	src/core/MessageListener.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped);$/;"	m	interface:MessageListener
messageDeleted	src/gui/EventLogPanel.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {$/;"	m	class:EventLogPanel
messageDeleted	src/report/CreatedMessagesReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {}$/;"	m	class:CreatedMessagesReport
messageDeleted	src/report/DTN2Reporter.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped){}$/;"	m	class:DTN2Reporter
messageDeleted	src/report/DeliveredMessagesReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {}$/;"	m	class:DeliveredMessagesReport
messageDeleted	src/report/DistanceDelayReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {}$/;"	m	class:DistanceDelayReport
messageDeleted	src/report/EventLogReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {$/;"	m	class:EventLogReport
messageDeleted	src/report/MessageDelayReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {}$/;"	m	class:MessageDelayReport
messageDeleted	src/report/MessageDeliveryReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {}$/;"	m	class:MessageDeliveryReport
messageDeleted	src/report/MessageGraphvizReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {	}$/;"	m	class:MessageGraphvizReport
messageDeleted	src/report/MessageReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {}$/;"	m	class:MessageReport
messageDeleted	src/report/MessageStatsReport.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {$/;"	m	class:MessageStatsReport
messageDeleted	src/test/MessageChecker.java	/^	public void messageDeleted(Message m, DTNHost where, boolean dropped) {$/;"	m	class:MessageChecker
messageId	src/gui/nodefilter/NodeMessageFilter.java	/^	private String messageId;$/;"	f	class:NodeMessageFilter	file:
messageListeners	src/core/SimScenario.java	/^	private List<MessageListener> messageListeners;$/;"	f	class:SimScenario	file:
messageTransferAborted	src/core/MessageListener.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to);$/;"	m	interface:MessageListener
messageTransferAborted	src/gui/EventLogPanel.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:EventLogPanel
messageTransferAborted	src/report/CreatedMessagesReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:CreatedMessagesReport
messageTransferAborted	src/report/DTN2Reporter.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to){}$/;"	m	class:DTN2Reporter
messageTransferAborted	src/report/DeliveredMessagesReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:DeliveredMessagesReport
messageTransferAborted	src/report/DistanceDelayReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:DistanceDelayReport
messageTransferAborted	src/report/EventLogReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:EventLogReport
messageTransferAborted	src/report/MessageDelayReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageDelayReport
messageTransferAborted	src/report/MessageDeliveryReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageDeliveryReport
messageTransferAborted	src/report/MessageGraphvizReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageGraphvizReport
messageTransferAborted	src/report/MessageReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageReport
messageTransferAborted	src/report/MessageStatsReport.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:MessageStatsReport
messageTransferAborted	src/test/MessageChecker.java	/^	public void messageTransferAborted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:MessageChecker
messageTransferStarted	src/core/MessageListener.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to);$/;"	m	interface:MessageListener
messageTransferStarted	src/gui/EventLogPanel.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:EventLogPanel
messageTransferStarted	src/report/CreatedMessagesReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:CreatedMessagesReport
messageTransferStarted	src/report/DTN2Reporter.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to){}$/;"	m	class:DTN2Reporter
messageTransferStarted	src/report/DeliveredMessagesReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:DeliveredMessagesReport
messageTransferStarted	src/report/DistanceDelayReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:DistanceDelayReport
messageTransferStarted	src/report/EventLogReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:EventLogReport
messageTransferStarted	src/report/MessageDelayReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageDelayReport
messageTransferStarted	src/report/MessageDeliveryReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageDeliveryReport
messageTransferStarted	src/report/MessageGraphvizReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageGraphvizReport
messageTransferStarted	src/report/MessageReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {}$/;"	m	class:MessageReport
messageTransferStarted	src/report/MessageStatsReport.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:MessageStatsReport
messageTransferStarted	src/test/MessageChecker.java	/^	public void messageTransferStarted(Message m, DTNHost from, DTNHost to) {$/;"	m	class:MessageChecker
messageTransferred	src/core/DTNHost.java	/^	public void messageTransferred(String id, DTNHost from) {$/;"	m	class:DTNHost
messageTransferred	src/core/MessageListener.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	interface:MessageListener
messageTransferred	src/gui/EventLogPanel.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:EventLogPanel
messageTransferred	src/report/CreatedMessagesReport.java	/^	public void messageTransferred(Message m, DTNHost f, DTNHost t,boolean b) {}$/;"	m	class:CreatedMessagesReport
messageTransferred	src/report/DTN2Reporter.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:DTN2Reporter
messageTransferred	src/report/DeliveredMessagesReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:DeliveredMessagesReport
messageTransferred	src/report/DistanceDelayReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:DistanceDelayReport
messageTransferred	src/report/EventLogReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:EventLogReport
messageTransferred	src/report/MessageDelayReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:MessageDelayReport
messageTransferred	src/report/MessageDeliveryReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:MessageDeliveryReport
messageTransferred	src/report/MessageGraphvizReport.java	/^	public void messageTransferred(Message m, DTNHost from,$/;"	m	class:MessageGraphvizReport
messageTransferred	src/report/MessageReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:MessageReport
messageTransferred	src/report/MessageStatsReport.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:MessageStatsReport
messageTransferred	src/routing/ActiveRouter.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:ActiveRouter
messageTransferred	src/routing/EpidemicOracleRouter.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:EpidemicOracleRouter
messageTransferred	src/routing/MaxPropRouter.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:MaxPropRouter
messageTransferred	src/routing/MaxPropRouterWithEstimation.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:MaxPropRouterWithEstimation
messageTransferred	src/routing/MessageRouter.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:MessageRouter
messageTransferred	src/routing/SprayAndWaitRouter.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:SprayAndWaitRouter
messageTransferred	src/routing/WaveRouter.java	/^	public Message messageTransferred(String id, DTNHost from) {$/;"	m	class:WaveRouter
messageTransferred	src/test/MessageChecker.java	/^	public void messageTransferred(Message m, DTNHost from, DTNHost to,$/;"	m	class:MessageChecker
messageTransferred	src/test/TestDTNHost.java	/^	public void messageTransferred(String id, DTNHost from) {$/;"	m	class:TestDTNHost
messages	src/routing/MessageRouter.java	/^	private HashMap<String, Message> messages;$/;"	f	class:MessageRouter	file:
min	src/util/Range.java	/^	private double min;$/;"	f	class:Range	file:
minBound	src/movement/map/SimMap.java	/^	private Coord minBound;$/;"	f	class:SimMap	file:
minDistance	src/movement/RandomWalk.java	/^	private double minDistance;$/;"	f	class:RandomWalk	file:
minGroupSize	src/movement/EveningActivityMovement.java	/^	private int minGroupSize;$/;"	f	class:EveningActivityMovement	file:
minPathLength	src/movement/MapBasedMovement.java	/^	protected int minPathLength = 10;$/;"	f	class:MapBasedMovement
minSpeed	src/movement/MovementModel.java	/^	protected double minSpeed;$/;"	f	class:MovementModel
minTime	src/input/ExternalMovementReader.java	/^	private double minTime;$/;"	f	class:ExternalMovementReader	file:
minTime	src/input/ExternalPathMovementReader.java	/^	private double minTime;$/;"	f	class:ExternalPathMovementReader	file:
minWaitTime	src/movement/MovementModel.java	/^	protected double minWaitTime;$/;"	f	class:MovementModel
minX	src/input/ExternalMovementReader.java	/^	private double minX;$/;"	f	class:ExternalMovementReader	file:
minX	src/input/ExternalPathMovementReader.java	/^	private double minX;$/;"	f	class:ExternalPathMovementReader	file:
minY	src/input/ExternalMovementReader.java	/^	private double minY;$/;"	f	class:ExternalMovementReader	file:
minY	src/input/ExternalPathMovementReader.java	/^	private double minY;$/;"	f	class:ExternalPathMovementReader	file:
mirror	src/movement/map/SimMap.java	/^	public void mirror() {$/;"	m	class:SimMap
ml	src/test/DistanceDelayReportTest.java	/^	private Vector<MessageListener> ml;$/;"	f	class:DistanceDelayReportTest	file:
mode	src/movement/EveningActivityMovement.java	/^	private int mode;$/;"	f	class:EveningActivityMovement	file:
mode	src/movement/HomeActivityMovement.java	/^	private int mode;$/;"	f	class:HomeActivityMovement	file:
mode	src/movement/OfficeActivityMovement.java	/^	private int mode;$/;"	f	class:OfficeActivityMovement	file:
mode	src/movement/WorkingDayMovement.java	/^	private int mode;$/;"	f	class:WorkingDayMovement	file:
moduleValueChanged	src/core/ModuleCommunicationListener.java	/^	public void moduleValueChanged(String key, Object newValue);$/;"	m	interface:ModuleCommunicationListener
moduleValueChanged	src/core/NetworkInterface.java	/^	public void moduleValueChanged(String key, Object newValue) {$/;"	m	class:NetworkInterface
moduleValueChanged	src/routing/util/EnergyModel.java	/^	public void moduleValueChanged(String key, Object newValue) {$/;"	m	class:EnergyModel
moreInfo	src/routing/util/RoutingInfo.java	/^	private List<RoutingInfo> moreInfo = null;$/;"	f	class:RoutingInfo	file:
moreTimes	src/test/ActivenessHandlerTest.java	/^	private String moreTimes = ", 100,110, 210,220, 350,400";$/;"	f	class:ActivenessHandlerTest	file:
mouseClicked	src/gui/DTNSimGUI.java	/^		public void mouseClicked(MouseEvent e) {$/;"	m	class:DTNSimGUI.PlayfieldMouseHandler
mouseWheelMoved	src/gui/DTNSimGUI.java	/^		public void mouseWheelMoved(java.awt.event.MouseWheelEvent e) {$/;"	m	class:DTNSimGUI.PlayfieldMouseHandler
movListeners	src/core/DTNHost.java	/^	private List<MovementListener> movListeners;$/;"	f	class:DTNHost	file:
move	src/core/DTNHost.java	/^	public void move(double timeIncrement) {$/;"	m	class:DTNHost
moveAllHosts	src/test/ExternalMovementTest.java	/^	public void moveAllHosts(double time) {$/;"	m	class:ExternalMovementTest
moveHosts	src/core/World.java	/^	private void moveHosts(double timeIncrement) {$/;"	m	class:World	file:
moveInterface	src/interfaces/ConnectivityGrid.java	/^		public void moveInterface(NetworkInterface ni, GridCell to) {$/;"	m	class:ConnectivityGrid.GridCell
movement	src/core/DTNHost.java	/^	private MovementModel movement;$/;"	f	class:DTNHost	file:
movement	src/movement/BusControlSystem.java	/^package movement;$/;"	p
movement	src/movement/BusMovement.java	/^package movement;$/;"	p
movement	src/movement/BusTravellerMovement.java	/^package movement;$/;"	p
movement	src/movement/CarMovement.java	/^package movement;$/;"	p
movement	src/movement/ClusterMovement.java	/^package movement;$/;"	p
movement	src/movement/EveningActivityControlSystem.java	/^package movement;$/;"	p
movement	src/movement/EveningActivityMovement.java	/^package movement;$/;"	p
movement	src/movement/EveningTrip.java	/^package movement;$/;"	p
movement	src/movement/ExtendedMovementModel.java	/^package movement;$/;"	p
movement	src/movement/ExternalMovement.java	/^package movement;$/;"	p
movement	src/movement/ExternalPathMovement.java	/^package movement;$/;"	p
movement	src/movement/GridLocation.java	/^package movement;$/;"	p
movement	src/movement/HomeActivityMovement.java	/^package movement;$/;"	p
movement	src/movement/LinearFormation.java	/^package movement;$/;"	p
movement	src/movement/LinearMovement.java	/^package movement;$/;"	p
movement	src/movement/MapBasedMovement.java	/^package movement;$/;"	p
movement	src/movement/MapRouteMovement.java	/^package movement;$/;"	p
movement	src/movement/ModifiedRandomDirection.java	/^package movement;$/;"	p
movement	src/movement/MovementModel.java	/^package movement;$/;"	p
movement	src/movement/OfficeActivityMovement.java	/^package movement;$/;"	p
movement	src/movement/Path.java	/^package movement;$/;"	p
movement	src/movement/RandomDirection.java	/^package movement;$/;"	p
movement	src/movement/RandomWalk.java	/^package movement;$/;"	p
movement	src/movement/RandomWaypoint.java	/^package movement;$/;"	p
movement	src/movement/ShortestPathMapBasedMovement.java	/^package movement;$/;"	p
movement	src/movement/StationaryMovement.java	/^package movement;$/;"	p
movement	src/movement/SwitchableMovement.java	/^package movement;$/;"	p
movement	src/movement/TransportMovement.java	/^package movement;$/;"	p
movement	src/movement/WorkingDayMovement.java	/^package movement;$/;"	p
movement.map	src/movement/map/DijkstraPathFinder.java	/^package movement.map;$/;"	p
movement.map	src/movement/map/MapNode.java	/^package movement.map;$/;"	p
movement.map	src/movement/map/MapRoute.java	/^package movement.map;$/;"	p
movement.map	src/movement/map/PointsOfInterest.java	/^package movement.map;$/;"	p
movement.map	src/movement/map/SimMap.java	/^package movement.map;$/;"	p
movementListeners	src/core/SimScenario.java	/^	private List<MovementListener> movementListeners;$/;"	f	class:SimScenario	file:
movementUsedForTransfers	src/movement/WorkingDayMovement.java	/^	private TransportMovement movementUsedForTransfers;$/;"	f	class:WorkingDayMovement	file:
mpd	src/test/MaxPropDijkstraTest.java	/^	private MaxPropDijkstra mpd;$/;"	f	class:MaxPropDijkstraTest	file:
mr	src/test/TestUtils.java	/^	private MessageRouter mr;$/;"	f	class:TestUtils	file:
msets	src/test/MaxPropDijkstraTest.java	/^	private List<MeetingProbabilitySet> msets;$/;"	f	class:MaxPropDijkstraTest	file:
msg	src/test/MessageChecker.java	/^		private Message msg;$/;"	f	class:MessageChecker.MsgCheckerEvent	file:
msg	src/test/MessageTest.java	/^	private Message msg;$/;"	f	class:MessageTest	file:
msgAbortCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgAbortCheck;$/;"	f	class:EventLogPanel	file:
msgBufferTime	src/report/MessageStatsReport.java	/^	private List<Double> msgBufferTime;$/;"	f	class:MessageStatsReport	file:
msgChooser	src/gui/InfoPanel.java	/^	private JComboBox msgChooser;$/;"	f	class:InfoPanel	file:
msgColor	src/gui/playfield/MessageGraphic.java	/^	private Color msgColor = Color.RED;$/;"	f	class:MessageGraphic	file:
msgColor1	src/gui/playfield/NodeGraphic.java	/^	private static Color msgColor1 = Color.BLUE;$/;"	f	class:NodeGraphic	file:
msgColor2	src/gui/playfield/NodeGraphic.java	/^	private static Color msgColor2 = Color.GREEN;$/;"	f	class:NodeGraphic	file:
msgColor3	src/gui/playfield/NodeGraphic.java	/^	private static Color msgColor3 = Color.RED;$/;"	f	class:NodeGraphic	file:
msgCreateCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgCreateCheck;$/;"	f	class:EventLogPanel	file:
msgDeliveredCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgDeliveredCheck;$/;"	f	class:EventLogPanel	file:
msgDropCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgDropCheck;$/;"	f	class:EventLogPanel	file:
msgFromNode	src/core/Connection.java	/^	protected DTNHost msgFromNode;$/;"	f	class:Connection
msgId1	src/test/AbstractRouterTest.java	/^	protected static final String msgId1 = "MSG_ID1";$/;"	f	class:AbstractRouterTest
msgId2	src/test/AbstractRouterTest.java	/^	protected static final String msgId2 = "MSG_ID2";$/;"	f	class:AbstractRouterTest
msgId3	src/test/AbstractRouterTest.java	/^	protected static final String msgId3 = "MSG_ID3";$/;"	f	class:AbstractRouterTest
msgId4	src/test/AbstractRouterTest.java	/^	protected static final String msgId4 = "MSG_ID4";$/;"	f	class:AbstractRouterTest
msgId5	src/test/AbstractRouterTest.java	/^	protected static final String msgId5 = "MSG_ID5";$/;"	f	class:AbstractRouterTest
msgInterval	src/input/MessageEventGenerator.java	/^	private int[] msgInterval;$/;"	f	class:MessageEventGenerator	file:
msgListeners	src/core/DTNHost.java	/^	private List<MessageListener> msgListeners;$/;"	f	class:DTNHost	file:
msgListeners	src/test/TestUtils.java	/^	private List<MessageListener> msgListeners;$/;"	f	class:TestUtils	file:
msgOnFly	src/core/Connection.java	/^	protected Message msgOnFly;$/;"	f	class:Connection
msgRelayCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgRelayCheck;$/;"	f	class:EventLogPanel	file:
msgRemoveCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgRemoveCheck;$/;"	f	class:EventLogPanel	file:
msgTime	src/input/MessageEventGenerator.java	/^	protected double[] msgTime;$/;"	f	class:MessageEventGenerator
msgTimes	src/test/ExternalEventsQueueTest.java	/^	private final double msgTimes[] = {1000.000, 1533.405, 1542.000,$/;"	f	class:ExternalEventsQueueTest	file:
msgTransferStartCheck	src/gui/EventLogPanel.java	/^	private EventLogControl msgTransferStartCheck;$/;"	f	class:EventLogPanel	file:
msgTtl	src/routing/MessageRouter.java	/^	protected int msgTtl;$/;"	f	class:MessageRouter
msgsent	src/core/VBRConnection.java	/^	private int msgsent;$/;"	f	class:VBRConnection	file:
msgsize	src/core/VBRConnection.java	/^	private int msgsize;$/;"	f	class:VBRConnection	file:
myinstance	src/core/SimScenario.java	/^	private static SimScenario myinstance=null;$/;"	f	class:SimScenario	file:
n1	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n1 = newNode(0,0);$/;"	f	class:DijkstraPathFinderTest	file:
n1	src/test/MapBasedMovementTest.java	/^	private MapNode n1;$/;"	f	class:MapBasedMovementTest	file:
n1	src/test/MapNodeTest.java	/^	private MapNode n1,n2,n3,n4;$/;"	f	class:MapNodeTest	file:
n10c	src/test/WKTReaderTest.java	/^	private Coord n10c = new Coord(5,3);$/;"	f	class:WKTReaderTest	file:
n11c	src/test/WKTReaderTest.java	/^	private Coord n11c = new Coord(3,5);$/;"	f	class:WKTReaderTest	file:
n1c	src/test/WKTReaderTest.java	/^	private Coord n1c = new Coord(1,1);$/;"	f	class:WKTReaderTest	file:
n2	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n2 = newNode(10,0);$/;"	f	class:DijkstraPathFinderTest	file:
n2	src/test/MapBasedMovementTest.java	/^	private MapNode n2;$/;"	f	class:MapBasedMovementTest	file:
n2	src/test/MapNodeTest.java	/^	private MapNode n1,n2,n3,n4;$/;"	f	class:MapNodeTest	file:
n2c	src/test/WKTReaderTest.java	/^	private Coord n2c = new Coord(2,1);$/;"	f	class:WKTReaderTest	file:
n3	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n3 = newNode(20,0);$/;"	f	class:DijkstraPathFinderTest	file:
n3	src/test/MapNodeTest.java	/^	private MapNode n1,n2,n3,n4;$/;"	f	class:MapNodeTest	file:
n4	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n4 = newNode(0,10);$/;"	f	class:DijkstraPathFinderTest	file:
n4	src/test/MapNodeTest.java	/^	private MapNode n1,n2,n3,n4;$/;"	f	class:MapNodeTest	file:
n5	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n5 = newNode(10,10);$/;"	f	class:DijkstraPathFinderTest	file:
n6	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n6 = newNode(15,10);$/;"	f	class:DijkstraPathFinderTest	file:
n6	src/test/MapBasedMovementTest.java	/^	private MapNode n6;$/;"	f	class:MapBasedMovementTest	file:
n7	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n7 = newNode(20,10);$/;"	f	class:DijkstraPathFinderTest	file:
n8	src/test/DijkstraPathFinderTest.java	/^	private final MapNode n8 = newNode(25,10);$/;"	f	class:DijkstraPathFinderTest	file:
n9c	src/test/WKTReaderTest.java	/^	private Coord n9c = new Coord(3,3);$/;"	f	class:WKTReaderTest	file:
name	src/core/DTNHost.java	/^	private String name;$/;"	f	class:DTNHost	file:
name	src/core/SimScenario.java	/^	private String name;$/;"	f	class:SimScenario	file:
namespace	src/core/Settings.java	/^	private String namespace = null; \/\/ namespace to look the settings from$/;"	f	class:Settings	file:
needsRehash	src/movement/map/SimMap.java	/^	private boolean needsRehash = false;$/;"	f	class:SimMap	file:
neighbors	src/movement/map/MapNode.java	/^	private Vector<MapNode> neighbors;$/;"	f	class:MapNode	file:
net	src/core/DTNHost.java	/^	private List<NetworkInterface> net;$/;"	f	class:DTNHost	file:
newDestination	src/core/MovementListener.java	/^	public void newDestination(DTNHost host, Coord destination, double speed);$/;"	m	interface:MovementListener
newDestination	src/report/MovementListenerTestReport.java	/^	public void newDestination(DTNHost host, Coord destination, double speed) {$/;"	m	class:MovementListenerTestReport
newDestination	src/report/MovementNs2Report.java	/^	public void newDestination(DTNHost host, Coord dst, double speed) {$/;"	m	class:MovementNs2Report
newDestination	src/test/MovementListenerTest.java	/^		public void newDestination($/;"	m	class:MovementListenerTest.MovementReport
newEvent	src/report/Report.java	/^	protected void newEvent() {$/;"	m	class:Report
newMessage	src/core/MessageListener.java	/^	public void newMessage(Message m);$/;"	m	interface:MessageListener
newMessage	src/gui/EventLogPanel.java	/^	public void newMessage(Message m) {$/;"	m	class:EventLogPanel
newMessage	src/report/CreatedMessagesReport.java	/^	public void newMessage(Message m) {$/;"	m	class:CreatedMessagesReport
newMessage	src/report/DTN2Reporter.java	/^	public void newMessage(Message m) {}$/;"	m	class:DTN2Reporter
newMessage	src/report/DeliveredMessagesReport.java	/^	public void newMessage(Message m) {$/;"	m	class:DeliveredMessagesReport
newMessage	src/report/DistanceDelayReport.java	/^	public void newMessage(Message m) {$/;"	m	class:DistanceDelayReport
newMessage	src/report/EventLogReport.java	/^	public void newMessage(Message m) {$/;"	m	class:EventLogReport
newMessage	src/report/MessageDelayReport.java	/^	public void newMessage(Message m) {$/;"	m	class:MessageDelayReport
newMessage	src/report/MessageDeliveryReport.java	/^	public void newMessage(Message m) {$/;"	m	class:MessageDeliveryReport
newMessage	src/report/MessageGraphvizReport.java	/^	public void newMessage(Message m) {$/;"	m	class:MessageGraphvizReport
newMessage	src/report/MessageReport.java	/^	public void newMessage(Message m) {}$/;"	m	class:MessageReport
newMessage	src/report/MessageStatsReport.java	/^	public void newMessage(Message m) {$/;"	m	class:MessageStatsReport
newMessage	src/test/EpidemicRouterTest.java	/^	private void newMessage(String id, DTNHost from, DTNHost to) {$/;"	m	class:EpidemicRouterTest	file:
newMessage	src/test/MessageChecker.java	/^	public void newMessage(Message m) {$/;"	m	class:MessageChecker
newNode	src/test/DijkstraPathFinderTest.java	/^	private MapNode newNode(double x, double y) {$/;"	m	class:DijkstraPathFinderTest	file:
newOrders	src/movement/ExtendedMovementModel.java	/^	public abstract boolean newOrders();$/;"	m	class:ExtendedMovementModel
newOrders	src/movement/WorkingDayMovement.java	/^	public boolean newOrders() {$/;"	m	class:WorkingDayMovement
newfile	addPoints.py	/^			newfile = filename + "_st_" + str(num) + ".txt"$/;"	v
newfile	writePoints.py	/^            newfile = sys.argv[5]$/;"	v
next	src/test/MessageChecker.java	/^	public boolean next() {$/;"	m	class:MessageChecker
nextAddress	src/core/DTNHost.java	/^	private static int nextAddress = 0;$/;"	f	class:DTNHost	file:
nextEvent	src/input/DTN2Events.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:DTN2Events
nextEvent	src/input/EventQueue.java	/^	public ExternalEvent nextEvent();$/;"	m	interface:EventQueue
nextEvent	src/input/ExternalEventsQueue.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:ExternalEventsQueue
nextEvent	src/input/MessageBurstGenerator.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:MessageBurstGenerator
nextEvent	src/input/MessageEventGenerator.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:MessageEventGenerator
nextEvent	src/input/OneFromEachMessageGenerator.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:OneFromEachMessageGenerator
nextEvent	src/input/OneToEachMessageGenerator.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:OneToEachMessageGenerator
nextEvent	src/input/ScheduledUpdatesQueue.java	/^	private ExternalEvent nextEvent;$/;"	f	class:ScheduledUpdatesQueue	file:
nextEvent	src/input/ScheduledUpdatesQueue.java	/^	public ExternalEvent nextEvent() {$/;"	m	class:ScheduledUpdatesQueue
nextEventIndex	src/input/ExternalEventsQueue.java	/^	private int nextEventIndex;$/;"	f	class:ExternalEventsQueue	file:
nextEventQueue	src/core/World.java	/^	private EventQueue nextEventQueue;$/;"	f	class:World	file:
nextEventsTime	src/input/DTN2Events.java	/^	public double nextEventsTime() {$/;"	m	class:DTN2Events
nextEventsTime	src/input/EventQueue.java	/^	public double nextEventsTime();$/;"	m	interface:EventQueue
nextEventsTime	src/input/ExternalEventsQueue.java	/^	public double nextEventsTime() {$/;"	m	class:ExternalEventsQueue
nextEventsTime	src/input/MessageEventGenerator.java	/^	protected double nextEventsTime = 0;$/;"	f	class:MessageEventGenerator
nextEventsTime	src/input/MessageEventGenerator.java	/^	public double nextEventsTime() {$/;"	m	class:MessageEventGenerator
nextEventsTime	src/input/ScheduledUpdatesQueue.java	/^	public double nextEventsTime() {$/;"	m	class:ScheduledUpdatesQueue
nextFromOffset	src/input/MessageBurstGenerator.java	/^	private int nextFromOffset;$/;"	f	class:MessageBurstGenerator	file:
nextID	src/movement/BusMovement.java	/^	private static int nextID = 0;$/;"	f	class:BusMovement	file:
nextID	src/movement/BusTravellerMovement.java	/^	private static int nextID = 0;$/;"	f	class:BusTravellerMovement	file:
nextID	src/movement/EveningActivityMovement.java	/^	private static int nextID = 0;$/;"	f	class:EveningActivityMovement	file:
nextPath	src/movement/BusTravellerMovement.java	/^	private Path nextPath;$/;"	f	class:BusTravellerMovement	file:
nextPath	src/movement/LinearMovement.java	/^	private Path nextPath;$/;"	f	class:LinearMovement	file:
nextPathAvailable	src/movement/ExternalMovement.java	/^	public double nextPathAvailable() {$/;"	m	class:ExternalMovement
nextPathAvailable	src/movement/ExternalPathMovement.java	/^	public double nextPathAvailable() {$/;"	m	class:ExternalPathMovement
nextPathAvailable	src/movement/GridLocation.java	/^	public double nextPathAvailable() {$/;"	m	class:GridLocation
nextPathAvailable	src/movement/LinearFormation.java	/^	public double nextPathAvailable() {$/;"	m	class:LinearFormation
nextPathAvailable	src/movement/LinearMovement.java	/^	public double nextPathAvailable() {$/;"	m	class:LinearMovement
nextPathAvailable	src/movement/MovementModel.java	/^	public double nextPathAvailable() {$/;"	m	class:MovementModel
nextPathAvailable	src/movement/StationaryMovement.java	/^	public double nextPathAvailable() {$/;"	m	class:StationaryMovement
nextPathAvailable	src/test/StationaryMovement.java	/^	public double nextPathAvailable() {$/;"	m	class:StationaryMovement
nextQueueEventTime	src/core/World.java	/^	private double nextQueueEventTime;$/;"	f	class:World	file:
nextRouteIndex	src/movement/MapRouteMovement.java	/^	private Integer nextRouteIndex = null;$/;"	f	class:MapRouteMovement	file:
nextSampleIndex	src/routing/MaxPropRouter.java	/^	private int nextSampleIndex = 0;$/;"	f	class:MaxPropRouter	file:
nextSampleIndex	src/routing/MaxPropRouterWithEstimation.java	/^	private int nextSampleIndex = 0;$/;"	f	class:MaxPropRouterWithEstimation	file:
nextStop	src/movement/map/MapRoute.java	/^	public MapNode nextStop() {$/;"	m	class:MapRoute
nextTimeToMove	src/core/DTNHost.java	/^	private double nextTimeToMove;$/;"	f	class:DTNHost	file:
nextToOffset	src/input/MessageBurstGenerator.java	/^	private int nextToOffset;$/;"	f	class:MessageBurstGenerator	file:
nextTrips	src/movement/EveningActivityControlSystem.java	/^	private EveningTrip[] nextTrips;$/;"	f	class:EveningActivityControlSystem	file:
nextType	src/input/WKTReader.java	/^	protected String nextType() throws IOException {$/;"	m	class:WKTReader
nextUniqueId	src/core/Message.java	/^	private static int nextUniqueId;$/;"	f	class:Message	file:
nextWpIndex	src/movement/Path.java	/^	private int nextWpIndex;$/;"	f	class:Path	file:
nf	addPoints.py	/^			nf = open(newfile,'w')$/;"	v
node	src/gui/playfield/NodeGraphic.java	/^	private DTNHost node;$/;"	f	class:NodeGraphic	file:
nodeArray	src/report/MovementNs2Report.java	/^	private String nodeArray;$/;"	f	class:MovementNs2Report	file:
nodeCount	src/movement/GridLocation.java	/^	private int nodeCount;$/;"	f	class:GridLocation	file:
nodeCount	src/movement/LinearFormation.java	/^	private int nodeCount; \/** how many nodes in this formation *\/$/;"	f	class:LinearFormation	file:
nodeCount	src/movement/LinearMovement.java	/^	private int nodeCount; \/** how many nodes in this formation *\/$/;"	f	class:LinearMovement	file:
nodeNames	src/report/RadiusOfGyrationReport.java	/^	private final String[] nodeNames;$/;"	f	class:RadiusOfGyrationReport	file:
nodeRelationships	src/report/UniqueEncountersReport.java	/^	private int[][] nodeRelationships;$/;"	f	class:UniqueEncountersReport	file:
nodeType	src/input/WKTMapReader.java	/^	private int nodeType = -1;$/;"	f	class:WKTMapReader	file:
nodes	src/input/WKTMapReader.java	/^	private Hashtable<Coord, MapNode> nodes;$/;"	f	class:WKTMapReader	file:
nodes	src/movement/map/SimMap.java	/^	private ArrayList<MapNode> nodes;$/;"	f	class:SimMap	file:
nodesMap	src/movement/map/SimMap.java	/^	private Map<Coord, MapNode> nodesMap;$/;"	f	class:SimMap	file:
nodesPanel	src/gui/NodeChooser.java	/^	private JPanel nodesPanel;$/;"	f	class:NodeChooser	file:
normalize	src/input/ExternalMovementReader.java	/^	private boolean normalize;$/;"	f	class:ExternalMovementReader	file:
normalize	src/input/ExternalPathMovementReader.java	/^	private boolean normalize = true;$/;"	f	class:ExternalPathMovementReader	file:
notifyConnectionListeners	src/core/NetworkInterface.java	/^	private void notifyConnectionListeners(int type, DTNHost otherHost) {$/;"	m	class:NetworkInterface	file:
notifyKey	src/test/ModuleCommunicationBusTest.java	/^	private String notifyKey;$/;"	f	class:ModuleCommunicationBusTest	file:
notifyListeners	src/core/ModuleCommunicationBus.java	/^	private void notifyListeners(String key, Object newValue) {$/;"	m	class:ModuleCommunicationBus	file:
notifyValue	src/test/ModuleCommunicationBusTest.java	/^	private Object notifyValue;$/;"	f	class:ModuleCommunicationBusTest	file:
np	addPoints.py	/^import numpy as np$/;"	i
np	writePoints.py	/^import numpy as np$/;"	i
nrOfMeetingSpots	src/movement/EveningActivityMovement.java	/^	private static int nrOfMeetingSpots = 10;$/;"	f	class:EveningActivityMovement	file:
nrOfOffices	src/movement/OfficeActivityMovement.java	/^	private static int nrOfOffices = 50;$/;"	f	class:OfficeActivityMovement	file:
nrof	src/test/ConnectionTest.java	/^	private int nrof = 5;$/;"	f	class:ConnectionTest	file:
nrofAborted	src/report/MessageStatsReport.java	/^	private int nrofAborted;$/;"	f	class:MessageStatsReport	file:
nrofConnect	src/test/TestDTNHost.java	/^	public int nrofConnect = 0;$/;"	f	class:TestDTNHost
nrofConnections	src/report/AdjacencyGraphvizReport.java	/^		private int nrofConnections;$/;"	f	class:AdjacencyGraphvizReport.ConnectionInfo	file:
nrofContacts	src/report/ContactTimesReport.java	/^	private Vector<Integer> nrofContacts;$/;"	f	class:ContactTimesReport	file:
nrofCreated	src/report/MessageDelayReport.java	/^	private int nrofCreated;$/;"	f	class:MessageDelayReport	file:
nrofCreated	src/report/MessageStatsReport.java	/^	private int nrofCreated;$/;"	f	class:MessageStatsReport	file:
nrofDelivered	src/report/MessageStatsReport.java	/^	private int nrofDelivered;$/;"	f	class:MessageStatsReport	file:
nrofDropped	src/report/MessageStatsReport.java	/^	private int nrofDropped;$/;"	f	class:MessageStatsReport	file:
nrofGroups	src/core/SimScenario.java	/^	int nrofGroups;$/;"	f	class:SimScenario
nrofHosts	src/report/MessageAvailabilityReport.java	/^	private int nrofHosts;$/;"	f	class:MessageAvailabilityReport	file:
nrofMapFilesRead	src/movement/MapBasedMovement.java	/^	private int nrofMapFilesRead = 0;$/;"	f	class:MapBasedMovement	file:
nrofMapNodes	src/test/PointsOfInterestTest.java	/^	private int nrofMapNodes;$/;"	f	class:PointsOfInterestTest	file:
nrofPreload	src/input/ExternalEventsQueue.java	/^	private int nrofPreload;$/;"	f	class:ExternalEventsQueue	file:
nrofPreload	src/movement/ExternalMovement.java	/^	private static double nrofPreload = 10;$/;"	f	class:ExternalMovement	file:
nrofRelayed	src/report/MessageStatsReport.java	/^	private int nrofRelayed;$/;"	f	class:MessageStatsReport	file:
nrofRemoved	src/report/MessageStatsReport.java	/^	private int nrofRemoved;$/;"	f	class:MessageStatsReport	file:
nrofResponseDelivered	src/report/MessageStatsReport.java	/^	private int nrofResponseDelivered;$/;"	f	class:MessageStatsReport	file:
nrofResponseReqCreated	src/report/MessageStatsReport.java	/^	private int nrofResponseReqCreated;$/;"	f	class:MessageStatsReport	file:
nrofSamples	src/routing/ProphetRouterWithEstimation.java	/^	private int nrofSamples;$/;"	f	class:ProphetRouterWithEstimation	file:
nrofSamplesENC	src/routing/MaxPropRouterWithEstimation.java	/^	private int nrofSamplesENC;$/;"	f	class:MaxPropRouterWithEstimation	file:
nrofSamplesIET	src/routing/MaxPropRouterWithEstimation.java	/^	private int nrofSamplesIET;$/;"	f	class:MaxPropRouterWithEstimation	file:
nrofServices	src/core/DTNHost.java	/^    private static int nrofServices = 0;$/;"	f	class:DTNHost	file:
nrofServices	src/core/SimScenario.java	/^	int nrofServices;$/;"	f	class:SimScenario
nrofStarted	src/report/MessageStatsReport.java	/^	private int nrofStarted;$/;"	f	class:MessageStatsReport	file:
nrofTotENC	src/routing/MaxPropRouterWithEstimation.java	/^	private int nrofTotENC;$/;"	f	class:MaxPropRouterWithEstimation	file:
nrofUpdate	src/test/TestDTNHost.java	/^	public int nrofUpdate = 0;$/;"	f	class:TestDTNHost
nrofVMs	src/core/DTNHost.java	/^    private int nrofVMs;$/;"	f	class:DTNHost	file:
nsCmd	src/report/MovementNs2Report.java	/^	private String nsCmd;$/;"	f	class:MovementNs2Report	file:
num	addPoints.py	/^			num = len(lines)$/;"	v
num	writePoints.py	/^            num = int(sys.argv[4])$/;"	v
number	src/core/ArithmeticCondition.java	/^	private double number;$/;"	f	class:ArithmeticCondition	file:
numberOfTransmissions	src/interfaces/InterferenceLimitedInterface.java	/^	protected int numberOfTransmissions;$/;"	f	class:InterferenceLimitedInterface
officeLocation	src/movement/OfficeActivityMovement.java	/^	private Coord officeLocation;$/;"	f	class:OfficeActivityMovement	file:
officeMaxWaitTime	src/movement/OfficeActivityMovement.java	/^	private double officeMaxWaitTime;$/;"	f	class:OfficeActivityMovement	file:
officeMinWaitTime	src/movement/OfficeActivityMovement.java	/^	private double officeMinWaitTime;$/;"	f	class:OfficeActivityMovement	file:
officeWaitTimeParetoCoeff	src/movement/OfficeActivityMovement.java	/^	private double officeWaitTimeParetoCoeff;$/;"	f	class:OfficeActivityMovement	file:
offset	src/movement/GridLocation.java	/^	private double offset;$/;"	f	class:GridLocation	file:
offset	src/movement/map/SimMap.java	/^	private Coord offset;$/;"	f	class:SimMap	file:
okMapNodeTypes	src/movement/MapBasedMovement.java	/^	private int [] okMapNodeTypes;$/;"	f	class:MapBasedMovement	file:
okMapNodeTypes	src/movement/map/PointsOfInterest.java	/^	private int [] okMapNodeTypes;$/;"	f	class:PointsOfInterest	file:
okMapNodes	src/movement/map/DijkstraPathFinder.java	/^	private int [] okMapNodes;$/;"	f	class:DijkstraPathFinder	file:
oldContactTimes	src/report/TotalContactTimeReport.java	/^	private double oldContactTimes;$/;"	f	class:TotalContactTimeReport	file:
oldNamespaces	src/core/Settings.java	/^	private Stack<String> oldNamespaces;$/;"	f	class:Settings	file:
oldSpeedIndex	src/gui/GUIControls.java	/^	private int oldSpeedIndex; \/\/ what speed was selected before FFW$/;"	f	class:GUIControls	file:
oldTransmitRange	src/core/NetworkInterface.java	/^	protected double oldTransmitRange;$/;"	f	class:NetworkInterface
onlyAverage	src/report/NodeDensityReport.java	/^	private final boolean onlyAverage;$/;"	f	class:NodeDensityReport	file:
operator	src/core/ArithmeticCondition.java	/^	private char operator;$/;"	f	class:ArithmeticCondition	file:
optimizer	src/core/NetworkInterface.java	/^	protected ConnectivityOptimizer optimizer = null;$/;"	f	class:NetworkInterface
options	toolkit/ccdfPlotter.pl	/^options:$/;"	l
options	toolkit/dieselnetConverter.pl	/^options:$/;"	l
options	toolkit/getAverages.pl	/^options:$/;"	l
options	toolkit/getStats.pl	/^options:$/;"	l
options	toolkit/getStatsAverages.pl	/^options:$/;"	l
options	toolkit/messageAvailabilityAnalyzer.pl	/^options:$/;"	l
options	toolkit/messageAvailabilityAnalyzer2.pl	/^options:$/;"	l
options	toolkit/messageCopyCountAnalyzer.pl	/^options:$/;"	l
options	toolkit/messageCopyCountPlotter.pl	/^options:$/;"	l
options	toolkit/messageLocationAnimator.pl	/^options:$/;"	l
options	toolkit/splotEnergy.pl	/^options:$/;"	l
oracle	src/routing/schedule/ScheduleDijkstra.java	/^	private ScheduleOracle oracle;$/;"	f	class:ScheduleDijkstra	file:
oracle	src/test/ScheduleDijkstraTest.java	/^	ScheduleOracle oracle;$/;"	f	class:ScheduleDijkstraTest
out	src/core/Debug.java	/^	private static PrintStream out = System.out;$/;"	f	class:Debug	file:
out	src/core/Settings.java	/^	private static PrintStream out = null;$/;"	f	class:Settings	file:
out	src/report/Report.java	/^	protected PrintWriter out;$/;"	f	class:Report
out	src/test/ActivenessHandlerTest.java	/^	private double out = 7.0;$/;"	f	class:ActivenessHandlerTest	file:
outFile	src/test/AdjacencyGraphvizReportTest.java	/^	private File outFile;$/;"	f	class:AdjacencyGraphvizReportTest	file:
outFile	src/test/DistanceDelayReportTest.java	/^	File outFile;$/;"	f	class:DistanceDelayReportTest
outFile	src/test/MessageGraphvizReportTest.java	/^	private File outFile;$/;"	f	class:MessageGraphvizReportTest	file:
outFile	src/test/TotalContactTimeReportTest.java	/^	private File outFile;$/;"	f	class:TotalContactTimeReportTest	file:
outFileName	src/report/Report.java	/^	private String outFileName;$/;"	f	class:Report	file:
outputGnuplotPrefix	src/report/NodeDensityReport.java	/^	private void outputGnuplotPrefix() {$/;"	m	class:NodeDensityReport	file:
outputGnuplotSuffix	src/report/NodeDensityReport.java	/^	private void outputGnuplotSuffix(final int sampleCount) {$/;"	m	class:NodeDensityReport	file:
outputInterval	src/report/Report.java	/^	private double outputInterval;$/;"	f	class:Report	file:
outputRawData	src/report/JumpSizeDistributionReport.java	/^	private final boolean outputRawData;$/;"	f	class:JumpSizeDistributionReport	file:
outputSetting	src/core/Settings.java	/^	private static void outputSetting(String setting) {$/;"	m	class:Settings	file:
overlayGraphics	src/gui/playfield/PlayField.java	/^	private List<PlayFieldGraphic> overlayGraphics;$/;"	f	class:PlayField	file:
ownCarProb	src/movement/WorkingDayMovement.java	/^	private double ownCarProb;$/;"	f	class:WorkingDayMovement	file:
p	src/core/Debug.java	/^	public static void p(String txt) {$/;"	m	class:Debug
p	src/core/Debug.java	/^	public static void p(String txt, int level) {$/;"	m	class:Debug
p	src/core/Debug.java	/^	public static void p(String txt, int level, boolean timestamp) {$/;"	m	class:Debug
p_range	src/movement/ClusterMovement.java	/^	private double	p_range = 100.0;$/;"	f	class:ClusterMovement	file:
p_x_center	src/movement/ClusterMovement.java	/^	private int		p_x_center = 100, p_y_center = 100;$/;"	f	class:ClusterMovement	file:
p_y_center	src/movement/ClusterMovement.java	/^	private int		p_x_center = 100, p_y_center = 100;$/;"	f	class:ClusterMovement	file:
paint	src/gui/playfield/PlayField.java	/^	public void paint(Graphics g) {$/;"	m	class:PlayField
paretoRNG	src/movement/OfficeActivityMovement.java	/^	private ParetoRNG paretoRNG;$/;"	f	class:OfficeActivityMovement	file:
parseActiveTimes	src/util/ActivenessHandler.java	/^	private Queue<TimeRange> parseActiveTimes(Settings s) {$/;"	m	class:ActivenessHandler	file:
parseArgs	toolkit/Common.pm	/^sub parseArgs {$/;"	s
parseDouble	src/core/Settings.java	/^	private double parseDouble(String value, String setting) {$/;"	m	class:Settings	file:
parseDoubles	src/core/Settings.java	/^	private double[] parseDoubles(String[] strings, String name) {$/;"	m	class:Settings	file:
parseError	src/input/DTN2Events.java	/^		public boolean parseError(String reason) {$/;"	m	class:DTN2Events.ParserHandler
parseLine	toolkit/transimsParser.pl	/^sub parseLine {$/;"	s
parseLineString	src/input/WKTReader.java	/^	protected List<Coord> parseLineString(String line) {$/;"	m	class:WKTReader
parseLong	src/core/Settings.java	/^	private long parseLong(String value, String setting) {$/;"	m	class:Settings	file:
parseMultilinestring	src/input/WKTReader.java	/^	protected List<List<Coord>> parseMultilinestring()$/;"	m	class:WKTReader
parseNrofRuns	src/core/DTNSim.java	/^	private static int[] parseNrofRuns(String arg) {$/;"	m	class:DTNSim	file:
parsePoint	src/input/WKTReader.java	/^	protected Coord parsePoint() throws IOException {$/;"	m	class:WKTReader
parseRunSetting	src/core/Settings.java	/^	private static String parseRunSetting(String value) {$/;"	m	class:Settings	file:
parseWKT	writePoints.py	/^def parseWKT(filename):$/;"	f
passive	src/applications/PingApplication.java	/^	private boolean passive = false;$/;"	f	class:PingApplication	file:
path	src/core/DTNHost.java	/^	private Path path;$/;"	f	class:DTNHost	file:
path	src/core/Message.java	/^	private List<DTNHost> path;$/;"	f	class:Message	file:
path	src/movement/EveningTrip.java	/^	private Path path;$/;"	f	class:EveningTrip	file:
pathFinder	src/movement/BusTravellerMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:BusTravellerMovement	file:
pathFinder	src/movement/CarMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:CarMovement	file:
pathFinder	src/movement/EveningActivityMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:EveningActivityMovement	file:
pathFinder	src/movement/HomeActivityMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:HomeActivityMovement	file:
pathFinder	src/movement/MapRouteMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:MapRouteMovement	file:
pathFinder	src/movement/OfficeActivityMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:OfficeActivityMovement	file:
pathFinder	src/movement/ShortestPathMapBasedMovement.java	/^	private DijkstraPathFinder pathFinder;$/;"	f	class:ShortestPathMapBasedMovement	file:
pathQueue	src/movement/ExternalMovement.java	/^	private Queue<Tuple<Double, Path>> pathQueue;$/;"	f	class:ExternalMovement	file:
paths	src/input/ExternalPathMovementReader.java	/^	private List<List<List<Entry>>> paths = null;$/;"	f	class:ExternalPathMovementReader	file:
paths	src/movement/ExternalPathMovement.java	/^	private List<List<ExternalPathMovementReader.Entry>> paths;$/;"	f	class:ExternalPathMovement	file:
pause	src/gui/EventLogControl.java	/^	private JCheckBox pause;$/;"	f	class:EventLogControl	file:
pauseAllCheck	src/gui/EventLogControlPanel.java	/^	private JCheckBox pauseAllCheck;$/;"	f	class:EventLogControlPanel	file:
pauseOnEvent	src/gui/EventLogControl.java	/^	public boolean pauseOnEvent() {$/;"	m	class:EventLogControl
paused	src/gui/GUIControls.java	/^	private boolean paused;$/;"	f	class:GUIControls	file:
pf	src/gui/GUIControls.java	/^	private PlayField pf;$/;"	f	class:GUIControls	file:
pingSize	src/applications/PingApplication.java	/^	private int		pingSize=1;$/;"	f	class:PingApplication	file:
pingsReceived	src/report/PingAppReporter.java	/^	private int pingsSent=0, pingsReceived=0;$/;"	f	class:PingAppReporter	file:
pingsSent	src/report/PingAppReporter.java	/^	private int pingsSent=0, pingsReceived=0;$/;"	f	class:PingAppReporter	file:
pinit	src/routing/ProphetRouterWithEstimation.java	/^	private double pinit;$/;"	f	class:ProphetRouterWithEstimation	file:
playButton	src/gui/GUIControls.java	/^	private JButton playButton;$/;"	f	class:GUIControls	file:
playFieldScroll	src/gui/MainWindow.java	/^	private JScrollPane playFieldScroll;$/;"	f	class:MainWindow	file:
playUntilButton	src/gui/GUIControls.java	/^	private JButton playUntilButton;$/;"	f	class:GUIControls	file:
playUntilTime	src/gui/GUIControls.java	/^	private double playUntilTime;$/;"	f	class:GUIControls	file:
poiLists	src/movement/map/PointsOfInterest.java	/^	private ArrayList<List<MapNode>> poiLists;$/;"	f	class:PointsOfInterest	file:
poiProbs	src/movement/map/PointsOfInterest.java	/^	private List<Tuple<Double, Integer>> poiProbs;$/;"	f	class:PointsOfInterest	file:
points	writePoints.py	/^                points = generate_points(pos, distance)$/;"	v
pois	src/movement/ShortestPathMapBasedMovement.java	/^	private PointsOfInterest pois;$/;"	f	class:ShortestPathMapBasedMovement	file:
pois	src/test/PointsOfInterestTest.java	/^	private PointsOfInterest pois;$/;"	f	class:PointsOfInterestTest	file:
policy	src/routing/ActiveRouter.java	/^	private MessageTransferAcceptPolicy policy;$/;"	f	class:ActiveRouter	file:
pongSize	src/applications/PingApplication.java	/^	private int		pongSize=1;$/;"	f	class:PingApplication	file:
pongsReceived	src/report/PingAppReporter.java	/^	private int pongsSent=0, pongsReceived=0;$/;"	f	class:PingAppReporter	file:
pongsSent	src/report/PingAppReporter.java	/^	private int pongsSent=0, pongsReceived=0;$/;"	f	class:PingAppReporter	file:
pos	addPoints.py	/^			pos =[[0 for x in range(2)] for y in range((int)(num))]$/;"	v
pos	writePoints.py	/^                pos = parseWKT(filename)$/;"	v
precision	src/report/Report.java	/^	private int precision;$/;"	f	class:Report	file:
preds	src/routing/ProphetRouter.java	/^	private Map<DTNHost, Double> preds;$/;"	f	class:ProphetRouter	file:
preds	src/routing/ProphetRouterWithEstimation.java	/^	private Map<DTNHost, Double> preds;$/;"	f	class:ProphetRouterWithEstimation	file:
preds	src/routing/ProphetV2Router.java	/^	private Map<DTNHost, Double> preds;$/;"	f	class:ProphetV2Router	file:
prefix	src/report/Report.java	/^	private String prefix = "";$/;"	f	class:Report	file:
prevHops	src/routing/schedule/ScheduleDijkstra.java	/^	private Map<Integer, ScheduleEntry> prevHops;$/;"	f	class:ScheduleDijkstra	file:
prevNodes	src/movement/map/DijkstraPathFinder.java	/^	private Map<MapNode, MapNode> prevNodes;$/;"	f	class:DijkstraPathFinder	file:
prevNodes	src/routing/maxprop/MaxPropDijkstra.java	/^	private Map<Integer, Integer> prevNodes;$/;"	f	class:MaxPropDijkstra	file:
previousLocations	src/report/JumpSizeDistributionReport.java	/^	private final Coord[] previousLocations;$/;"	f	class:JumpSizeDistributionReport	file:
print	src/core/DTNSim.java	/^	private static void print(String txt) {$/;"	m	class:DTNSim	file:
print	src/ui/DTNSimTextUI.java	/^	private void print(String txt) {$/;"	m	class:DTNSimTextUI	file:
printHeader	src/report/DistanceDelayReport.java	/^	private void printHeader() {$/;"	m	class:DistanceDelayReport	file:
printLine	src/report/BufferOccupancyReport.java	/^	private void printLine(List<DTNHost> hosts) {$/;"	m	class:BufferOccupancyReport	file:
probSetMaxSize	src/routing/MaxPropRouter.java	/^    private static int probSetMaxSize;$/;"	f	class:MaxPropRouter	file:
probTakeOtherBus	src/movement/BusTravellerMovement.java	/^	private double probTakeOtherBus;$/;"	f	class:BusTravellerMovement	file:
probabilities	src/movement/BusTravellerMovement.java	/^		private double[] probabilities; \/\/ Probability to travel with bus$/;"	f	class:BusTravellerMovement.ContinueBusTripDecider	file:
probabilities	src/movement/BusTravellerMovement.java	/^	private double[] probabilities;$/;"	f	class:BusTravellerMovement	file:
probs	src/routing/MaxPropRouter.java	/^	private MeetingProbabilitySet probs;$/;"	f	class:MaxPropRouter	file:
probs	src/routing/MaxPropRouterWithEstimation.java	/^	private MeetingProbabilitySet probs;$/;"	f	class:MaxPropRouterWithEstimation	file:
probs	src/routing/maxprop/MaxPropDijkstra.java	/^	private Map<Integer, MeetingProbabilitySet> probs;$/;"	f	class:MaxPropDijkstra	file:
probs	src/routing/maxprop/MeetingProbabilitySet.java	/^	private Map<Integer, Double> probs;$/;"	f	class:MeetingProbabilitySet	file:
processAssertionError	src/gui/DTNSimGUI.java	/^	private void processAssertionError(AssertionError e) {$/;"	m	class:DTNSimGUI	file:
processEvent	src/gui/EventLogPanel.java	/^	private void processEvent(EventLogControl check, final String name,$/;"	m	class:EventLogPanel	file:
processEvent	src/input/ConnectionEvent.java	/^	public void processEvent(World world) {$/;"	m	class:ConnectionEvent
processEvent	src/input/ExternalEvent.java	/^	public void processEvent(World world) {$/;"	m	class:ExternalEvent
processEvent	src/input/MessageCreateEvent.java	/^	public void processEvent(World world) {$/;"	m	class:MessageCreateEvent
processEvent	src/input/MessageDeleteEvent.java	/^	public void processEvent(World world) {$/;"	m	class:MessageDeleteEvent
processEvent	src/input/MessageRelayEvent.java	/^	public void processEvent(World world) {$/;"	m	class:MessageRelayEvent
processEvent	src/report/EventLogReport.java	/^	private void processEvent(final String action, final DTNHost host1,$/;"	m	class:EventLogReport	file:
properties	src/core/Message.java	/^	private Map<String, Object> properties;$/;"	f	class:Message	file:
props	src/core/Settings.java	/^	protected static Properties props;$/;"	f	class:Settings
pt	src/core/Debug.java	/^	public static void pt(String txt) {$/;"	m	class:Debug
pt	src/core/Debug.java	/^	public static void pt(String txt, int level) {$/;"	m	class:Debug
ptavg	src/routing/ProphetRouterWithEstimation.java	/^	private double ptavg;$/;"	f	class:ProphetRouterWithEstimation	file:
put	src/movement/map/DijkstraPathFinder.java	/^		public void  put(MapNode node, double distance) {$/;"	m	class:DijkstraPathFinder.DistanceMap
put	src/routing/maxprop/MaxPropDijkstra.java	/^		public void  put(Integer node, double distance) {$/;"	m	class:MaxPropDijkstra.DistanceMap
put	src/routing/schedule/ScheduleDijkstra.java	/^		public void put(Integer node, double time) {$/;"	m	class:ScheduleDijkstra.TimeMap
putSetting	src/test/TestSettings.java	/^	public void putSetting(String key, String value) {$/;"	m	class:TestSettings
putToIncomingBuffer	src/routing/MessageRouter.java	/^	protected void putToIncomingBuffer(Message m, DTNHost from) {$/;"	m	class:MessageRouter
putToQueue	src/input/ScheduledUpdatesQueue.java	/^	private void putToQueue(ExternalEvent ee) {$/;"	m	class:ScheduledUpdatesQueue	file:
queue	src/input/ExternalEventsQueue.java	/^	private List<ExternalEvent> queue;$/;"	f	class:ExternalEventsQueue	file:
queue	src/test/MessageChecker.java	/^	private ArrayList<MsgCheckerEvent> queue;$/;"	f	class:MessageChecker	file:
queues	src/input/EventQueueHandler.java	/^	private List<EventQueue> queues;$/;"	f	class:EventQueueHandler	file:
r	src/test/AdjacencyGraphvizReportTest.java	/^	private AdjacencyGraphvizReport r;$/;"	f	class:AdjacencyGraphvizReportTest	file:
r	src/test/DijkstraPathFinderTest.java	/^	private DijkstraPathFinder r;$/;"	f	class:DijkstraPathFinderTest	file:
r	src/test/DistanceDelayReportTest.java	/^	private DistanceDelayReport r;$/;"	f	class:DistanceDelayReportTest	file:
r	src/test/ExternalMovementReaderTest.java	/^	private ExternalMovementReader r;$/;"	f	class:ExternalMovementReaderTest	file:
r	src/test/MessageGraphvizReportTest.java	/^	private MessageGraphvizReport r;$/;"	f	class:MessageGraphvizReportTest	file:
r	src/test/WKTPointReaderTest.java	/^	private WKTReader r;$/;"	f	class:WKTPointReaderTest	file:
r1	src/test/MaxPropRouterTest.java	/^	private MaxPropRouter r1,r2,r3,r4;$/;"	f	class:MaxPropRouterTest	file:
r2	src/test/MaxPropRouterTest.java	/^	private MaxPropRouter r1,r2,r3,r4;$/;"	f	class:MaxPropRouterTest	file:
r3	src/test/MaxPropRouterTest.java	/^	private MaxPropRouter r1,r2,r3,r4;$/;"	f	class:MaxPropRouterTest	file:
r4	src/test/MaxPropRouterTest.java	/^	private MaxPropRouter r1,r2,r3,r4;$/;"	f	class:MaxPropRouterTest	file:
random	writePoints.py	/^import random$/;"	i
randomCoord	src/movement/ClusterMovement.java	/^	protected Coord randomCoord() {$/;"	m	class:ClusterMovement
randomCoord	src/movement/RandomWaypoint.java	/^	protected Coord randomCoord() {$/;"	m	class:RandomWaypoint
randomGenerator	src/routing/ProphetV2Router.java	/^	Random randomGenerator = new Random();$/;"	f	class:ProphetV2Router
randomHost	src/applications/PingApplication.java	/^	private DTNHost randomHost() {$/;"	m	class:PingApplication	file:
rangeColor	src/gui/playfield/NodeGraphic.java	/^	private static Color rangeColor = Color.GREEN;$/;"	f	class:NodeGraphic	file:
readEvents	src/input/BinaryEventsReader.java	/^	public List<ExternalEvent> readEvents(int nrof) {$/;"	m	class:BinaryEventsReader
readEvents	src/input/ExternalEventsQueue.java	/^	private List<ExternalEvent> readEvents(int nrof) {$/;"	m	class:ExternalEventsQueue	file:
readEvents	src/input/ExternalEventsReader.java	/^	public List<ExternalEvent> readEvents(int nrof);$/;"	m	interface:ExternalEventsReader
readEvents	src/input/StandardEventsReader.java	/^	public List<ExternalEvent> readEvents(int nrof) {$/;"	m	class:StandardEventsReader
readLines	src/input/WKTReader.java	/^	public List<List<Coord>> readLines(File file) throws IOException {$/;"	m	class:WKTReader
readMap	src/movement/MapBasedMovement.java	/^	private SimMap readMap() {$/;"	m	class:MapBasedMovement	file:
readMorePaths	src/movement/ExternalMovement.java	/^	private static double readMorePaths() {$/;"	m	class:ExternalMovement	file:
readNestedContents	src/input/WKTReader.java	/^	public String readNestedContents() throws IOException {$/;"	m	class:WKTReader
readNestedContents	src/input/WKTReader.java	/^	public String readNestedContents(Reader r) throws IOException {$/;"	m	class:WKTReader
readNextMovements	src/input/ExternalMovementReader.java	/^	public List<Tuple<String, Coord>> readNextMovements() {$/;"	m	class:ExternalMovementReader
readOkMapNodeTypes	src/movement/MapBasedMovement.java	/^	private void readOkMapNodeTypes(Settings settings) {$/;"	m	class:MapBasedMovement	file:
readPoints	src/input/WKTReader.java	/^	public List<Coord> readPoints(File file) throws IOException {$/;"	m	class:WKTReader
readPoints	src/input/WKTReader.java	/^	public List<Coord> readPoints(Reader r) throws IOException {$/;"	m	class:WKTReader
readPois	src/movement/map/PointsOfInterest.java	/^	private void readPois(Settings s) {$/;"	m	class:PointsOfInterest	file:
readPoisOf	src/movement/map/PointsOfInterest.java	/^	private List<MapNode> readPoisOf(int index, Coord offset) {$/;"	m	class:PointsOfInterest	file:
readRoutes	src/movement/map/MapRoute.java	/^	public static List<MapRoute> readRoutes(String fileName, int type,$/;"	m	class:MapRoute
readWord	src/input/WKTReader.java	/^	protected String readWord(Reader r) throws IOException {$/;"	m	class:WKTReader
reader	src/input/ExternalEventsQueue.java	/^	private ExternalEventsReader reader;$/;"	f	class:ExternalEventsQueue	file:
reader	src/input/StandardEventsReader.java	/^	private BufferedReader reader;$/;"	f	class:StandardEventsReader	file:
reader	src/input/WKTReader.java	/^	private BufferedReader reader;$/;"	f	class:WKTReader	file:
reader	src/movement/ExternalMovement.java	/^	private static ExternalMovementReader reader;$/;"	f	class:ExternalMovement	file:
reader	src/test/WKTReaderTest.java	/^	private WKTMapReader reader;$/;"	f	class:WKTReaderTest	file:
ready	src/movement/EveningActivityMovement.java	/^	private boolean ready;$/;"	f	class:EveningActivityMovement	file:
ready	src/movement/OfficeActivityMovement.java	/^	private boolean ready;;$/;"	f	class:OfficeActivityMovement	file:
readyToShop	src/movement/EveningActivityMovement.java	/^	private boolean readyToShop;$/;"	f	class:EveningActivityMovement	file:
receiveMessage	src/core/DTNHost.java	/^	public int receiveMessage(Message m, DTNHost from) {$/;"	m	class:DTNHost
receiveMessage	src/routing/ActiveRouter.java	/^	public int receiveMessage(Message m, DTNHost from) {$/;"	m	class:ActiveRouter
receiveMessage	src/routing/MessageRouter.java	/^	public int receiveMessage(Message m, DTNHost from) {$/;"	m	class:MessageRouter
receiveMessage	src/routing/SprayAndWaitRouter.java	/^	public int receiveMessage(Message m, DTNHost from) {$/;"	m	class:SprayAndWaitRouter
receiveMessage	src/test/TestDTNHost.java	/^	public int receiveMessage(Message m, DTNHost from) {$/;"	m	class:TestDTNHost
recentMessages	src/routing/WaveRouter.java	/^	private Map<String, Double> recentMessages;$/;"	f	class:WaveRouter	file:
recvConditions	src/routing/util/MessageTransferAcceptPolicy.java	/^	private ArrayList<Tuple<String,ArithmeticCondition>> recvConditions = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
recvFrom	src/test/TestDTNHost.java	/^	public DTNHost recvFrom;$/;"	f	class:TestDTNHost
recvMessage	src/test/TestDTNHost.java	/^	public Message recvMessage;$/;"	f	class:TestDTNHost
reduceDiscoveryEnergy	src/routing/util/EnergyModel.java	/^	public void reduceDiscoveryEnergy() {$/;"	m	class:EnergyModel
reduceEnergy	src/routing/util/EnergyModel.java	/^	protected void reduceEnergy(double amount) {$/;"	m	class:EnergyModel
refGraphic	src/gui/playfield/PlayField.java	/^	private ScaleReferenceGraphic refGraphic;$/;"	f	class:PlayField	file:
refreshButton	src/gui/RoutingInfoWindow.java	/^	private JButton refreshButton;$/;"	f	class:RoutingInfoWindow	file:
refreshTimer	src/gui/NodeChooser.java	/^	private Timer refreshTimer;$/;"	f	class:NodeChooser	file:
refreshTimer	src/gui/RoutingInfoWindow.java	/^	private Timer refreshTimer;$/;"	f	class:RoutingInfoWindow	file:
regExp	src/gui/EventLogPanel.java	/^	private String regExp = null;$/;"	f	class:EventLogPanel	file:
regMsg	src/input/DTN2Events.java	/^	private void regMsg(Bundle bundle) {$/;"	m	class:DTN2Events	file:
registerBus	src/movement/BusControlSystem.java	/^	public void registerBus(BusMovement bus) {$/;"	m	class:BusControlSystem
registerForReset	src/core/DTNSim.java	/^	public static void registerForReset(String className) {$/;"	m	class:DTNSim
registerTraveller	src/movement/BusControlSystem.java	/^	public void registerTraveller(BusTravellerMovement traveller) {$/;"	m	class:BusControlSystem
relax	src/movement/map/DijkstraPathFinder.java	/^	private void relax(MapNode node) {$/;"	m	class:DijkstraPathFinder	file:
relax	src/routing/maxprop/MaxPropDijkstra.java	/^	private void relax(Integer node) {$/;"	m	class:MaxPropDijkstra	file:
relax	src/routing/schedule/ScheduleDijkstra.java	/^	private void relax(Integer node) {$/;"	m	class:ScheduleDijkstra	file:
removeConnection	src/report/ContactTimesReport.java	/^	protected ConnectionInfo removeConnection(DTNHost host1, DTNHost host2) {$/;"	m	class:ContactTimesReport
removeConnectionByIndex	src/core/NetworkInterface.java	/^	private void removeConnectionByIndex(int index,$/;"	m	class:NetworkInterface	file:
removeDeliveredMessage	src/routing/EpidemicOracleRouter.java	/^	public void removeDeliveredMessage(String id) {$/;"	m	class:EpidemicOracleRouter
removeFromIncomingBuffer	src/routing/MessageRouter.java	/^	protected Message removeFromIncomingBuffer(String id, DTNHost from) {$/;"	m	class:MessageRouter
removeFromMessages	src/routing/MessageRouter.java	/^	protected Message removeFromMessages(String id) {$/;"	m	class:MessageRouter
removeInterface	src/interfaces/ConnectivityGrid.java	/^		public void removeInterface(NetworkInterface ni) {$/;"	m	class:ConnectivityGrid.GridCell
removeInterface	src/interfaces/ConnectivityGrid.java	/^	public void removeInterface(NetworkInterface ni) {$/;"	m	class:ConnectivityGrid
removeWarmupID	src/report/Report.java	/^	protected void removeWarmupID(String id) {$/;"	m	class:Report
replicate	src/applications/PingApplication.java	/^	public Application replicate() {$/;"	m	class:PingApplication
replicate	src/core/Application.java	/^	public abstract Application replicate();$/;"	m	class:Application
replicate	src/core/Message.java	/^	public Message replicate() {$/;"	m	class:Message
replicate	src/core/NetworkInterface.java	/^	abstract public NetworkInterface replicate();$/;"	m	class:NetworkInterface
replicate	src/interfaces/DistanceCapacityInterface.java	/^	public NetworkInterface replicate()	{$/;"	m	class:DistanceCapacityInterface
replicate	src/interfaces/InterferenceLimitedInterface.java	/^	public NetworkInterface replicate() {$/;"	m	class:InterferenceLimitedInterface
replicate	src/interfaces/SimpleBroadcastInterface.java	/^	public NetworkInterface replicate()	{$/;"	m	class:SimpleBroadcastInterface
replicate	src/movement/BusMovement.java	/^	public BusMovement replicate() {$/;"	m	class:BusMovement
replicate	src/movement/BusTravellerMovement.java	/^	public MapBasedMovement replicate() {$/;"	m	class:BusTravellerMovement
replicate	src/movement/ClusterMovement.java	/^	public ClusterMovement replicate() {$/;"	m	class:ClusterMovement
replicate	src/movement/EveningActivityMovement.java	/^	public MapBasedMovement replicate() {$/;"	m	class:EveningActivityMovement
replicate	src/movement/ExternalMovement.java	/^	public MovementModel replicate() {$/;"	m	class:ExternalMovement
replicate	src/movement/ExternalPathMovement.java	/^	public MovementModel replicate() {$/;"	m	class:ExternalPathMovement
replicate	src/movement/GridLocation.java	/^	public GridLocation replicate() {$/;"	m	class:GridLocation
replicate	src/movement/HomeActivityMovement.java	/^	public MapBasedMovement replicate() {$/;"	m	class:HomeActivityMovement
replicate	src/movement/LinearFormation.java	/^	public LinearFormation replicate() {$/;"	m	class:LinearFormation
replicate	src/movement/LinearMovement.java	/^	public LinearMovement replicate() {$/;"	m	class:LinearMovement
replicate	src/movement/MapBasedMovement.java	/^	public MapBasedMovement replicate() {$/;"	m	class:MapBasedMovement
replicate	src/movement/MapRouteMovement.java	/^	public MapRouteMovement replicate() {$/;"	m	class:MapRouteMovement
replicate	src/movement/ModifiedRandomDirection.java	/^    public MovementModel replicate() {$/;"	m	class:ModifiedRandomDirection
replicate	src/movement/MovementModel.java	/^	public abstract MovementModel replicate();$/;"	m	class:MovementModel
replicate	src/movement/OfficeActivityMovement.java	/^	public MapBasedMovement replicate() {$/;"	m	class:OfficeActivityMovement
replicate	src/movement/RandomDirection.java	/^    public MovementModel replicate() {$/;"	m	class:RandomDirection
replicate	src/movement/RandomWalk.java	/^	public RandomWalk replicate() {$/;"	m	class:RandomWalk
replicate	src/movement/RandomWaypoint.java	/^	public RandomWaypoint replicate() {$/;"	m	class:RandomWaypoint
replicate	src/movement/ShortestPathMapBasedMovement.java	/^	public ShortestPathMapBasedMovement replicate() {$/;"	m	class:ShortestPathMapBasedMovement
replicate	src/movement/StationaryMovement.java	/^	public StationaryMovement replicate() {$/;"	m	class:StationaryMovement
replicate	src/movement/WorkingDayMovement.java	/^	public MovementModel replicate() {$/;"	m	class:WorkingDayMovement
replicate	src/movement/map/MapRoute.java	/^	public MapRoute replicate() {$/;"	m	class:MapRoute
replicate	src/routing/DirectDeliveryRouter.java	/^	public DirectDeliveryRouter replicate() {$/;"	m	class:DirectDeliveryRouter
replicate	src/routing/EpidemicOracleRouter.java	/^	public EpidemicOracleRouter replicate() {$/;"	m	class:EpidemicOracleRouter
replicate	src/routing/EpidemicRouter.java	/^	public EpidemicRouter replicate() {$/;"	m	class:EpidemicRouter
replicate	src/routing/FirstContactRouter.java	/^	public FirstContactRouter replicate() {$/;"	m	class:FirstContactRouter
replicate	src/routing/LifeRouter.java	/^	public LifeRouter replicate() {$/;"	m	class:LifeRouter
replicate	src/routing/MaxPropRouter.java	/^	public MessageRouter replicate() {$/;"	m	class:MaxPropRouter
replicate	src/routing/MaxPropRouterWithEstimation.java	/^	public MessageRouter replicate() {$/;"	m	class:MaxPropRouterWithEstimation
replicate	src/routing/MessageRouter.java	/^	public abstract MessageRouter replicate();$/;"	m	class:MessageRouter
replicate	src/routing/PassiveRouter.java	/^	public MessageRouter replicate() {$/;"	m	class:PassiveRouter
replicate	src/routing/ProphetRouter.java	/^	public MessageRouter replicate() {$/;"	m	class:ProphetRouter
replicate	src/routing/ProphetRouterWithEstimation.java	/^	public MessageRouter replicate() {$/;"	m	class:ProphetRouterWithEstimation
replicate	src/routing/ProphetV2Router.java	/^	public MessageRouter replicate() {$/;"	m	class:ProphetV2Router
replicate	src/routing/SprayAndWaitRouter.java	/^	public SprayAndWaitRouter replicate() {$/;"	m	class:SprayAndWaitRouter
replicate	src/routing/WaveRouter.java	/^	public WaveRouter replicate() {$/;"	m	class:WaveRouter
replicate	src/routing/maxprop/MeetingProbabilitySet.java	/^	public MeetingProbabilitySet replicate() {$/;"	m	class:MeetingProbabilitySet
replicate	src/routing/util/EnergyModel.java	/^	public EnergyModel replicate() {$/;"	m	class:EnergyModel
replicate	src/test/StationaryMovement.java	/^	public StationaryMovement replicate() {$/;"	m	class:StationaryMovement
replicate	src/test/TestInterface.java	/^	public NetworkInterface replicate() {$/;"	m	class:TestInterface
report	src/report/AdjacencyGraphvizReport.java	/^package report;$/;"	p
report	src/report/BufferOccupancyReport.java	/^package report;$/;"	p
report	src/report/ConnectivityDtnsim2Report.java	/^package report;$/;"	p
report	src/report/ConnectivityONEReport.java	/^package report;$/;"	p
report	src/report/ContactTimesReport.java	/^package report;$/;"	p
report	src/report/ContactsDuringAnICTReport.java	/^package report;$/;"	p
report	src/report/ContactsPerHourReport.java	/^package report;$/;"	p
report	src/report/CreatedMessagesReport.java	/^package report;$/;"	p
report	src/report/DTN2Reporter.java	/^package report;$/;"	p
report	src/report/DeliveredMessagesReport.java	/^package report;$/;"	p
report	src/report/DistanceDelayReport.java	/^	private void report(String id, double startDistance, double time,$/;"	m	class:DistanceDelayReport	file:
report	src/report/DistanceDelayReport.java	/^package report;$/;"	p
report	src/report/EncountersVSUniqueEncountersReport.java	/^package report;$/;"	p
report	src/report/EnergyLevelReport.java	/^package report;$/;"	p
report	src/report/EventLogReport.java	/^package report;$/;"	p
report	src/report/InterContactTimesReport.java	/^package report;$/;"	p
report	src/report/JumpSizeDistributionReport.java	/^package report;$/;"	p
report	src/report/LocationSnapshotReport.java	/^package report;$/;"	p
report	src/report/MessageAvailabilityReport.java	/^package report;$/;"	p
report	src/report/MessageCopyCountReport.java	/^package report;$/;"	p
report	src/report/MessageDelayReport.java	/^package report;$/;"	p
report	src/report/MessageDeliveryReport.java	/^package report;$/;"	p
report	src/report/MessageGraphvizReport.java	/^package report;$/;"	p
report	src/report/MessageLocationReport.java	/^package report;$/;"	p
report	src/report/MessageReport.java	/^package report;$/;"	p
report	src/report/MessageStatsReport.java	/^package report;$/;"	p
report	src/report/MovementListenerTestReport.java	/^package report;$/;"	p
report	src/report/MovementNs2Report.java	/^package report;$/;"	p
report	src/report/NodeDensityReport.java	/^package report;$/;"	p
report	src/report/PingAppReporter.java	/^package report;$/;"	p
report	src/report/RadiusOfGyrationReport.java	/^package report;$/;"	p
report	src/report/Report.java	/^package report;$/;"	p
report	src/report/SamplingReport.java	/^package report;$/;"	p
report	src/report/SnapshotReport.java	/^package report;$/;"	p
report	src/report/TotalContactTimeReport.java	/^package report;$/;"	p
report	src/report/TotalEncountersReport.java	/^package report;$/;"	p
report	src/report/UniqueEncountersReport.java	/^package report;$/;"	p
reportValues	src/report/MessageDeliveryReport.java	/^	private void reportValues() {$/;"	m	class:MessageDeliveryReport	file:
reportedMessages	src/report/MessageLocationReport.java	/^	protected HashSet<String> reportedMessages;$/;"	f	class:MessageLocationReport
reportedNodes	src/report/SnapshotReport.java	/^	protected HashSet<Integer> reportedNodes;$/;"	f	class:SnapshotReport
reporter	src/core/DTN2Manager.java	/^	private static DTN2Reporter				reporter = null;$/;"	f	class:DTN2Manager	file:
reports	src/ui/DTNSimUI.java	/^	protected Vector<Report> reports;$/;"	f	class:DTNSimUI
requestDeliverableMessages	src/core/DTNHost.java	/^	public boolean requestDeliverableMessages(Connection con) {$/;"	m	class:DTNHost
requestDeliverableMessages	src/routing/ActiveRouter.java	/^	public boolean requestDeliverableMessages(Connection con) {$/;"	m	class:ActiveRouter
requestDeliverableMessages	src/routing/MessageRouter.java	/^	public boolean requestDeliverableMessages(Connection con) {$/;"	m	class:MessageRouter
requestMsg	src/core/Message.java	/^	private Message requestMsg;$/;"	f	class:Message	file:
reset	src/core/DTNHost.java	/^	public static void reset() {$/;"	m	class:DTNHost
reset	src/core/Message.java	/^	public static void reset() {$/;"	m	class:Message
reset	src/core/NetworkInterface.java	/^	public static void reset() {$/;"	m	class:NetworkInterface
reset	src/core/SimClock.java	/^	public static void reset() {$/;"	m	class:SimClock
reset	src/core/SimScenario.java	/^	public static void reset() {$/;"	m	class:SimScenario
reset	src/gui/InfoPanel.java	/^	private void reset() {$/;"	m	class:InfoPanel	file:
reset	src/interfaces/ConnectivityGrid.java	/^	public static void reset() {$/;"	m	class:ConnectivityGrid
reset	src/movement/BusControlSystem.java	/^	public static void reset() {$/;"	m	class:BusControlSystem
reset	src/movement/BusTravellerMovement.java	/^	public static void reset() {$/;"	m	class:BusTravellerMovement
reset	src/movement/EveningActivityControlSystem.java	/^	public static void reset() {$/;"	m	class:EveningActivityControlSystem
reset	src/movement/EveningActivityMovement.java	/^	public static void reset() {$/;"	m	class:EveningActivityMovement
reset	src/movement/ExternalMovement.java	/^	public static void reset() {$/;"	m	class:ExternalMovement
reset	src/movement/MovementModel.java	/^	public static void reset() {$/;"	m	class:MovementModel
reset	src/routing/EpidemicOracleRouter.java	/^	public static void reset() {$/;"	m	class:EpidemicOracleRouter
reset	src/test/MessageChecker.java	/^	public void reset() {$/;"	m	class:MessageChecker
resetForNextRun	src/core/DTNSim.java	/^	private static void resetForNextRun() {$/;"	m	class:DTNSim	file:
resetList	src/core/DTNSim.java	/^	private static List<Class<?>> resetList = new ArrayList<Class<?>>();$/;"	f	class:DTNSim	file:
resetState	src/movement/BusTravellerMovement.java	/^		private void resetState() {$/;"	m	class:BusTravellerMovement.ContinueBusTripDecider	file:
responseSize	src/core/Message.java	/^	private int responseSize;$/;"	f	class:Message	file:
responseSize	src/input/MessageCreateEvent.java	/^	private int responseSize;$/;"	f	class:MessageCreateEvent	file:
restoreNameSpace	src/core/Settings.java	/^	public void restoreNameSpace() {$/;"	m	class:Settings
restoreSecondaryNamespace	src/core/Settings.java	/^	public void restoreSecondaryNamespace() {$/;"	m	class:Settings
restoreSubNameSpace	src/core/Settings.java	/^	public void restoreSubNameSpace() {$/;"	m	class:Settings
rintx	writePoints.py	/^                    rintx = random.randint(0,sizex)$/;"	v
rinty	writePoints.py	/^                    rinty = random.randint(0,sizey)$/;"	v
rng	src/applications/PingApplication.java	/^	private Random	rng;$/;"	f	class:PingApplication	file:
rng	src/core/NetworkInterface.java	/^	private static Random rng;$/;"	f	class:NetworkInterface	file:
rng	src/input/MessageEventGenerator.java	/^	protected Random rng;$/;"	f	class:MessageEventGenerator
rng	src/movement/BusTravellerMovement.java	/^		private Random rng;$/;"	f	class:BusTravellerMovement.ContinueBusTripDecider	file:
rng	src/movement/EveningActivityControlSystem.java	/^	private Random rng;$/;"	f	class:EveningActivityControlSystem	file:
rng	src/movement/MovementModel.java	/^	protected static Random rng;$/;"	f	class:MovementModel
rng	src/movement/map/PointsOfInterest.java	/^	private Random rng;$/;"	f	class:PointsOfInterest	file:
rng	src/report/MessageAvailabilityReport.java	/^	private Random rng;$/;"	f	class:MessageAvailabilityReport	file:
rng	src/routing/util/EnergyModel.java	/^	private static Random rng = null;$/;"	f	class:EnergyModel	file:
rng	src/util/ParetoRNG.java	/^	private Random rng;$/;"	f	class:ParetoRNG	file:
route	src/movement/MapRouteMovement.java	/^	private MapRoute route;$/;"	f	class:MapRouteMovement	file:
router	src/core/DTNHost.java	/^	private MessageRouter router;$/;"	f	class:DTNHost	file:
routerProto	src/test/AbstractRouterTest.java	/^	protected MessageRouter routerProto;$/;"	f	class:AbstractRouterTest
routing	src/routing/ActiveRouter.java	/^package routing;$/;"	p
routing	src/routing/DirectDeliveryRouter.java	/^package routing;$/;"	p
routing	src/routing/EpidemicOracleRouter.java	/^package routing;$/;"	p
routing	src/routing/EpidemicRouter.java	/^package routing;$/;"	p
routing	src/routing/FirstContactRouter.java	/^package routing;$/;"	p
routing	src/routing/LifeRouter.java	/^package routing;$/;"	p
routing	src/routing/MaxPropRouter.java	/^package routing;$/;"	p
routing	src/routing/MaxPropRouterWithEstimation.java	/^package routing;$/;"	p
routing	src/routing/MessageRouter.java	/^package routing;$/;"	p
routing	src/routing/PassiveRouter.java	/^package routing;$/;"	p
routing	src/routing/ProphetRouter.java	/^package routing;$/;"	p
routing	src/routing/ProphetRouterWithEstimation.java	/^package routing;$/;"	p
routing	src/routing/ProphetV2Router.java	/^package routing;$/;"	p
routing	src/routing/SprayAndWaitRouter.java	/^package routing;$/;"	p
routing	src/routing/WaveRouter.java	/^package routing;$/;"	p
routing.maxprop	src/routing/maxprop/MaxPropDijkstra.java	/^package routing.maxprop;$/;"	p
routing.maxprop	src/routing/maxprop/MeetingProbabilitySet.java	/^package routing.maxprop;$/;"	p
routing.schedule	src/routing/schedule/ScheduleDijkstra.java	/^package routing.schedule;$/;"	p
routing.schedule	src/routing/schedule/ScheduleEntry.java	/^package routing.schedule;$/;"	p
routing.schedule	src/routing/schedule/ScheduleOracle.java	/^package routing.schedule;$/;"	p
routing.util	src/routing/util/EnergyModel.java	/^package routing.util;$/;"	p
routing.util	src/routing/util/MessageTransferAcceptPolicy.java	/^package routing.util;$/;"	p
routing.util	src/routing/util/RoutingInfo.java	/^package routing.util;$/;"	p
routingInfoButton	src/gui/InfoPanel.java	/^	private JButton routingInfoButton;$/;"	f	class:InfoPanel	file:
rows	src/interfaces/ConnectivityGrid.java	/^	private int rows;$/;"	f	class:ConnectivityGrid	file:
rows	src/movement/GridLocation.java	/^	private int rows;$/;"	f	class:GridLocation	file:
rtt	src/report/MessageStatsReport.java	/^	private List<Double> rtt; \/\/ round trip times$/;"	f	class:MessageStatsReport	file:
runIndex	src/core/Settings.java	/^	private static int runIndex = 0;$/;"	f	class:Settings	file:
runMessageExchange	src/test/EpidemicRouterTest.java	/^	private String runMessageExchange(boolean withDestination) {$/;"	m	class:EpidemicRouterTest	file:
runName	src/report/NodeDensityReport.java	/^	private final String runName;$/;"	f	class:NodeDensityReport	file:
runSim	src/gui/DTNSimGUI.java	/^	protected void runSim() {$/;"	m	class:DTNSimGUI
runSim	src/ui/DTNSimTextUI.java	/^	protected void runSim() {$/;"	m	class:DTNSimTextUI
runSim	src/ui/DTNSimUI.java	/^	protected abstract void runSim();$/;"	m	class:DTNSimUI
runTestPoiSelection	src/test/PointsOfInterestTest.java	/^	public void runTestPoiSelection(double[] poiProbs, int rngSeed) throws Exception {$/;"	m	class:PointsOfInterestTest
s	src/test/MapBasedMovementTest.java	/^	private TestSettings s;$/;"	f	class:MapBasedMovementTest	file:
s	src/test/SettingsTest.java	/^	private Settings s;$/;"	f	class:SettingsTest	file:
sample	src/report/JumpSizeDistributionReport.java	/^	protected void sample(final List <DTNHost> hosts) {$/;"	m	class:JumpSizeDistributionReport
sample	src/report/NodeDensityReport.java	/^	protected void sample(final List<DTNHost> hosts) {$/;"	m	class:NodeDensityReport
sample	src/report/RadiusOfGyrationReport.java	/^	protected void sample(List<DTNHost> hosts) {$/;"	m	class:RadiusOfGyrationReport
sample	src/report/SamplingReport.java	/^	protected abstract void sample(final List<DTNHost> hosts);$/;"	m	class:SamplingReport
sampleCounts	src/report/JumpSizeDistributionReport.java	/^	private final int[] sampleCounts;$/;"	f	class:JumpSizeDistributionReport	file:
sampleCounts	src/report/RadiusOfGyrationReport.java	/^	private final int[] sampleCounts;$/;"	f	class:RadiusOfGyrationReport	file:
samples	src/report/JumpSizeDistributionReport.java	/^	private final double[][] samples;$/;"	f	class:JumpSizeDistributionReport	file:
samples	src/report/NodeDensityReport.java	/^	private final List<int[][]> samples;$/;"	f	class:NodeDensityReport	file:
samples	src/report/RadiusOfGyrationReport.java	/^	private final double[][][] samples;$/;"	f	class:RadiusOfGyrationReport	file:
samplingInterval	src/movement/ExternalMovement.java	/^	private static double samplingInterval;$/;"	f	class:ExternalMovement	file:
sc	src/test/MessageTest.java	/^	private SimClock sc;$/;"	f	class:MessageTest	file:
sc	src/test/ScheduledUpdatesQueueTest.java	/^	private SimClock sc = SimClock.getInstance();$/;"	f	class:ScheduledUpdatesQueueTest	file:
scale	src/gui/playfield/PlayFieldGraphic.java	/^	protected static double scale = 1;$/;"	f	class:PlayFieldGraphic
scale	src/gui/playfield/PlayFieldGraphic.java	/^	public static int scale(double value) {$/;"	m	class:PlayFieldGraphic
scale	src/gui/playfield/PlayFieldGraphic.java	/^	public static int scale(int value) {$/;"	m	class:PlayFieldGraphic
scanEnergy	src/routing/util/EnergyModel.java	/^	private double scanEnergy;$/;"	f	class:EnergyModel	file:
scanInterval	src/core/NetworkInterface.java	/^	private double scanInterval;$/;"	f	class:NetworkInterface	file:
scanResponseEnergy	src/routing/util/EnergyModel.java	/^	private double scanResponseEnergy;$/;"	f	class:EnergyModel	file:
scanner	src/input/ExternalMovementReader.java	/^	private Scanner scanner;$/;"	f	class:ExternalMovementReader	file:
scen	src/ui/DTNSimUI.java	/^	protected SimScenario scen;$/;"	f	class:DTNSimUI
scenarioName	src/report/Report.java	/^	private String scenarioName;$/;"	f	class:Report	file:
scheduleUpdate	src/core/World.java	/^	public void scheduleUpdate(double simTime) {$/;"	m	class:World
scheduledUpdates	src/core/World.java	/^	private ScheduledUpdatesQueue scheduledUpdates;$/;"	f	class:World	file:
schedules	src/routing/schedule/ScheduleOracle.java	/^	Map<Integer, List<ScheduleEntry>> schedules;$/;"	f	class:ScheduleOracle
screenShotButton	src/gui/GUIControls.java	/^	private JButton screenShotButton;$/;"	f	class:GUIControls	file:
scs	src/movement/EveningActivityMovement.java	/^	private EveningActivityControlSystem scs;$/;"	f	class:EveningActivityMovement	file:
secondaryNamespace	src/core/Settings.java	/^	private String secondaryNamespace = null;$/;"	f	class:Settings	file:
secondaryNamespaces	src/core/Settings.java	/^	private Stack<String> secondaryNamespaces;$/;"	f	class:Settings	file:
secondsInTimeUnit	src/routing/ProphetRouter.java	/^	private int secondsInTimeUnit;$/;"	f	class:ProphetRouter	file:
secondsInTimeUnit	src/routing/ProphetV2Router.java	/^	private int secondsInTimeUnit;$/;"	f	class:ProphetV2Router	file:
seed	src/applications/PingApplication.java	/^	private int		seed = 0;$/;"	f	class:PingApplication	file:
selectDestination	src/movement/map/PointsOfInterest.java	/^	public MapNode selectDestination() {$/;"	m	class:PointsOfInterest
selectRandomOkNode	src/movement/MapBasedMovement.java	/^	protected MapNode selectRandomOkNode(List<MapNode> nodes) {$/;"	m	class:MapBasedMovement
selectTrackedHosts	src/report/MessageAvailabilityReport.java	/^	private Set<DTNHost> selectTrackedHosts(List<DTNHost> allHosts) {$/;"	m	class:MessageAvailabilityReport	file:
selectedHost	src/gui/InfoPanel.java	/^	private DTNHost selectedHost;$/;"	f	class:InfoPanel	file:
selectedMessage	src/gui/InfoPanel.java	/^	private Message selectedMessage;$/;"	f	class:InfoPanel	file:
sendConditions	src/routing/util/MessageTransferAcceptPolicy.java	/^	private ArrayList<Tuple<String,ArithmeticCondition>> sendConditions = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
sendEventToListeners	src/core/Application.java	/^	public void sendEventToListeners(String event, Object params,$/;"	m	class:Application
sendMessage	src/core/DTNHost.java	/^	public void sendMessage(String id, DTNHost to) {$/;"	m	class:DTNHost
sendMessage	src/routing/MessageRouter.java	/^	public void sendMessage(String id, DTNHost to) {$/;"	m	class:MessageRouter
sendMessageToConnected	src/routing/EpidemicOracleRouter.java	/^	private void sendMessageToConnected(Message m) {$/;"	m	class:EpidemicOracleRouter	file:
sendQueueMode	src/routing/MessageRouter.java	/^	private int sendQueueMode;$/;"	f	class:MessageRouter	file:
sendingConnections	src/routing/ActiveRouter.java	/^	protected ArrayList<Connection> sendingConnections;$/;"	f	class:ActiveRouter
sentMessages	src/routing/MaxPropRouter.java	/^	private Map<DTNHost, Set<String>> sentMessages;$/;"	f	class:MaxPropRouter	file:
sepsField	src/gui/GUIControls.java	/^	private JLabel sepsField;	\/\/ simulated events per second field$/;"	f	class:GUIControls	file:
serialVersionUID	src/routing/schedule/ScheduleEntry.java	/^	private static final long serialVersionUID = 42L;$/;"	f	class:ScheduleEntry	file:
serialVersionUID	src/routing/schedule/ScheduleOracle.java	/^	private static final long serialVersionUID = 42L;$/;"	f	class:ScheduleOracle	file:
service	src/core/VM.java	/^    private int service;$/;"	f	class:VM	file:
setAllHosts	src/report/AdjacencyGraphvizReport.java	/^	public void setAllHosts(Collection<DTNHost> hosts) {$/;"	m	class:AdjacencyGraphvizReport
setAlpha	src/routing/maxprop/MeetingProbabilitySet.java	/^	public void setAlpha(double alpha) {$/;"	m	class:MeetingProbabilitySet
setAppID	src/core/Application.java	/^	public void setAppID(String appID) {$/;"	m	class:Application
setAppID	src/core/Message.java	/^	public void setAppID(String appID) {$/;"	m	class:Message
setAppListeners	src/core/Application.java	/^	public void setAppListeners (List<ApplicationListener> aListeners){$/;"	m	class:Application
setAutoClearOverlay	src/gui/playfield/PlayField.java	/^	public void setAutoClearOverlay(boolean clear) {$/;"	m	class:PlayField
setBidirectional	src/input/WKTMapReader.java	/^	public void setBidirectional(boolean bidi) {$/;"	m	class:WKTMapReader
setBounds	src/movement/map/SimMap.java	/^	private void setBounds() {$/;"	m	class:SimMap	file:
setBusStops	src/movement/BusControlSystem.java	/^	public void setBusStops(List<Coord> busStops) {$/;"	m	class:BusControlSystem
setClisteners	src/core/NetworkInterface.java	/^	public void setClisteners(List<ConnectionListener> cListeners) {$/;"	m	class:NetworkInterface
setComBus	src/movement/MovementModel.java	/^	public void setComBus(ModuleCommunicationBus comBus) {$/;"	m	class:MovementModel
setConListeners	src/test/TestUtils.java	/^	public void setConListeners(List<ConnectionListener> conListeners) {$/;"	m	class:TestUtils
setCurrentMovementModel	src/movement/ExtendedMovementModel.java	/^	public void setCurrentMovementModel(SwitchableMovement mm) {$/;"	m	class:ExtendedMovementModel
setDebugLevel	src/core/Debug.java	/^	public void setDebugLevel(int level) {$/;"	m	class:Debug
setDelegate	src/report/MovementListenerTestReport.java	/^	public static void setDelegate(final MovementListener delegate) {$/;"	m	class:MovementListenerTestReport
setDelta	src/routing/schedule/ScheduleEntry.java	/^	public void setDelta(double delta) {$/;"	m	class:ScheduleEntry
setDestMax	src/applications/PingApplication.java	/^	public void setDestMax(int destMax) {$/;"	m	class:PingApplication
setDestMin	src/applications/PingApplication.java	/^	public void setDestMin(int destMin) {$/;"	m	class:PingApplication
setDestination	src/movement/EveningTrip.java	/^	public void setDestination(Coord destination) {$/;"	m	class:EveningTrip
setDistance	src/movement/map/DijkstraPathFinder.java	/^	private void setDistance(MapNode n, double distance) {$/;"	m	class:DijkstraPathFinder	file:
setDistance	src/routing/maxprop/MaxPropDijkstra.java	/^	private void setDistance(Integer n, double distance) {$/;"	m	class:MaxPropDijkstra	file:
setDone	src/input/WKTReader.java	/^	protected void setDone(boolean done) {$/;"	m	class:WKTReader
setDrawBuffer	src/gui/playfield/NodeGraphic.java	/^	public static void setDrawBuffer(boolean draw) {$/;"	m	class:NodeGraphic
setDrawConnections	src/gui/playfield/NodeGraphic.java	/^	public static void setDrawConnections(boolean draw) {$/;"	m	class:NodeGraphic
setDrawCoverage	src/gui/playfield/NodeGraphic.java	/^	public static void setDrawCoverage(boolean draw) {$/;"	m	class:NodeGraphic
setDrawNodeName	src/gui/playfield/NodeGraphic.java	/^	public static void setDrawNodeName(boolean draw) {$/;"	m	class:NodeGraphic
setEncounters	src/report/TotalEncountersReport.java	/^	public void setEncounters(int[] encounters) {$/;"	m	class:TotalEncountersReport
setEnergy	src/routing/util/EnergyModel.java	/^	protected void setEnergy(double range[]) {$/;"	m	class:EnergyModel
setEvents	src/core/DTN2Manager.java	/^	public static void setEvents(DTN2Events events) {$/;"	m	class:DTN2Manager
setFocus	src/gui/DTNSimGUI.java	/^    public void setFocus(DTNHost host) {$/;"	m	class:DTNSimGUI
setFocusOnClick	src/gui/playfield/PlayField.java	/^	public void setFocusOnClick(boolean focus) {$/;"	m	class:PlayField
setGroupId	src/test/TestUtils.java	/^	public void setGroupId(String groupId) {$/;"	m	class:TestUtils
setGroupSettings	src/core/NetworkInterface.java	/^	public void setGroupSettings(Settings s) {$/;"	m	class:NetworkInterface
setHighlightedNodes	src/gui/playfield/NodeGraphic.java	/^	public static void setHighlightedNodes(List<DTNHost> nodes) {$/;"	m	class:NodeGraphic
setHost	src/core/NetworkInterface.java	/^	public void setHost(DTNHost host) {$/;"	m	class:NetworkInterface
setHost	src/movement/ExternalPathMovement.java	/^	public void setHost(DTNHost host) {$/;"	m	class:ExternalPathMovement
setHost	src/movement/MovementModel.java	/^	public void setHost(DTNHost host) {$/;"	m	class:MovementModel
setInterval	src/applications/PingApplication.java	/^	public void setInterval(double interval) {$/;"	m	class:PingApplication
setLastPing	src/applications/PingApplication.java	/^	public void setLastPing(double lastPing) {$/;"	m	class:PingApplication
setLocation	src/core/Coord.java	/^	public void setLocation(Coord c) {$/;"	m	class:Coord
setLocation	src/core/Coord.java	/^	public void setLocation(double x, double y) {$/;"	m	class:Coord
setLocation	src/core/DTNHost.java	/^	public void setLocation(Coord location) {$/;"	m	class:DTNHost
setLocation	src/movement/BusTravellerMovement.java	/^	public void setLocation(Coord lastWaypoint) {$/;"	m	class:BusTravellerMovement
setLocation	src/movement/EveningActivityMovement.java	/^	public void setLocation(Coord lastWaypoint) {$/;"	m	class:EveningActivityMovement
setLocation	src/movement/HomeActivityMovement.java	/^	public void setLocation(Coord lastWaypoint) {$/;"	m	class:HomeActivityMovement
setLocation	src/movement/MapBasedMovement.java	/^	public void setLocation(Coord lastWaypoint) {$/;"	m	class:MapBasedMovement
setLocation	src/movement/OfficeActivityMovement.java	/^	public void setLocation(Coord lastWaypoint) {$/;"	m	class:OfficeActivityMovement
setLocation	src/movement/RandomWalk.java	/^	public void setLocation(Coord lastWaypoint) {$/;"	m	class:RandomWalk
setLocation	src/movement/SwitchableMovement.java	/^	public void setLocation(Coord lastWaypoint);$/;"	m	interface:SwitchableMovement
setMap	src/gui/playfield/PlayField.java	/^	public void setMap(SimMap simMap) {$/;"	m	class:PlayField
setMap	src/movement/BusControlSystem.java	/^	public void setMap(SimMap map) {$/;"	m	class:BusControlSystem
setMaxGroupSize	src/movement/EveningActivityMovement.java	/^	public void setMaxGroupSize(int maxGroupSize) {$/;"	m	class:EveningActivityMovement
setMeetingSpots	src/movement/EveningActivityControlSystem.java	/^	public void setMeetingSpots(List<Coord> meetingSpots) {$/;"	m	class:EveningActivityControlSystem
setMessageInfo	src/gui/InfoPanel.java	/^	private void setMessageInfo(Message m) {$/;"	m	class:InfoPanel	file:
setMessageRouterProto	src/test/TestUtils.java	/^	public void setMessageRouterProto(MessageRouter mr) {$/;"	m	class:TestUtils
setMinGroupSize	src/movement/EveningActivityMovement.java	/^	public void setMinGroupSize(int minGroupSize) {$/;"	m	class:EveningActivityMovement
setMsgListeners	src/test/TestUtils.java	/^	public void setMsgListeners(List<MessageListener> msgListeners) {$/;"	m	class:TestUtils
setName	src/core/DTNHost.java	/^	public void setName(String name) {$/;"	m	class:DTNHost
setNameSpace	src/core/Settings.java	/^	public void setNameSpace(String namespace) {$/;"	m	class:Settings
setNextEventQueue	src/core/World.java	/^	public void setNextEventQueue() {$/;"	m	class:World
setNextIndex	src/movement/map/MapRoute.java	/^	public void setNextIndex(int index) {$/;"	m	class:MapRoute
setNextRoute	src/movement/BusTravellerMovement.java	/^	public void setNextRoute(Coord nodeLocation, Coord nodeDestination) {$/;"	m	class:BusTravellerMovement
setNextRoute	src/movement/CarMovement.java	/^	public void setNextRoute(Coord nodeLocation, Coord nodeDestination) {$/;"	m	class:CarMovement
setNextRoute	src/movement/TransportMovement.java	/^	public void setNextRoute(Coord nodeLocation, Coord nodeDestination);$/;"	m	interface:TransportMovement
setNextWaypoint	src/core/DTNHost.java	/^	private boolean setNextWaypoint() {$/;"	m	class:DTNHost	file:
setNodeRelationships	src/report/UniqueEncountersReport.java	/^	public void setNodeRelationships(int[][] nodeRelationships) {$/;"	m	class:UniqueEncountersReport
setNodes	src/gui/NodeChooser.java	/^	private void setNodes(int offset) {$/;"	m	class:NodeChooser	file:
setNormalize	src/input/ExternalMovementReader.java	/^	public void setNormalize(boolean normalize) {$/;"	m	class:ExternalMovementReader
setNormalize	src/input/ExternalPathMovementReader.java	/^	public void setNormalize(boolean normalize) {$/;"	m	class:ExternalPathMovementReader
setNrofPreload	src/input/ExternalEventsQueue.java	/^	public void setNrofPreload(int nrof) {$/;"	m	class:ExternalEventsQueue
setPassive	src/applications/PingApplication.java	/^	public void setPassive(boolean passive) {$/;"	m	class:PingApplication
setPath	src/movement/EveningTrip.java	/^	public void setPath(Path path) {$/;"	m	class:EveningTrip
setPauseOnEvent	src/gui/EventLogControl.java	/^	public void setPauseOnEvent(boolean pause) {$/;"	m	class:EventLogControl
setPaused	src/gui/DTNSimGUI.java	/^    public void setPaused(boolean paused) {$/;"	m	class:DTNSimGUI
setPaused	src/gui/GUIControls.java	/^	public void setPaused(boolean paused) {$/;"	m	class:GUIControls
setPingSize	src/applications/PingApplication.java	/^	public void setPingSize(int pingSize) {$/;"	m	class:PingApplication
setPlayUntil	src/gui/GUIControls.java	/^	private void setPlayUntil() {$/;"	m	class:GUIControls	file:
setPongSize	src/applications/PingApplication.java	/^	public void setPongSize(int pongSize) {$/;"	m	class:PingApplication
setPrefix	src/report/Report.java	/^	protected void setPrefix(String txt) {$/;"	m	class:Report
setPrintStream	src/core/Debug.java	/^	public void setPrintStream(PrintStream outStrm) {$/;"	m	class:Debug
setRandomNumberGenerator	src/movement/EveningActivityControlSystem.java	/^	public void setRandomNumberGenerator(Random rand) {$/;"	m	class:EveningActivityControlSystem
setReceiveTime	src/core/Message.java	/^	public void setReceiveTime(double time) {$/;"	m	class:Message
setReporter	src/core/DTN2Manager.java	/^	public static void setReporter(DTN2Reporter reporter) {$/;"	m	class:DTN2Manager
setRequest	src/core/Message.java	/^	public void setRequest(Message request) {$/;"	m	class:Message
setResponseSize	src/core/Message.java	/^	public void setResponseSize(int size) {$/;"	m	class:Message
setRouter	src/core/DTNHost.java	/^	private void setRouter(MessageRouter router) {$/;"	m	class:DTNHost	file:
setRouterProto	src/test/AbstractRouterTest.java	/^	protected void setRouterProto(MessageRouter r) {$/;"	m	class:AbstractRouterTest
setRunIndex	src/core/Settings.java	/^	public static void setRunIndex(int index) {$/;"	m	class:Settings
setScale	src/gui/playfield/PlayField.java	/^	public void setScale(double scale) {$/;"	m	class:PlayField
setScale	src/gui/playfield/PlayFieldGraphic.java	/^	public static void setScale(double newScale) {$/;"	m	class:PlayFieldGraphic
setSecondaryNamespace	src/core/Settings.java	/^	public void setSecondaryNamespace(String namespace) {$/;"	m	class:Settings
setSeed	src/applications/PingApplication.java	/^	public void setSeed(int seed) {$/;"	m	class:PingApplication
setShowEvent	src/gui/EventLogControl.java	/^	public void setShowEvent(boolean show) {$/;"	m	class:EventLogControl
setShowMapGraphic	src/gui/playfield/PlayField.java	/^	public void setShowMapGraphic(boolean show) {$/;"	m	class:PlayField
setSimTime	src/gui/GUIControls.java	/^	public void setSimTime(double time) {$/;"	m	class:GUIControls
setSpeed	src/movement/Path.java	/^	public void setSpeed(double speed) {$/;"	m	class:Path
setSubNameSpace	src/core/Settings.java	/^	public void setSubNameSpace(String namespace) {$/;"	m	class:Settings
setTime	src/core/SimClock.java	/^	public void setTime(double time) {$/;"	m	class:SimClock
setTime	src/routing/schedule/ScheduleDijkstra.java	/^	private void setTime(Integer n, double time) {$/;"	m	class:ScheduleDijkstra	file:
setTransmitRange	src/test/TestUtils.java	/^	public void setTransmitRange(double transmitRange) {$/;"	m	class:TestUtils
setTtl	src/core/Message.java	/^	public void setTtl(int ttl) {$/;"	m	class:Message
setUnderlayImage	src/gui/playfield/PlayField.java	/^	public void setUnderlayImage(BufferedImage image,$/;"	m	class:PlayField
setUp	src/test/AbstractRouterTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:AbstractRouterTest
setUp	src/test/ActivenessHandlerTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:ActivenessHandlerTest
setUp	src/test/AdjacencyGraphvizReportTest.java	/^	public void setUp() throws IOException {$/;"	m	class:AdjacencyGraphvizReportTest
setUp	src/test/ConnectionTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:ConnectionTest
setUp	src/test/DijkstraPathFinderTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:DijkstraPathFinderTest
setUp	src/test/DistanceDelayReportTest.java	/^	public void setUp() throws IOException {$/;"	m	class:DistanceDelayReportTest
setUp	src/test/EpidemicRouterTest.java	/^	public void setUp() throws Exception {$/;"	m	class:EpidemicRouterTest
setUp	src/test/ExternalEventsQueueTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:ExternalEventsQueueTest
setUp	src/test/ExternalMovementReaderTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:ExternalMovementReaderTest
setUp	src/test/MapBasedMovementTest.java	/^	public void setUp() throws Exception {$/;"	m	class:MapBasedMovementTest
setUp	src/test/MapNodeTest.java	/^	public void setUp() {$/;"	m	class:MapNodeTest
setUp	src/test/MaxPropDijkstraTest.java	/^	public void setUp() throws Exception {$/;"	m	class:MaxPropDijkstraTest
setUp	src/test/MaxPropRouterTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:MaxPropRouterTest
setUp	src/test/MessageGraphvizReportTest.java	/^	public void setUp() throws IOException {$/;"	m	class:MessageGraphvizReportTest
setUp	src/test/MessageTest.java	/^	public void setUp() throws Exception {$/;"	m	class:MessageTest
setUp	src/test/ModuleCommunicationBusTest.java	/^	public void setUp() throws Exception {$/;"	m	class:ModuleCommunicationBusTest
setUp	src/test/ProphetRouterTest.java	/^	public void setUp() throws Exception {$/;"	m	class:ProphetRouterTest
setUp	src/test/ScheduleDijkstraTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:ScheduleDijkstraTest
setUp	src/test/ScheduledUpdatesQueueTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:ScheduledUpdatesQueueTest
setUp	src/test/SettingsTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:SettingsTest
setUp	src/test/TotalContactTimeReportTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:TotalContactTimeReportTest
setUp	src/test/WKTPointReaderTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:WKTPointReaderTest
setUp	src/test/WorldTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:WorldTest
setUpBeforeClass	src/test/DTNHostTest.java	/^  public static void setUpBeforeClass()$/;"	m	class:DTNHostTest
setUpBeforeClass	src/test/MovementListenerTest.java	/^	public static void setUpBeforeClass()$/;"	m	class:MovementListenerTest
setUpState	src/core/Connection.java	/^	public void setUpState(boolean state) {$/;"	m	class:Connection
setUpUsing	src/test/ExternalMovementTest.java	/^	protected void setUpUsing(String[] input) throws Exception {$/;"	m	class:ExternalMovementTest
setUpWith	src/test/PointsOfInterestTest.java	/^	protected void setUpWith(double[] poiProbs, int rngSeed, int [] okNodes)$/;"	m	class:PointsOfInterestTest
setUpWith	src/test/WKTReaderTest.java	/^	private WKTMapReader setUpWith(Reader input) {$/;"	m	class:WKTReaderTest	file:
setUpWithGranularity	src/test/ContactTimesReportTest.java	/^	private void setUpWithGranularity(double gran) throws IOException {$/;"	m	class:ContactTimesReportTest	file:
setWaitTimeAtEnd	src/movement/EveningTrip.java	/^	public void setWaitTimeAtEnd(double waitTimeAtEnd) {$/;"	m	class:EveningTrip
setnrofServices	src/core/DTNHost.java	/^    public static void setnrofServices(int nrofServices) {$/;"	m	class:DTNHost
settings	src/test/TestUtils.java	/^	private TestSettings settings;$/;"	f	class:TestUtils	file:
setup	src/core/DTN2Manager.java	/^	public static void setup(World world) {$/;"	m	class:DTN2Manager
setupHost	src/test/MapBasedMovementTest.java	/^	private DTNHost setupHost() {$/;"	m	class:MapBasedMovementTest	file:
setupMapData	src/test/MapBasedMovementTest.java	/^	private void setupMapData(String okTypes, String speed, String wTime) {$/;"	m	class:MapBasedMovementTest	file:
show	src/gui/EventLogControl.java	/^	private JCheckBox show;$/;"	f	class:EventLogControl	file:
showAllCheck	src/gui/EventLogControlPanel.java	/^	private JCheckBox showAllCheck;$/;"	f	class:EventLogControlPanel	file:
showBuffer	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem showBuffer;$/;"	f	class:SimMenuBar	file:
showEvent	src/gui/EventLogControl.java	/^	public boolean showEvent() {$/;"	m	class:EventLogControl
showInfo	src/gui/InfoPanel.java	/^	public void showInfo(DTNHost host) {$/;"	m	class:InfoPanel
showInfo	src/gui/InfoPanel.java	/^	public void showInfo(Message message) {$/;"	m	class:InfoPanel
showMapGraphic	src/gui/playfield/PlayField.java	/^	private boolean showMapGraphic;$/;"	f	class:PlayField	file:
showNodeConnections	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem showNodeConnections;$/;"	f	class:SimMenuBar	file:
showNodeCoverage	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem showNodeCoverage;$/;"	f	class:SimMenuBar	file:
showNodeName	src/gui/SimMenuBar.java	/^	private JCheckBoxMenuItem showNodeName;$/;"	f	class:SimMenuBar	file:
showPath	src/gui/DTNSimGUI.java	/^    public void showPath(Path path) {$/;"	m	class:DTNSimGUI
shownNodes	src/gui/NodeChooser.java	/^	private List<DTNHost> shownNodes;$/;"	f	class:NodeChooser	file:
shuffleMessages	src/routing/ActiveRouter.java	/^	protected void shuffleMessages(List<Message> messages) {$/;"	m	class:ActiveRouter
simCancelled	src/ui/DTNSimUI.java	/^	protected boolean simCancelled;$/;"	f	class:DTNSimUI
simClock	src/core/World.java	/^	private SimClock simClock;$/;"	f	class:World	file:
simDone	src/ui/DTNSimUI.java	/^	protected boolean simDone;$/;"	f	class:DTNSimUI
simMap	src/core/SimScenario.java	/^	private SimMap simMap;$/;"	f	class:SimScenario	file:
simMap	src/gui/playfield/MapGraphic.java	/^	private SimMap simMap;$/;"	f	class:MapGraphic	file:
simMap	src/movement/BusControlSystem.java	/^	private SimMap simMap;$/;"	f	class:BusControlSystem	file:
simTimeField	src/gui/GUIControls.java	/^	private JTextField simTimeField;$/;"	f	class:GUIControls	file:
simulateConOnce	src/core/World.java	/^	private boolean simulateConOnce;$/;"	f	class:World	file:
simulateConnections	src/core/SimScenario.java	/^	private boolean simulateConnections;$/;"	f	class:SimScenario	file:
simulateConnections	src/core/SimScenario.java	/^	public boolean simulateConnections() {$/;"	m	class:SimScenario
simulateConnections	src/core/World.java	/^	private boolean simulateConnections;$/;"	f	class:World	file:
simulateConnections	src/test/WorldTest.java	/^		public boolean simulateConnections() {$/;"	m	class:WorldTest.TestScenario
simulateConnections	src/test/WorldTest.java	/^	private boolean simulateConnections = true;$/;"	f	class:WorldTest	file:
singletons	src/input/ExternalPathMovementReader.java	/^	private static Map<String, ExternalPathMovementReader> singletons =$/;"	f	class:ExternalPathMovementReader	file:
sittingAtDesk	src/movement/OfficeActivityMovement.java	/^	private boolean sittingAtDesk;$/;"	f	class:OfficeActivityMovement	file:
size	src/core/Message.java	/^	private int size;$/;"	f	class:Message	file:
size	src/input/MessageCreateEvent.java	/^	private int size;$/;"	f	class:MessageCreateEvent	file:
size	src/test/ConnectionTest.java	/^	private int size[] = {50, 75, 100, 200, 1000};$/;"	f	class:ConnectionTest	file:
sizeRange	src/input/MessageEventGenerator.java	/^	private int[] sizeRange;$/;"	f	class:MessageEventGenerator	file:
sizeX	src/core/World.java	/^	private int sizeX;$/;"	f	class:World	file:
sizeY	src/core/World.java	/^	private int sizeY;$/;"	f	class:World	file:
sizex	writePoints.py	/^            sizex = int(sys.argv[2])$/;"	v
sizey	writePoints.py	/^            sizey = int(sys.argv[3])$/;"	v
skipAllWhitespace	src/input/WKTReader.java	/^	protected char skipAllWhitespace(Reader r) throws IOException {$/;"	m	class:WKTReader
skipUntil	src/input/WKTReader.java	/^	protected void skipUntil(Reader r, char until) throws IOException {$/;"	m	class:WKTReader
smallFont	src/gui/EventLogControlPanel.java	/^	private Font smallFont = new Font("sans",Font.PLAIN,11);$/;"	f	class:EventLogControlPanel	file:
sortByQueueMode	src/routing/MessageRouter.java	/^	protected List sortByQueueMode(List list) {$/;"	m	class:MessageRouter
spacing	src/movement/GridLocation.java	/^	private double spacing;$/;"	f	class:GridLocation	file:
speed	src/core/CBRConnection.java	/^	private int speed;$/;"	f	class:CBRConnection	file:
speed	src/core/DTNHost.java	/^	private double speed;$/;"	f	class:DTNHost	file:
speed	src/test/ConnectionTest.java	/^	private int speed[] = {50, 50, 100, 200, 100};$/;"	f	class:ConnectionTest	file:
speeds	src/movement/Path.java	/^	private List<Double> speeds;$/;"	f	class:Path	file:
stage	src/input/MessageRelayEvent.java	/^	private int stage;$/;"	f	class:MessageRelayEvent	file:
start	src/input/ExternalPathMovementReader.java	/^		public double start;$/;"	f	class:ExternalPathMovementReader.ActiveTime
start	src/ui/DTNSimUI.java	/^	public void start() {$/;"	m	class:DTNSimUI
start	src/util/ActivenessHandler.java	/^		private double start;$/;"	f	class:ActivenessHandler.TimeRange	file:
startAtLocation	src/movement/EveningActivityMovement.java	/^	private Coord startAtLocation;$/;"	f	class:EveningActivityMovement	file:
startBusStop	src/movement/BusTravellerMovement.java	/^	private Coord startBusStop;$/;"	f	class:BusTravellerMovement	file:
startCoords	src/movement/GridLocation.java	/^	private double startCoords[];$/;"	f	class:GridLocation	file:
startGUI	src/gui/DTNSimGUI.java	/^	private void startGUI() {$/;"	m	class:DTNSimGUI	file:
startLoc	src/movement/LinearFormation.java	/^	private Coord startLoc; \/** The start location of the line *\/$/;"	f	class:LinearFormation	file:
startLoc	src/movement/LinearMovement.java	/^	private Coord startLoc; \/** The start location of the line *\/$/;"	f	class:LinearMovement	file:
startMode	src/movement/BusMovement.java	/^	private boolean startMode;$/;"	f	class:BusMovement	file:
startTime	src/report/ContactTimesReport.java	/^		private double startTime;$/;"	f	class:ContactTimesReport.ConnectionInfo	file:
startTime	src/ui/DTNSimTextUI.java	/^	private long startTime; \/\/ simulation start time$/;"	f	class:DTNSimTextUI	file:
startTiming	src/core/Debug.java	/^	public static void startTiming(String cause) {$/;"	m	class:Debug
startTransfer	src/core/CBRConnection.java	/^	public int startTransfer(DTNHost from, Message m) {$/;"	m	class:CBRConnection
startTransfer	src/core/Connection.java	/^	public abstract int startTransfer(DTNHost from, Message m);$/;"	m	class:Connection
startTransfer	src/core/VBRConnection.java	/^	public int startTransfer(DTNHost from, Message m) {$/;"	m	class:VBRConnection
startTransfer	src/routing/ActiveRouter.java	/^	protected int startTransfer(Message m, Connection con) {$/;"	m	class:ActiveRouter
startedWorkingTime	src/movement/OfficeActivityMovement.java	/^	private int startedWorkingTime;$/;"	f	class:OfficeActivityMovement	file:
stat_filename	addPoints.py	/^			stat_filename = sys.argv[2]$/;"	v
state	src/movement/BusTravellerMovement.java	/^		private int state;$/;"	f	class:BusTravellerMovement.ContinueBusTripDecider	file:
state	src/movement/BusTravellerMovement.java	/^	private int state;$/;"	f	class:BusTravellerMovement	file:
stateChanged	src/gui/GUIControls.java	/^	public void stateChanged(ChangeEvent e) {$/;"	m	class:GUIControls
stdinput	src/test/ExternalEventsQueueTest.java	/^	private final String[] stdinput = {$/;"	f	class:ExternalEventsQueueTest	file:
step	src/gui/GUIControls.java	/^	private boolean step;$/;"	f	class:GUIControls	file:
stepButton	src/gui/GUIControls.java	/^	private JButton stepButton;$/;"	f	class:GUIControls	file:
stepx	writePoints.py	/^                stepx = sizex % (num\/2)$/;"	v
stops	src/movement/BusMovement.java	/^	private List<Coord> stops;$/;"	f	class:BusMovement	file:
stops	src/movement/map/MapRoute.java	/^	private List<MapNode> stops;$/;"	f	class:MapRoute	file:
storeToBinaryFile	src/input/BinaryEventsReader.java	/^	public static void storeToBinaryFile(String fileName,$/;"	m	class:BinaryEventsReader
subscribe	src/core/ModuleCommunicationBus.java	/^	public void subscribe(String key, ModuleCommunicationListener module) {$/;"	m	class:ModuleCommunicationBus
suite	src/test/AllTests.java	/^	public static Test suite() {$/;"	m	class:AllTests
suq	src/test/ScheduledUpdatesQueueTest.java	/^	private ScheduledUpdatesQueue suq;$/;"	f	class:ScheduledUpdatesQueueTest	file:
switchFfw	src/gui/GUIControls.java	/^	private void switchFfw() {$/;"	m	class:GUIControls	file:
sys	addPoints.py	/^import sys$/;"	i
sys	writePoints.py	/^import sys$/;"	i
systems	src/movement/BusControlSystem.java	/^	private static HashMap<Integer, BusControlSystem> systems;$/;"	f	class:BusControlSystem	file:
takeBus	src/movement/BusTravellerMovement.java	/^	private boolean takeBus;$/;"	f	class:BusTravellerMovement	file:
takeScreenShot	src/gui/GUIControls.java	/^	private void takeScreenShot() {$/;"	m	class:GUIControls	file:
targetType	src/movement/LinearMovement.java	/^	private int targetType;$/;"	f	class:LinearMovement	file:
targetdir	compile.bat	/^set targetdir=target$/;"	v
targets	src/test/MaxPropDijkstraTest.java	/^	private Set<Integer> targets;$/;"	f	class:MaxPropDijkstraTest	file:
tearDown	src/test/SettingsTest.java	/^	protected void tearDown() throws Exception {$/;"	m	class:SettingsTest
tearDownAfterClass	src/test/DTNHostTest.java	/^  public static void tearDownAfterClass()$/;"	m	class:DTNHostTest
tearDownAfterClass	src/test/MovementListenerTest.java	/^	public static void tearDownAfterClass()$/;"	m	class:MovementListenerTest
tearDownAllConnections	src/core/DTNHost.java	/^	private void tearDownAllConnections() {$/;"	m	class:DTNHost	file:
tempFile	src/test/ExternalEventsQueueTest.java	/^	private File tempFile;$/;"	f	class:ExternalEventsQueueTest	file:
test	src/test/AbstractRouterTest.java	/^package test;$/;"	p
test	src/test/ActivenessHandlerTest.java	/^package test;$/;"	p
test	src/test/AdjacencyGraphvizReportTest.java	/^package test;$/;"	p
test	src/test/AllTests.java	/^package test;$/;"	p
test	src/test/ConnectionTest.java	/^package test;$/;"	p
test	src/test/ContactTimesReportTest.java	/^package test;$/;"	p
test	src/test/CoordTest.java	/^package test;$/;"	p
test	src/test/DTNHostTest.java	/^package test;$/;"	p
test	src/test/DijkstraPathFinderTest.java	/^package test;$/;"	p
test	src/test/DistanceDelayReportTest.java	/^package test;$/;"	p
test	src/test/EpidemicRouterTest.java	/^package test;$/;"	p
test	src/test/ExternalEventsQueueTest.java	/^package test;$/;"	p
test	src/test/ExternalMovementReaderTest.java	/^package test;$/;"	p
test	src/test/ExternalMovementTest.java	/^package test;$/;"	p
test	src/test/MapBasedMovementTest.java	/^package test;$/;"	p
test	src/test/MapNodeTest.java	/^package test;$/;"	p
test	src/test/MaxPropDijkstraTest.java	/^package test;$/;"	p
test	src/test/MaxPropRouterTest.java	/^package test;$/;"	p
test	src/test/MessageChecker.java	/^package test;$/;"	p
test	src/test/MessageGraphvizReportTest.java	/^package test;$/;"	p
test	src/test/MessageTest.java	/^package test;$/;"	p
test	src/test/ModuleCommunicationBusTest.java	/^package test;$/;"	p
test	src/test/MovementListenerTest.java	/^package test;$/;"	p
test	src/test/PointsOfInterestTest.java	/^package test;$/;"	p
test	src/test/ProphetRouterTest.java	/^package test;$/;"	p
test	src/test/ScheduleDijkstraTest.java	/^package test;$/;"	p
test	src/test/ScheduledUpdatesQueueTest.java	/^package test;$/;"	p
test	src/test/SettingsTest.java	/^package test;$/;"	p
test	src/test/StationaryMovement.java	/^package test;$/;"	p
test	src/test/TestDTNHost.java	/^package test;$/;"	p
test	src/test/TestInterface.java	/^package test;$/;"	p
test	src/test/TestSettings.java	/^package test;$/;"	p
test	src/test/TestUtils.java	/^package test;$/;"	p
test	src/test/TotalContactTimeReportTest.java	/^package test;$/;"	p
test	src/test/WKTPointReaderTest.java	/^package test;$/;"	p
test	src/test/WKTReaderTest.java	/^package test;$/;"	p
test	src/test/WorldTest.java	/^package test;$/;"	p
testAbortTransfer	src/test/ConnectionTest.java	/^	public void testAbortTransfer() {$/;"	m	class:ConnectionTest
testAbortWhenReady	src/test/EpidemicRouterTest.java	/^	public void testAbortWhenReady() {$/;"	m	class:EpidemicRouterTest
testAckedMessageDeleting	src/test/MaxPropRouterTest.java	/^	public void testAckedMessageDeleting() {$/;"	m	class:MaxPropRouterTest
testAddNeighbor	src/test/MapNodeTest.java	/^	public void testAddNeighbor() {$/;"	m	class:MapNodeTest
testAddProperty	src/test/MessageTest.java	/^	public void testAddProperty() {$/;"	m	class:MessageTest
testAging	src/test/ProphetRouterTest.java	/^	public void testAging() {$/;"	m	class:ProphetRouterTest
testBinaryEEQ	src/test/ExternalEventsQueueTest.java	/^	public void testBinaryEEQ() throws Exception{$/;"	m	class:ExternalEventsQueueTest
testContains	src/test/SettingsTest.java	/^	public void testContains() {$/;"	m	class:SettingsTest
testCostValues	src/test/MaxPropRouterTest.java	/^	public void testCostValues() {$/;"	m	class:MaxPropRouterTest
testCreateIntializedObject	src/test/SettingsTest.java	/^	public void testCreateIntializedObject() {$/;"	m	class:SettingsTest
testDeliverableMessageExchange	src/test/EpidemicRouterTest.java	/^	public void testDeliverableMessageExchange() {$/;"	m	class:EpidemicRouterTest
testDifferentOrdering	src/test/EpidemicRouterTest.java	/^	public void testDifferentOrdering() {$/;"	m	class:EpidemicRouterTest
testDifferentRngSeeds	src/test/PointsOfInterestTest.java	/^	public void testDifferentRngSeeds() throws Exception {$/;"	m	class:PointsOfInterestTest
testDone	src/test/AdjacencyGraphvizReportTest.java	/^	public void testDone() throws IOException {$/;"	m	class:AdjacencyGraphvizReportTest
testDone	src/test/MessageGraphvizReportTest.java	/^	public void testDone() throws IOException{$/;"	m	class:MessageGraphvizReportTest
testDoubleDelivery	src/test/EpidemicRouterTest.java	/^	public void testDoubleDelivery() {$/;"	m	class:EpidemicRouterTest
testDuplicateValues	src/test/ScheduledUpdatesQueueTest.java	/^	public void testDuplicateValues() {$/;"	m	class:ScheduledUpdatesQueueTest
testEEQ	src/test/ExternalEventsQueueTest.java	/^	public void testEEQ() {$/;"	m	class:ExternalEventsQueueTest
testEmptyRunIndex	src/test/SettingsTest.java	/^	public void testEmptyRunIndex() {$/;"	m	class:SettingsTest
testFifoSendingQ	src/test/EpidemicRouterTest.java	/^	public void testFifoSendingQ() throws Exception {$/;"	m	class:EpidemicRouterTest
testFinalizeTransfer	src/test/ConnectionTest.java	/^	public void testFinalizeTransfer() {$/;"	m	class:ConnectionTest
testFromFile	src/test/WKTReaderTest.java	/^	public void testFromFile() throws IOException {$/;"	m	class:WKTReaderTest
testFromString	src/test/WKTReaderTest.java	/^	public void testFromString() {$/;"	m	class:WKTReaderTest
testFullProb	src/test/PointsOfInterestTest.java	/^	public void testFullProb() throws Exception {$/;"	m	class:PointsOfInterestTest
testGanularity05	src/test/ContactTimesReportTest.java	/^	public void testGanularity05() throws IOException {$/;"	m	class:ContactTimesReportTest
testGetBoolean	src/test/SettingsTest.java	/^	public void testGetBoolean() {$/;"	m	class:SettingsTest
testGetCsvDoubles	src/test/SettingsTest.java	/^	public void testGetCsvDoubles() {$/;"	m	class:SettingsTest
testGetCsvDoublesUnknownAmount	src/test/SettingsTest.java	/^	public void testGetCsvDoublesUnknownAmount() {$/;"	m	class:SettingsTest
testGetCsvInts	src/test/SettingsTest.java	/^	public void testGetCsvInts() {$/;"	m	class:SettingsTest
testGetCsvIntsUnknownAmount	src/test/SettingsTest.java	/^	public void testGetCsvIntsUnknownAmount() {$/;"	m	class:SettingsTest
testGetCsvSetting	src/test/SettingsTest.java	/^	public void testGetCsvSetting() {$/;"	m	class:SettingsTest
testGetDouble	src/test/SettingsTest.java	/^	public void testGetDouble() {$/;"	m	class:SettingsTest
testGetInt	src/test/SettingsTest.java	/^	public void testGetInt() {$/;"	m	class:SettingsTest
testGetOtherNode	src/test/ConnectionTest.java	/^	public void testGetOtherNode() {$/;"	m	class:ConnectionTest
testGetPath	src/test/MapBasedMovementTest.java	/^	public void testGetPath() {$/;"	m	class:MapBasedMovementTest
testGetProperty	src/test/ModuleCommunicationBusTest.java	/^	public void testGetProperty() {$/;"	m	class:ModuleCommunicationBusTest
testGetRemainingByteCount	src/test/ConnectionTest.java	/^	public void testGetRemainingByteCount() {$/;"	m	class:ConnectionTest
testGetSetting	src/test/SettingsTest.java	/^	public void testGetSetting() {$/;"	m	class:SettingsTest
testGetTotalBytesTransferred	src/test/ConnectionTest.java	/^	public void testGetTotalBytesTransferred() {$/;"	m	class:ConnectionTest
testGetTransferDoneTime	src/test/ConnectionTest.java	/^	public void testGetTransferDoneTime() {$/;"	m	class:ConnectionTest
testGetTtl	src/test/MessageTest.java	/^	public void testGetTtl() {$/;"	m	class:MessageTest
testGranularity10	src/test/ContactTimesReportTest.java	/^	public void testGranularity10() throws IOException {$/;"	m	class:ContactTimesReportTest
testGranularity2	src/test/ContactTimesReportTest.java	/^	public void testGranularity2() throws IOException {$/;"	m	class:ContactTimesReportTest
testHashCode	src/test/CoordTest.java	/^	public void testHashCode() {$/;"	m	class:CoordTest
testHostMoving	src/test/MapBasedMovementTest.java	/^	public void testHostMoving() {$/;"	m	class:MapBasedMovementTest
testHosts	src/test/WorldTest.java	/^	private List<TestDTNHost> testHosts;$/;"	f	class:WorldTest	file:
testInitialLocation	src/test/MovementListenerTest.java	/^	public void testInitialLocation()$/;"	m	class:MovementListenerTest
testInterlavedRequests	src/test/ScheduledUpdatesQueueTest.java	/^	public void testInterlavedRequests() {$/;"	m	class:ScheduledUpdatesQueueTest
testInvalidRunIndex	src/test/SettingsTest.java	/^	public void testInvalidRunIndex() {$/;"	m	class:SettingsTest
testIsActive	src/test/ActivenessHandlerTest.java	/^	public void testIsActive() {$/;"	m	class:ActivenessHandlerTest
testIsInitiator	src/test/ConnectionTest.java	/^	public void testIsInitiator() {$/;"	m	class:ConnectionTest
testIsMessageTransferred	src/test/ConnectionTest.java	/^	public void testIsMessageTransferred() {$/;"	m	class:ConnectionTest
testIsReadyForTransfer	src/test/ConnectionTest.java	/^	public void testIsReadyForTransfer() {$/;"	m	class:ConnectionTest
testManyMapTypeNodes	src/test/MapBasedMovementTest.java	/^	public void testManyMapTypeNodes() {$/;"	m	class:MapBasedMovementTest
testManyMessages	src/test/EpidemicRouterTest.java	/^	public void testManyMessages() {$/;"	m	class:EpidemicRouterTest
testMapCache	src/test/MapBasedMovementTest.java	/^	public void testMapCache() throws IOException {$/;"	m	class:MapBasedMovementTest
testMapOperations	src/test/WKTReaderTest.java	/^	public void testMapOperations() {$/;"	m	class:WKTReaderTest
testMessageRelayAbort	src/test/EpidemicRouterTest.java	/^	public void testMessageRelayAbort() {$/;"	m	class:EpidemicRouterTest
testMessageTransferred	src/test/DistanceDelayReportTest.java	/^	public void testMessageTransferred() throws IOException {$/;"	m	class:DistanceDelayReportTest
testMoreTimes	src/test/ActivenessHandlerTest.java	/^	public void testMoreTimes() {$/;"	m	class:ActivenessHandlerTest
testMovement	src/test/ExternalMovementTest.java	/^	public void testMovement() throws Exception {$/;"	m	class:ExternalMovementTest
testMpsTimeStamps	src/test/MaxPropRouterTest.java	/^	public void testMpsTimeStamps() {$/;"	m	class:MaxPropRouterTest
testMultiLineString	src/test/WKTReaderTest.java	/^	public void testMultiLineString() {$/;"	m	class:WKTReaderTest
testMultipleHops	src/test/ScheduleDijkstraTest.java	/^	public void testMultipleHops() {$/;"	m	class:ScheduleDijkstraTest
testMultipleMapFiles	src/test/WKTReaderTest.java	/^	public void testMultipleMapFiles() throws Exception {$/;"	m	class:WKTReaderTest
testMultipleTimes	src/test/TotalContactTimeReportTest.java	/^	public void testMultipleTimes() throws Exception {$/;"	m	class:TotalContactTimeReportTest
testNegativeAndZeroValues	src/test/ScheduledUpdatesQueueTest.java	/^	public void testNegativeAndZeroValues() {$/;"	m	class:ScheduledUpdatesQueueTest
testNewMessageToFullBufferWhileTransferring	src/test/EpidemicRouterTest.java	/^	public void testNewMessageToFullBufferWhileTransferring() {$/;"	m	class:EpidemicRouterTest
testNoInterfaces	src/test/DTNHostTest.java	/^  public void testNoInterfaces()$/;"	m	class:DTNHostTest
testNoRun	src/test/SettingsTest.java	/^	public void testNoRun() {$/;"	m	class:SettingsTest
testNodeByCoord	src/test/MapNodeTest.java	/^	public void testNodeByCoord() {$/;"	m	class:MapNodeTest
testOkNodes	src/test/PointsOfInterestTest.java	/^	public void testOkNodes() throws Exception {$/;"	m	class:PointsOfInterestTest
testOneMapTypeNode	src/test/MapBasedMovementTest.java	/^	public void testOneMapTypeNode() {$/;"	m	class:MapBasedMovementTest
testOverlappingTimes	src/test/TotalContactTimeReportTest.java	/^	public void testOverlappingTimes() throws Exception {$/;"	m	class:TotalContactTimeReportTest
testPath	src/test/MaxPropDijkstraTest.java	/^	public void testPath() {$/;"	m	class:MaxPropDijkstraTest
testPathFinding	src/test/DijkstraPathFinderTest.java	/^	public void testPathFinding() {$/;"	m	class:DijkstraPathFinderTest
testPoiSelection	src/test/PointsOfInterestTest.java	/^	public void testPoiSelection() throws Exception {$/;"	m	class:PointsOfInterestTest
testProbabilitySumsToOne	src/test/MaxPropDijkstraTest.java	/^	public void testProbabilitySumsToOne() {$/;"	m	class:MaxPropDijkstraTest
testProbabilityValuesFromThePaper	src/test/MaxPropDijkstraTest.java	/^	public void testProbabilityValuesFromThePaper() {$/;"	m	class:MaxPropDijkstraTest
testQueueManagement	src/test/EpidemicRouterTest.java	/^	public void testQueueManagement() {$/;"	m	class:EpidemicRouterTest
testRandomSendingQ	src/test/EpidemicRouterTest.java	/^	public void testRandomSendingQ() throws Exception {$/;"	m	class:EpidemicRouterTest
testReadContents	src/test/WKTReaderTest.java	/^	public void testReadContents() throws IOException {$/;"	m	class:WKTReaderTest
testReader	src/test/ExternalMovementReaderTest.java	/^	public void testReader() {$/;"	m	class:ExternalMovementReaderTest
testReader	src/test/WKTPointReaderTest.java	/^	public void testReader() throws Exception {$/;"	m	class:WKTPointReaderTest
testReport	src/test/ContactTimesReportTest.java	/^	public void testReport() throws IOException {$/;"	m	class:ContactTimesReportTest
testReport	src/test/TotalContactTimeReportTest.java	/^	public void testReport() throws Exception {$/;"	m	class:TotalContactTimeReportTest
testResponse	src/test/EpidemicRouterTest.java	/^	public void testResponse() {$/;"	m	class:EpidemicRouterTest
testRouter	src/test/EpidemicRouterTest.java	/^	public void testRouter() {$/;"	m	class:EpidemicRouterTest
testRouting	src/test/MaxPropRouterTest.java	/^	public void testRouting() {$/;"	m	class:MaxPropRouterTest
testRouting	src/test/ProphetRouterTest.java	/^	public void testRouting() {$/;"	m	class:ProphetRouterTest
testRunIndex	src/test/SettingsTest.java	/^	public void testRunIndex() {$/;"	m	class:SettingsTest
testRunIndexCSVs	src/test/SettingsTest.java	/^	public void testRunIndexCSVs() {$/;"	m	class:SettingsTest
testRunIndexContains	src/test/SettingsTest.java	/^	public void testRunIndexContains() {$/;"	m	class:SettingsTest
testSimplePaths	src/test/ScheduleDijkstraTest.java	/^	public void testSimplePaths() {$/;"	m	class:ScheduleDijkstraTest
testStartTransfer	src/test/ConnectionTest.java	/^	public void testStartTransfer() {$/;"	m	class:ConnectionTest
testStationary	src/test/ExternalMovementTest.java	/^	public void testStationary() throws Exception {$/;"	m	class:ExternalMovementTest
testSubscribe	src/test/ModuleCommunicationBusTest.java	/^	public void testSubscribe() {$/;"	m	class:ModuleCommunicationBusTest
testThreshold	src/test/MaxPropRouterTest.java	/^	public void testThreshold() {$/;"	m	class:MaxPropRouterTest
testTtlExpiry	src/test/EpidemicRouterTest.java	/^	public void testTtlExpiry() {$/;"	m	class:EpidemicRouterTest
testUnsubscribe	src/test/ModuleCommunicationBusTest.java	/^	public void testUnsubscribe() {$/;"	m	class:ModuleCommunicationBusTest
testUpdate	src/test/WorldTest.java	/^	public void testUpdate() {$/;"	m	class:WorldTest
testUpdateDouble	src/test/ModuleCommunicationBusTest.java	/^	public void testUpdateDouble() {$/;"	m	class:ModuleCommunicationBusTest
testUpdateProperty	src/test/ModuleCommunicationBusTest.java	/^	public void testUpdateProperty() {$/;"	m	class:ModuleCommunicationBusTest
testUpdateScheduling	src/test/WorldTest.java	/^	public void testUpdateScheduling() {$/;"	m	class:WorldTest
testUpdates	src/test/ScheduledUpdatesQueueTest.java	/^	public void testUpdates() {$/;"	m	class:ScheduledUpdatesQueueTest
testValueFillString	src/test/SettingsTest.java	/^	public void testValueFillString() {$/;"	m	class:SettingsTest
text	src/routing/util/RoutingInfo.java	/^	private String text;$/;"	f	class:RoutingInfo	file:
threshold	src/routing/MaxPropRouter.java	/^		private int threshold;$/;"	f	class:MaxPropRouter.MaxPropComparator	file:
threshold	src/routing/MaxPropRouter.java	/^		private int threshold;$/;"	f	class:MaxPropRouter.MaxPropTupleComparator	file:
threshold	src/routing/MaxPropRouterWithEstimation.java	/^		private int threshold;$/;"	f	class:MaxPropRouterWithEstimation.MaxPropComparator	file:
threshold	src/routing/MaxPropRouterWithEstimation.java	/^		private int threshold;$/;"	f	class:MaxPropRouterWithEstimation.MaxPropTupleComparator	file:
time	src/input/ExternalEvent.java	/^	protected double time;$/;"	f	class:ExternalEvent
time	src/input/ExternalPathMovementReader.java	/^		public double time;$/;"	f	class:ExternalPathMovementReader.Entry
time	src/report/DistanceDelayReport.java	/^		private double time;$/;"	f	class:DistanceDelayReport.InfoTuple	file:
time	src/routing/schedule/ScheduleEntry.java	/^	private double time;$/;"	f	class:ScheduleEntry	file:
timeCreated	src/core/Message.java	/^	private double timeCreated;$/;"	f	class:Message	file:
timeDiffSTD	src/movement/HomeActivityMovement.java	/^	private int timeDiffSTD;$/;"	f	class:HomeActivityMovement	file:
timeDifference	src/movement/HomeActivityMovement.java	/^	private int timeDifference;$/;"	f	class:HomeActivityMovement	file:
timeReceived	src/core/Message.java	/^	private double timeReceived;$/;"	f	class:Message	file:
times	src/routing/schedule/ScheduleDijkstra.java	/^	private TimeMap times;$/;"	f	class:ScheduleDijkstra	file:
times	src/test/ExternalMovementReaderTest.java	/^	private static final double [] times = {10,20,30};$/;"	f	class:ExternalMovementReaderTest	file:
timescale	src/routing/MaxPropRouterWithEstimation.java	/^	private int timescale;$/;"	f	class:MaxPropRouterWithEstimation	file:
timescale	src/routing/ProphetRouterWithEstimation.java	/^	private int timescale;$/;"	f	class:ProphetRouterWithEstimation	file:
timingCause	src/core/Debug.java	/^	private static String timingCause;$/;"	f	class:Debug	file:
timingStart	src/core/Debug.java	/^	private static long timingStart = -1;$/;"	f	class:Debug	file:
to	src/core/Message.java	/^	private DTNHost to;$/;"	f	class:Message	file:
to	src/gui/playfield/MessageGraphic.java	/^	private DTNHost to;$/;"	f	class:MessageGraphic	file:
to	src/movement/CarMovement.java	/^	private Coord to;$/;"	f	class:CarMovement	file:
to	src/routing/schedule/ScheduleEntry.java	/^	private int to;$/;"	f	class:ScheduleEntry	file:
to	src/test/MessageChecker.java	/^		private DTNHost to;$/;"	f	class:MessageChecker.MsgCheckerEvent	file:
to	src/test/MessageTest.java	/^	private DTNHost to;$/;"	f	class:MessageTest	file:
toAddr	src/input/ConnectionEvent.java	/^	protected int toAddr;$/;"	f	class:ConnectionEvent
toAddr	src/input/MessageEvent.java	/^	protected int toAddr;$/;"	f	class:MessageEvent
toHostRange	src/input/MessageEventGenerator.java	/^	protected int[] toHostRange = null;$/;"	f	class:MessageEventGenerator
toIds	src/input/OneToEachMessageGenerator.java	/^	private List<Integer> toIds;$/;"	f	class:OneToEachMessageGenerator	file:
toInterface	src/core/Connection.java	/^	protected NetworkInterface toInterface;$/;"	f	class:Connection
toNode	src/core/Connection.java	/^	protected DTNHost toNode;$/;"	f	class:Connection
toReceivePolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private Range[] toReceivePolicy = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
toSendPolicy	src/routing/util/MessageTransferAcceptPolicy.java	/^	private Range[] toSendPolicy = null;$/;"	f	class:MessageTransferAcceptPolicy	file:
toString	src/core/ArithmeticCondition.java	/^	public String toString() {$/;"	m	class:ArithmeticCondition
toString	src/core/CBRConnection.java	/^	public String toString() {$/;"	m	class:CBRConnection
toString	src/core/Connection.java	/^	public String toString() {$/;"	m	class:Connection
toString	src/core/Coord.java	/^	public String toString() {$/;"	m	class:Coord
toString	src/core/DTNHost.java	/^	public String toString() {$/;"	m	class:DTNHost
toString	src/core/Message.java	/^	public String toString () {$/;"	m	class:Message
toString	src/core/ModuleCommunicationBus.java	/^	public String toString() {$/;"	m	class:ModuleCommunicationBus
toString	src/core/NetworkInterface.java	/^	public String toString() {$/;"	m	class:NetworkInterface
toString	src/core/Settings.java	/^	public String toString() {$/;"	m	class:Settings
toString	src/core/SimClock.java	/^	public String toString() {$/;"	m	class:SimClock
toString	src/gui/EventLogPanel.java	/^	public String toString() {$/;"	m	class:EventLogPanel
toString	src/gui/nodefilter/NodeFilter.java	/^	public String toString();$/;"	m	interface:NodeFilter
toString	src/gui/nodefilter/NodeMessageFilter.java	/^	public String toString() {$/;"	m	class:NodeMessageFilter
toString	src/input/ConnectionEvent.java	/^	public String toString() {$/;"	m	class:ConnectionEvent
toString	src/input/ExternalEvent.java	/^	public String toString() {$/;"	m	class:ExternalEvent
toString	src/input/MessageCreateEvent.java	/^	public String toString() {$/;"	m	class:MessageCreateEvent
toString	src/input/MessageDeleteEvent.java	/^	public String toString() {$/;"	m	class:MessageDeleteEvent
toString	src/input/MessageEvent.java	/^	public String toString() {$/;"	m	class:MessageEvent
toString	src/input/MessageRelayEvent.java	/^	public String toString() {$/;"	m	class:MessageRelayEvent
toString	src/input/ScheduledUpdatesQueue.java	/^	public String toString() {$/;"	m	class:ScheduledUpdatesQueue
toString	src/interfaces/ConnectivityGrid.java	/^		public String toString() {$/;"	m	class:ConnectivityGrid.GridCell
toString	src/interfaces/ConnectivityGrid.java	/^	public String toString() {$/;"	m	class:ConnectivityGrid
toString	src/interfaces/DistanceCapacityInterface.java	/^	public String toString() {$/;"	m	class:DistanceCapacityInterface
toString	src/interfaces/InterferenceLimitedInterface.java	/^	public String toString() {$/;"	m	class:InterferenceLimitedInterface
toString	src/interfaces/SimpleBroadcastInterface.java	/^	public String toString() {$/;"	m	class:SimpleBroadcastInterface
toString	src/movement/MovementModel.java	/^	public String toString() {$/;"	m	class:MovementModel
toString	src/movement/Path.java	/^	public String toString() {$/;"	m	class:Path
toString	src/movement/map/DijkstraPathFinder.java	/^		public String toString() {$/;"	m	class:DijkstraPathFinder.DistanceMap
toString	src/movement/map/MapNode.java	/^	public String toString() {$/;"	m	class:MapNode
toString	src/movement/map/MapRoute.java	/^	public String toString() {$/;"	m	class:MapRoute
toString	src/movement/map/SimMap.java	/^	public String toString() {$/;"	m	class:SimMap
toString	src/report/AdjacencyGraphvizReport.java	/^		public String toString() {$/;"	m	class:AdjacencyGraphvizReport.ConnectionInfo
toString	src/report/ContactTimesReport.java	/^		public String toString() {$/;"	m	class:ContactTimesReport.ConnectionInfo
toString	src/routing/MessageRouter.java	/^	public String toString() {$/;"	m	class:MessageRouter
toString	src/routing/maxprop/MaxPropDijkstra.java	/^		public String toString() {$/;"	m	class:MaxPropDijkstra.DistanceMap
toString	src/routing/maxprop/MeetingProbabilitySet.java	/^	public String toString() {$/;"	m	class:MeetingProbabilitySet
toString	src/routing/schedule/ScheduleDijkstra.java	/^		public String toString() {$/;"	m	class:ScheduleDijkstra.TimeMap
toString	src/routing/schedule/ScheduleEntry.java	/^	public String toString() {$/;"	m	class:ScheduleEntry
toString	src/routing/util/RoutingInfo.java	/^	public String toString() {$/;"	m	class:RoutingInfo
toString	src/test/AbstractRouterTest.java	/^	public String toString() {$/;"	m	class:AbstractRouterTest
toString	src/test/MessageChecker.java	/^		public String toString() {$/;"	m	class:MessageChecker.MsgCheckerEvent
toString	src/test/MessageChecker.java	/^	public String toString() {$/;"	m	class:MessageChecker
toString	src/util/Range.java	/^	public String toString() {$/;"	m	class:Range
toString	src/util/Tuple.java	/^	public String toString() {$/;"	m	class:Tuple
toggleUnderlayImage	src/gui/SimMenuBar.java	/^	private void toggleUnderlayImage() {$/;"	m	class:SimMenuBar	file:
topologyTest	src/test/WKTReaderTest.java	/^	private void topologyTest(Map<Coord, MapNode> nh) {$/;"	m	class:WKTReaderTest	file:
totalEncountersReport	src/report/EncountersVSUniqueEncountersReport.java	/^	private TotalEncountersReport totalEncountersReport;$/;"	f	class:EncountersVSUniqueEncountersReport	file:
traceFile	src/movement/ExternalPathMovement.java	/^	private String traceFile;$/;"	f	class:ExternalPathMovement	file:
trackedHosts	src/report/MessageAvailabilityReport.java	/^	private Set<DTNHost> trackedHosts;$/;"	f	class:MessageAvailabilityReport	file:
transferAborted	src/routing/ActiveRouter.java	/^	protected void transferAborted(Connection con) { }$/;"	m	class:ActiveRouter
transferDone	src/routing/ActiveRouter.java	/^	protected void transferDone(Connection con) { }$/;"	m	class:ActiveRouter
transferDone	src/routing/EpidemicOracleRouter.java	/^	protected void transferDone(Connection con) {$/;"	m	class:EpidemicOracleRouter
transferDone	src/routing/FirstContactRouter.java	/^	protected void transferDone(Connection con) {$/;"	m	class:FirstContactRouter
transferDone	src/routing/MaxPropRouter.java	/^	protected void transferDone(Connection con) {$/;"	m	class:MaxPropRouter
transferDone	src/routing/MaxPropRouterWithEstimation.java	/^	protected void transferDone(Connection con) {$/;"	m	class:MaxPropRouterWithEstimation
transferDone	src/routing/SprayAndWaitRouter.java	/^	protected void transferDone(Connection con) {$/;"	m	class:SprayAndWaitRouter
transferDone	src/routing/WaveRouter.java	/^	protected void transferDone(Connection con) {$/;"	m	class:WaveRouter
transferDoneTime	src/core/CBRConnection.java	/^	private double transferDoneTime;$/;"	f	class:CBRConnection	file:
transferredFrom	src/test/TestDTNHost.java	/^	public DTNHost transferredFrom;$/;"	f	class:TestDTNHost
transferredId	src/test/TestDTNHost.java	/^	public String transferredId;$/;"	f	class:TestDTNHost
translate	src/core/Coord.java	/^	public void translate(double dx, double dy) {$/;"	m	class:Coord
translate	src/movement/map/SimMap.java	/^	public void translate(double dx, double dy) {$/;"	m	class:SimMap
transmitEnergy	src/routing/util/EnergyModel.java	/^	private double transmitEnergy;$/;"	f	class:EnergyModel	file:
transmitRange	src/core/NetworkInterface.java	/^	protected double transmitRange;$/;"	f	class:NetworkInterface
transmitSpeed	src/core/NetworkInterface.java	/^	protected int transmitSpeed;$/;"	f	class:NetworkInterface
transmitSpeeds	src/interfaces/DistanceCapacityInterface.java	/^	protected final int[] transmitSpeeds;$/;"	f	class:DistanceCapacityInterface
travellers	src/movement/BusControlSystem.java	/^	private HashMap<Integer, BusTravellerMovement> travellers;$/;"	f	class:BusControlSystem	file:
tree	src/gui/RoutingInfoWindow.java	/^	private JTree tree;$/;"	f	class:RoutingInfoWindow	file:
treePane	src/gui/RoutingInfoWindow.java	/^	private JScrollPane treePane;$/;"	f	class:RoutingInfoWindow	file:
trip	src/movement/EveningActivityMovement.java	/^	private EveningTrip trip;$/;"	f	class:EveningActivityMovement	file:
tryAllMessages	src/routing/ActiveRouter.java	/^	protected Message tryAllMessages(Connection con, List<Message> messages) {$/;"	m	class:ActiveRouter
tryAllMessagesToAllConnections	src/routing/ActiveRouter.java	/^	protected Connection tryAllMessagesToAllConnections(){$/;"	m	class:ActiveRouter
tryMessagesForConnected	src/routing/ActiveRouter.java	/^	protected Tuple<Message, Connection> tryMessagesForConnected($/;"	m	class:ActiveRouter
tryMessagesToConnections	src/routing/ActiveRouter.java	/^	protected Connection tryMessagesToConnections(List<Message> messages,$/;"	m	class:ActiveRouter
tryOtherMessages	src/routing/MaxPropRouter.java	/^	private Tuple<Message, Connection> tryOtherMessages() {$/;"	m	class:MaxPropRouter	file:
tryOtherMessages	src/routing/MaxPropRouterWithEstimation.java	/^	private Tuple<Message, Connection> tryOtherMessages() {$/;"	m	class:MaxPropRouterWithEstimation	file:
tryOtherMessages	src/routing/ProphetRouter.java	/^	private Tuple<Message, Connection> tryOtherMessages() {$/;"	m	class:ProphetRouter	file:
tryOtherMessages	src/routing/ProphetRouterWithEstimation.java	/^	private Tuple<Message, Connection> tryOtherMessages() {$/;"	m	class:ProphetRouterWithEstimation	file:
tryOtherMessages	src/routing/ProphetV2Router.java	/^	private Tuple<Message, Connection> tryOtherMessages() {$/;"	m	class:ProphetV2Router	file:
ts	src/test/AbstractRouterTest.java	/^	protected static TestSettings ts = new TestSettings();$/;"	f	class:AbstractRouterTest
type	addPoints.py	/^		type = sys.argv[1]$/;"	v
type	src/movement/map/MapNode.java	/^	private int type;$/;"	f	class:MapNode	file:
type	src/movement/map/MapRoute.java	/^	private int type; \/\/ type of the route$/;"	f	class:MapRoute	file:
type	src/test/MessageChecker.java	/^		private String type;$/;"	f	class:MessageChecker.MsgCheckerEvent	file:
type	writePoints.py	/^        type = sys.argv[1]$/;"	v
typeToBitMask	src/movement/map/MapNode.java	/^	private int typeToBitMask(int type) {$/;"	m	class:MapNode	file:
ui	src/ui/DTNSimTextUI.java	/^package ui;$/;"	p
ui	src/ui/DTNSimUI.java	/^package ui;$/;"	p
underlayImage	src/gui/playfield/PlayField.java	/^	private BufferedImage underlayImage;$/;"	f	class:PlayField	file:
underlayImgDx	src/gui/playfield/PlayField.java	/^	private double underlayImgDx;$/;"	f	class:PlayField	file:
underlayImgDy	src/gui/playfield/PlayField.java	/^	private double underlayImgDy;$/;"	f	class:PlayField	file:
uniqueEncountersReport	src/report/EncountersVSUniqueEncountersReport.java	/^	private UniqueEncountersReport uniqueEncountersReport;$/;"	f	class:EncountersVSUniqueEncountersReport	file:
uniqueId	src/core/Message.java	/^	private int uniqueId;$/;"	f	class:Message	file:
unsubscribe	src/core/ModuleCommunicationBus.java	/^	public void unsubscribe(String key, ModuleCommunicationListener module) {$/;"	m	class:ModuleCommunicationBus
unvisited	src/movement/map/DijkstraPathFinder.java	/^	private Queue<MapNode> unvisited;$/;"	f	class:DijkstraPathFinder	file:
unvisited	src/routing/maxprop/MaxPropDijkstra.java	/^	private Queue<Integer> unvisited;$/;"	f	class:MaxPropDijkstra	file:
unvisited	src/routing/schedule/ScheduleDijkstra.java	/^	private Queue<Integer> unvisited;$/;"	f	class:ScheduleDijkstra	file:
upInterval	src/test/WorldTest.java	/^	private double upInterval = 0.1;$/;"	f	class:WorldTest	file:
upMinMax	toolkit/transimsParser.pl	/^sub upMinMax {$/;"	s
update	src/applications/PingApplication.java	/^	public void update(DTNHost host) {$/;"	m	class:PingApplication
update	src/core/Application.java	/^	public abstract void update(DTNHost host);$/;"	m	class:Application
update	src/core/Connection.java	/^	public void update() {};$/;"	m	class:Connection
update	src/core/DTNHost.java	/^	public void update(boolean simulateConnections) {$/;"	m	class:DTNHost
update	src/core/NetworkInterface.java	/^	abstract public void update();$/;"	m	class:NetworkInterface
update	src/core/VBRConnection.java	/^	public void update() {$/;"	m	class:VBRConnection
update	src/core/World.java	/^	public void update () {$/;"	m	class:World
update	src/gui/DTNSimGUI.java	/^    public void update(boolean forcedUpdate) {$/;"	m	class:DTNSimGUI
update	src/interfaces/DistanceCapacityInterface.java	/^	public void update() {$/;"	m	class:DistanceCapacityInterface
update	src/interfaces/InterferenceLimitedInterface.java	/^	public void update() {$/;"	m	class:InterferenceLimitedInterface
update	src/interfaces/SimpleBroadcastInterface.java	/^	public void update() {$/;"	m	class:SimpleBroadcastInterface
update	src/routing/ActiveRouter.java	/^	public void update() {$/;"	m	class:ActiveRouter
update	src/routing/DirectDeliveryRouter.java	/^	public void update() {$/;"	m	class:DirectDeliveryRouter
update	src/routing/EpidemicOracleRouter.java	/^	public void update() {$/;"	m	class:EpidemicOracleRouter
update	src/routing/EpidemicRouter.java	/^	public void update() {$/;"	m	class:EpidemicRouter
update	src/routing/FirstContactRouter.java	/^	public void update() {$/;"	m	class:FirstContactRouter
update	src/routing/LifeRouter.java	/^	public void update() {$/;"	m	class:LifeRouter
update	src/routing/MaxPropRouter.java	/^	public void update() {$/;"	m	class:MaxPropRouter
update	src/routing/MaxPropRouterWithEstimation.java	/^	public void update() {$/;"	m	class:MaxPropRouterWithEstimation
update	src/routing/MessageRouter.java	/^	public void update(){$/;"	m	class:MessageRouter
update	src/routing/PassiveRouter.java	/^	public void update() {$/;"	m	class:PassiveRouter
update	src/routing/ProphetRouter.java	/^	public void update() {$/;"	m	class:ProphetRouter
update	src/routing/ProphetRouterWithEstimation.java	/^	public void update() {$/;"	m	class:ProphetRouterWithEstimation
update	src/routing/ProphetV2Router.java	/^	public void update() {$/;"	m	class:ProphetV2Router
update	src/routing/SprayAndWaitRouter.java	/^	public void update() {$/;"	m	class:SprayAndWaitRouter
update	src/routing/WaveRouter.java	/^	public void update() {$/;"	m	class:WaveRouter
update	src/routing/util/EnergyModel.java	/^	public void update(NetworkInterface iface, ModuleCommunicationBus comBus) {$/;"	m	class:EnergyModel
update	src/test/TestDTNHost.java	/^	public void update(boolean up) {$/;"	m	class:TestDTNHost
update	src/test/TestInterface.java	/^	public void update() {$/;"	m	class:TestInterface
update	src/ui/DTNSimTextUI.java	/^	private void update(boolean forced) {$/;"	m	class:DTNSimTextUI	file:
updateAllNodes	src/test/AbstractRouterTest.java	/^	protected void updateAllNodes() {$/;"	m	class:AbstractRouterTest
updateDeliveryPredFor	src/routing/ProphetRouter.java	/^	private void updateDeliveryPredFor(DTNHost host) {$/;"	m	class:ProphetRouter	file:
updateDeliveryPredFor	src/routing/ProphetRouterWithEstimation.java	/^	private void updateDeliveryPredFor(DTNHost host) {$/;"	m	class:ProphetRouterWithEstimation	file:
updateDeliveryPredFor	src/routing/ProphetV2Router.java	/^	private void updateDeliveryPredFor(DTNHost host) {$/;"	m	class:ProphetV2Router	file:
updateDouble	src/core/ModuleCommunicationBus.java	/^	public double updateDouble(String key, double delta) throws SimError {$/;"	m	class:ModuleCommunicationBus
updateEstimators	src/routing/MaxPropRouterWithEstimation.java	/^	protected boolean updateEstimators(DTNHost host) {$/;"	m	class:MaxPropRouterWithEstimation
updateField	src/gui/playfield/PlayField.java	/^	public void updateField() {$/;"	m	class:PlayField
updateFieldSize	src/gui/playfield/PlayField.java	/^	private void updateFieldSize() {$/;"	m	class:PlayField	file:
updateHasBeenCalled	src/report/ContactsDuringAnICTReport.java	/^	private boolean updateHasBeenCalled;$/;"	f	class:ContactsDuringAnICTReport	file:
updateHosts	src/core/World.java	/^	private void updateHosts() {$/;"	m	class:World	file:
updateIET	src/routing/ProphetRouterWithEstimation.java	/^	private boolean updateIET(DTNHost host) {$/;"	m	class:ProphetRouterWithEstimation	file:
updateInterval	src/core/SimScenario.java	/^	private double updateInterval;$/;"	f	class:SimScenario	file:
updateInterval	src/core/World.java	/^	private double updateInterval;$/;"	f	class:World	file:
updateList	src/gui/NodeChooser.java	/^	private void updateList() {$/;"	m	class:NodeChooser	file:
updateListeners	src/core/SimScenario.java	/^	private List<UpdateListener> updateListeners;$/;"	f	class:SimScenario	file:
updateListeners	src/core/World.java	/^	private List<UpdateListener> updateListeners;$/;"	f	class:World	file:
updateLocation	src/interfaces/ConnectivityGrid.java	/^	public void updateLocation(NetworkInterface ni) {$/;"	m	class:ConnectivityGrid
updateLocation	src/interfaces/ConnectivityOptimizer.java	/^	abstract public void updateLocation(NetworkInterface ni);$/;"	m	class:ConnectivityOptimizer
updateLogView	src/gui/EventLogPanel.java	/^	private void updateLogView() {$/;"	m	class:EventLogPanel	file:
updateMap	src/input/WKTMapReader.java	/^	private void updateMap(List<Coord> coords) {$/;"	m	class:WKTMapReader	file:
updateMeetingProbFor	src/routing/maxprop/MeetingProbabilitySet.java	/^	public void updateMeetingProbFor(Integer index) {$/;"	m	class:MeetingProbabilitySet
updateMeetingProbFor	src/routing/maxprop/MeetingProbabilitySet.java	/^	public void updateMeetingProbFor(Integer index, double iet)	{$/;"	m	class:MeetingProbabilitySet
updateOrder	src/core/World.java	/^	private ArrayList<DTNHost> updateOrder;$/;"	f	class:World	file:
updateParam	src/routing/MaxPropRouterWithEstimation.java	/^	protected void updateParam()$/;"	m	class:MaxPropRouterWithEstimation
updateParams	src/routing/ProphetRouterWithEstimation.java	/^	private void updateParams()$/;"	m	class:ProphetRouterWithEstimation	file:
updatePlayfieldSettings	src/gui/SimMenuBar.java	/^	private void updatePlayfieldSettings() {$/;"	m	class:SimMenuBar	file:
updateProperty	src/core/Message.java	/^	public void updateProperty(String key, Object value) throws SimError {$/;"	m	class:Message
updateProperty	src/core/ModuleCommunicationBus.java	/^	public void updateProperty(String key, Object value) throws SimError {$/;"	m	class:ModuleCommunicationBus
updateShownNodes	src/gui/NodeChooser.java	/^	private void updateShownNodes() {$/;"	m	class:NodeChooser	file:
updateTransferredBytesAvg	src/routing/MaxPropRouter.java	/^	private void updateTransferredBytesAvg(int newValue) {$/;"	m	class:MaxPropRouter	file:
updateTransferredBytesAvg	src/routing/MaxPropRouterWithEstimation.java	/^	private void updateTransferredBytesAvg(int newValue) {$/;"	m	class:MaxPropRouterWithEstimation	file:
updateTransitivePreds	src/routing/ProphetRouter.java	/^	private void updateTransitivePreds(DTNHost host) {$/;"	m	class:ProphetRouter	file:
updateTransitivePreds	src/routing/ProphetRouterWithEstimation.java	/^	private void updateTransitivePreds(DTNHost host) {$/;"	m	class:ProphetRouterWithEstimation	file:
updateTransitivePreds	src/routing/ProphetV2Router.java	/^	private void updateTransitivePreds(DTNHost host) {$/;"	m	class:ProphetV2Router	file:
updateTransitiveProbs	src/routing/MaxPropRouter.java	/^	private void updateTransitiveProbs(Map<Integer, MeetingProbabilitySet> p) {$/;"	m	class:MaxPropRouter	file:
updateTransitiveProbs	src/routing/MaxPropRouterWithEstimation.java	/^	private void updateTransitiveProbs(Map<Integer, MeetingProbabilitySet> p) {$/;"	m	class:MaxPropRouterWithEstimation	file:
updateTree	src/gui/RoutingInfoWindow.java	/^	private void updateTree() {$/;"	m	class:RoutingInfoWindow	file:
updateUpdateInterval	src/gui/GUIControls.java	/^	private void updateUpdateInterval() {$/;"	m	class:GUIControls	file:
updateView	src/gui/DTNSimGUI.java	/^    private void updateView() {$/;"	m	class:DTNSimGUI	file:
updateZoomScale	src/gui/GUIControls.java	/^	private void updateZoomScale(boolean centerView) {$/;"	m	class:GUIControls	file:
updated	src/core/UpdateListener.java	/^	public void updated(List<DTNHost> hosts);$/;"	m	interface:UpdateListener
updated	src/report/BufferOccupancyReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:BufferOccupancyReport
updated	src/report/ContactsDuringAnICTReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:ContactsDuringAnICTReport
updated	src/report/EncountersVSUniqueEncountersReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:EncountersVSUniqueEncountersReport
updated	src/report/MessageLocationReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:MessageLocationReport
updated	src/report/SamplingReport.java	/^	public void updated(final List<DTNHost> hosts) {$/;"	m	class:SamplingReport
updated	src/report/SnapshotReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:SnapshotReport
updated	src/report/TotalContactTimeReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:TotalContactTimeReport
updated	src/report/TotalEncountersReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:TotalEncountersReport
updated	src/report/UniqueEncountersReport.java	/^	public void updated(List<DTNHost> hosts) {$/;"	m	class:UniqueEncountersReport
updates	src/input/ScheduledUpdatesQueue.java	/^	private List<ExternalEvent> updates;$/;"	f	class:ScheduledUpdatesQueue	file:
usage	toolkit/ccdfPlotter.pl	/^usage:  -out <output file name>$/;"	l
usage	toolkit/dieselnetConverter.pl	/^usage: -out <output file name> [-help] [-first <first time stamp>]$/;"	l
usage	toolkit/getAverages.pl	/^usage: [-error] [-help] <input file names>$/;"	l
usage	toolkit/getStats.pl	/^usage: -stat <statName> [-label <labelExtractingRe>]$/;"	l
usage	toolkit/getStatsAverages.pl	/^usage: [-error] [-help] <input file names>$/;"	l
usage	toolkit/messageAvailabilityAnalyzer.pl	/^usage: [-help] <input file name(s)>$/;"	l
usage	toolkit/messageAvailabilityAnalyzer2.pl	/^usage: [-help] [-fname] [-perc <percentile>] [-count] [-icounts] [-ids] [-avg] [-verbose]$/;"	l
usage	toolkit/messageCopyCountAnalyzer.pl	/^usage: [-help] [-perc <percentile>] [-foreach] [-verbose]$/;"	l
usage	toolkit/messageCopyCountPlotter.pl	/^usage: [-help] [-foreach] [-countplot] [-verbose]$/;"	l
usage	toolkit/messageLocationAnimator.pl	/^usage: -name <name of the animation>$/;"	l
usage	toolkit/splotEnergy.pl	/^usage: -name <output file name> [-every <value>] [-term <gnuplot terminal>]$/;"	l
usageCount	src/routing/schedule/ScheduleEntry.java	/^	private int usageCount;$/;"	f	class:ScheduleEntry	file:
useHourDisplay	src/gui/GUIControls.java	/^	private boolean useHourDisplay = false;$/;"	f	class:GUIControls	file:
util	src/util/ActivenessHandler.java	/^package util;$/;"	p
util	src/util/ParetoRNG.java	/^package util;$/;"	p
util	src/util/Range.java	/^package util;$/;"	p
util	src/util/Tuple.java	/^package util;$/;"	p
utils	src/test/AbstractRouterTest.java	/^	protected TestUtils utils;$/;"	f	class:AbstractRouterTest
utils	src/test/AdjacencyGraphvizReportTest.java	/^	private TestUtils utils;$/;"	f	class:AdjacencyGraphvizReportTest	file:
utils	src/test/DistanceDelayReportTest.java	/^	private TestUtils utils;$/;"	f	class:DistanceDelayReportTest	file:
utils	src/test/MessageGraphvizReportTest.java	/^	private TestUtils utils;$/;"	f	class:MessageGraphvizReportTest	file:
value	src/util/Tuple.java	/^	private V value;$/;"	f	class:Tuple	file:
valueFillString	src/core/Settings.java	/^	public String valueFillString(String input) {$/;"	m	class:Settings
values	src/core/ModuleCommunicationBus.java	/^	private HashMap<String, Object> values;$/;"	f	class:ModuleCommunicationBus	file:
verticalCount	src/report/NodeDensityReport.java	/^	private final int verticalCount;$/;"	f	class:NodeDensityReport	file:
via	src/routing/schedule/ScheduleEntry.java	/^	private int via;$/;"	f	class:ScheduleEntry	file:
visited	src/movement/map/DijkstraPathFinder.java	/^	private Set<MapNode> visited;$/;"	f	class:DijkstraPathFinder	file:
visited	src/routing/maxprop/MaxPropDijkstra.java	/^	private Set<Integer> visited;$/;"	f	class:MaxPropDijkstra	file:
visited	src/routing/schedule/ScheduleDijkstra.java	/^	private Set<Integer> visited;$/;"	f	class:ScheduleDijkstra	file:
vms	src/core/DTNHost.java	/^    private List<VM> vms;$/;"	f	class:DTNHost	file:
w	src/gui/playfield/PlayField.java	/^	private World w;$/;"	f	class:PlayField	file:
wait	src/gui/DTNSimGUI.java	/^	private void wait(int ms) {$/;"	m	class:DTNSimGUI	file:
waitTimeAtEnd	src/movement/EveningTrip.java	/^	private double waitTimeAtEnd;$/;"	f	class:EveningTrip	file:
warmupIDs	src/report/Report.java	/^	protected Set<String> warmupIDs;$/;"	f	class:Report
warmupMovementModel	src/core/World.java	/^	public void warmupMovementModel(double time) {$/;"	m	class:World
warmupTime	src/report/Report.java	/^	protected int warmupTime;$/;"	f	class:Report
warmupTime	src/routing/util/EnergyModel.java	/^	private double warmupTime;$/;"	f	class:EnergyModel	file:
warn	src/gui/SimMenuBar.java	/^	private void warn(String txt) {$/;"	m	class:SimMenuBar	file:
workDayLength	src/movement/OfficeActivityMovement.java	/^	private int workDayLength;$/;"	f	class:OfficeActivityMovement	file:
workerMM	src/movement/WorkingDayMovement.java	/^	private OfficeActivityMovement workerMM;$/;"	f	class:WorkingDayMovement	file:
world	src/core/SimScenario.java	/^	private World world;$/;"	f	class:SimScenario	file:
world	src/test/WorldTest.java	/^	private World world;$/;"	f	class:WorldTest	file:
world	src/ui/DTNSimUI.java	/^	protected World world;$/;"	f	class:DTNSimUI
worldSizeX	src/core/SimScenario.java	/^	private int worldSizeX;$/;"	f	class:SimScenario	file:
worldSizeX	src/interfaces/ConnectivityGrid.java	/^	private static int worldSizeX;$/;"	f	class:ConnectivityGrid	file:
worldSizeX	src/test/WorldTest.java	/^	private int worldSizeX = 100;$/;"	f	class:WorldTest	file:
worldSizeY	src/core/SimScenario.java	/^	private int worldSizeY;$/;"	f	class:SimScenario	file:
worldSizeY	src/interfaces/ConnectivityGrid.java	/^	private static int worldSizeY;$/;"	f	class:ConnectivityGrid	file:
worldSizeY	src/test/WorldTest.java	/^	private int worldSizeY = 100;$/;"	f	class:WorldTest	file:
write	src/report/Report.java	/^	protected void write(String txt) {$/;"	m	class:Report
writePlotCommand	toolkit/messageLocationAnimator.pl	/^sub writePlotCommand {$/;"	s
writeSnapshot	src/report/EnergyLevelReport.java	/^	protected void writeSnapshot(DTNHost h) {$/;"	m	class:EnergyLevelReport
writeSnapshot	src/report/LocationSnapshotReport.java	/^	protected void writeSnapshot(DTNHost h) {$/;"	m	class:LocationSnapshotReport
writeSnapshot	src/report/SnapshotReport.java	/^	abstract protected void writeSnapshot(DTNHost host);$/;"	m	class:SnapshotReport
writeToFile	src/test/MapBasedMovementTest.java	/^	private void writeToFile(String path) throws IOException {$/;"	m	class:MapBasedMovementTest	file:
writeToNewFile	src/test/MapBasedMovementTest.java	/^	private String writeToNewFile() throws IOException {$/;"	m	class:MapBasedMovementTest	file:
writtenSettings	src/core/Settings.java	/^	private static Set<String> writtenSettings = new HashSet<String>();$/;"	f	class:Settings	file:
x	src/core/Coord.java	/^	private double x;$/;"	f	class:Coord	file:
x	src/input/ExternalPathMovementReader.java	/^		public double x;$/;"	f	class:ExternalPathMovementReader.Entry
xm	src/util/ParetoRNG.java	/^	private double xm; \/\/ min value (Xm)$/;"	f	class:ParetoRNG	file:
y	src/core/Coord.java	/^	private double y;$/;"	f	class:Coord	file:
y	src/input/ExternalPathMovementReader.java	/^		public double y;$/;"	f	class:ExternalPathMovementReader.Entry
zoomSelector	src/gui/GUIControls.java	/^	private javax.swing.JSpinner zoomSelector;$/;"	f	class:GUIControls	file:
